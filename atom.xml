<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Akira's Tech Notes]]></title>
  <link href="http://luozengbin.github.io/atom.xml" rel="self"/>
  <link href="http://luozengbin.github.io/"/>
  <updated>2014-11-16T23:41:18+09:00</updated>
  <id>http://luozengbin.github.io/</id>
  <author>
    <name><![CDATA[luozengbin]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[[メモ]自宅サーバディスク増設記録]]></title>
    <link href="http://luozengbin.github.io/blog/2014-11-16-%5B%E3%83%A1%E3%83%A2%5D%E8%87%AA%E5%AE%85%E3%82%B5%E3%83%BC%E3%83%90%E3%83%87%E3%82%A3%E3%82%B9%E3%82%AF%E5%A2%97%E8%A8%AD%E8%A8%98%E9%8C%B2.html"/>
    <updated>2014-11-16T00:00:00+09:00</updated>
    <id>http://luozengbin.github.io/blog/[メモ]自宅サーバディスク増設記録</id>
    <content type="html"><![CDATA[<div id="table-of-contents">
<h2>Table of Contents</h2>
<div id="text-table-of-contents">
<ul>
<li><a href="#sec-1">1. 環境</a></li>
<li><a href="#sec-2">2. ツールの整備</a></li>
<li><a href="#sec-3">3. ディスク情報確認</a></li>
<li><a href="#sec-4">4. 現在のパーティション構成</a></li>
<li><a href="#sec-5">5. 増設後のパーティション構成</a></li>
<li><a href="#sec-6">6. 増設手順</a>
<ul>
<li><a href="#sec-6-1">6.1. gdiskでパーティションを初期化する</a></li>
<li><a href="#sec-6-2">6.2. LVMパーティション再構成</a></li>
<li><a href="#sec-6-3">6.3. 増設結果を確認する</a></li>
</ul>
</li>
<li><a href="#sec-7">7. 参考情報</a></li>
</ul>
</div>
</div>
<p>
半年前、約1年ちょっと使った <a href="http://www.wdc.com/global/products/specs/?driveID=1092&language=6">WD Blue(WD10EZEX)</a> ディスクが壊れた (I/Oスピードが激遅い現
象が起きた)ため、RMA保証手続きで交換しました。交換で約1ヶ月かかる、かつサーバがRAID0構
成のため、代用品を購入し、復旧を実施した。RAM交換で届いたディスクがずっと置いたまま、
今日もう一台のNASサーバに増設を実施します。
</p>

<p>
<!-- more -->
</p>

<div id="outline-container-sec-1" class="outline-2">
<h2 id="sec-1"><span class="section-number-2">1</span> 環境</h2>
<div class="outline-text-2" id="text-1">
<table border="2" cellspacing="0" cellpadding="6" rules="groups" frame="hsides">


<colgroup>
<col  class="left" />

<col  class="left" />
</colgroup>
<tbody>
<tr>
<td class="left">OS</td>
<td class="left">CentOS Linux release 7.0.1406 (Core)</td>
</tr>

<tr>
<td class="left">/dev/sda</td>
<td class="left"><a href="http://www.crucial.com/usa/en/storage-ssd-mx100-ja">Crucial MX100 2.5インチ内蔵型SSD 256GB SATAIII</a></td>
</tr>

<tr>
<td class="left">/dev/sdb</td>
<td class="left">増設HDD: WD10EZEX [1TB SATA600 7200]</td>
</tr>
</tbody>
</table>
</div>
</div>

<div id="outline-container-sec-2" class="outline-2">
<h2 id="sec-2"><span class="section-number-2">2</span> ツールの整備</h2>
<div class="outline-text-2" id="text-2">
<p>
<code>hdparm</code> は HDD (SATA/IDE)デバイスのパフォーマンスとベンチマークのツールです｡
</p>
<pre class="example">
$ sudo yum install hdparm
</pre>

<p>
<code>sdparm</code> SCSIデバイスのパフォーマンスとベンチマークのツールです｡
</p>
<pre class="example">
$ sudo yum install sdparm
</pre>

<p>
GPTをサポートするパーティションリングツール
</p>
<pre class="example">
$ sudo yum install gdisk
</pre>
</div>
</div>

<div id="outline-container-sec-3" class="outline-2">
<h2 id="sec-3"><span class="section-number-2">3</span> ディスク情報確認</h2>
<div class="outline-text-2" id="text-3">
<p>
<code>/dev/sda</code> SSDのハード情報を確認する。
</p>
<pre class="example">
$ sudo hdparm -I /dev/sda

/dev/sda:

ATA device, with non-removable media
	Model Number:       Crucial_CT256MX100SSD1
	Serial Number:      ************
	Firmware Revision:  *****
	Transport:          Serial, ATA8-AST, SATA 1.0a, SATA II Extensions, SATA Rev 2.5, SATA Rev 2.6, SATA Rev 3.0
Standards:
	Used: unknown (minor revision code 0x0028)
	Supported: 9 8 7 6 5 
	Likely used: 9
Configuration:
	Logical		max	current
	cylinders	16383	16383
	heads		16	16
	sectors/track	63	63
	--
	CHS current addressable sectors:   16514064
	LBA    user addressable sectors:  268435455
	LBA48  user addressable sectors:  500118192
	Logical  Sector size:                   512 bytes
	Physical Sector size:                  4096 bytes
	Logical Sector-0 offset:                  0 bytes
	device size with M = 1024*1024:      244198 MBytes
	device size with M = 1000*1000:      256060 MBytes (256 GB)
	cache/buffer size  = unknown
	Form Factor: 2.5 inch
	Nominal Media Rotation Rate: Solid State Device
Capabilities:
	LBA, IORDY(can be disabled)
	Queue depth: 32
	Standby timer values: spec'd by Standard, with device specific minimum
	R/W multiple sector transfer: Max = 16	Current = 16
	Advanced power management level: 254
	DMA: mdma0 mdma1 mdma2 udma0 udma1 udma2 udma3 udma4 udma5 *udma6 
	     Cycle time: min=120ns recommended=120ns
	PIO: pio0 pio1 pio2 pio3 pio4 
	     Cycle time: no flow control=120ns  IORDY flow control=120ns
Commands/features:
	Enabled	Supported:
	   *	SMART feature set
	    	Security Mode feature set
	   *	Power Management feature set
	   *	Write cache
	   *	Look-ahead
	   *	Host Protected Area feature set
	   *	WRITE_BUFFER command
	   *	READ_BUFFER command
	   *	NOP cmd
	   *	DOWNLOAD_MICROCODE
	   *	Advanced Power Management feature set
	    	SET_MAX security extension
	   *	48-bit Address feature set
	   *	Device Configuration Overlay feature set
	   *	Mandatory FLUSH_CACHE
	   *	FLUSH_CACHE_EXT
	   *	SMART error logging
	   *	SMART self-test
	   *	General Purpose Logging feature set
	   *	WRITE_{DMA|MULTIPLE}_FUA_EXT
	   *	64-bit World wide name
	   *	IDLE_IMMEDIATE with UNLOAD
	    	Write-Read-Verify feature set
	   *	WRITE_UNCORRECTABLE_EXT command
	   *	{READ,WRITE}_DMA_EXT_GPL commands
	   *	Segmented DOWNLOAD_MICROCODE
	   *	Gen1 signaling speed (1.5Gb/s)
	   *	Gen2 signaling speed (3.0Gb/s)
	   *	Gen3 signaling speed (6.0Gb/s)
	   *	Native Command Queueing (NCQ)
	   *	Phy event counters
	   *	NCQ priority information
	   *	unknown 76[15]
	   *	DMA Setup Auto-Activate optimization
	    	Device-initiated interface power management
	    	Asynchronous notification (eg. media change)
	   *	Software settings preservation
	    	unknown 78[8]
	   *	SMART Command Transport (SCT) feature set
	   *	SCT Write Same (AC2)
	   *	SCT Features Control (AC4)
	   *	SCT Data Tables (AC5)
	   *	reserved 69[4]
	   *	reserved 69[7]
	   *	Data Set Management TRIM supported (limit 8 blocks)
	   *	Deterministic read ZEROs after TRIM
Security: 
	Master password revision code = 65534
		supported
	not	enabled
	not	locked
		frozen
	not	expired: security count
		supported: enhanced erase
	2min for SECURITY ERASE UNIT. 2min for ENHANCED SECURITY ERASE UNIT.
Logical Unit WWN Device Identifier: ***************
	NAA		: 5
	IEEE OUI	: 00a075
	Unique ID	: ********
Checksum: correct
</pre>

<p>
<code>/dev/sdb</code> HDDのハード情報を確認する。
</p>
<pre class="example">
$ sudo hdparm -I /dev/sdb

/dev/sdb:

ATA device, with non-removable media
	Model Number:       WDC WD10EZEX-00RKKA0
	Serial Number:      WD-WMC**********
	Firmware Revision:  80.00A80
	Transport:          Serial, SATA 1.0a, SATA II Extensions, SATA Rev 2.5, SATA Rev 2.6, SATA Rev 3.0
Standards:
	Supported: 8 7 6 5 
	Likely used: 8
Configuration:
	Logical		max	current
	cylinders	16383	16383
	heads		16	16
	sectors/track	63	63
	--
	CHS current addressable sectors:   16514064
	LBA    user addressable sectors:  268435455
	LBA48  user addressable sectors: 1953525168
	Logical  Sector size:                   512 bytes
	Physical Sector size:                  4096 bytes
	device size with M = 1024*1024:      953869 MBytes
	device size with M = 1000*1000:     1000204 MBytes (1000 GB)
	cache/buffer size  = unknown
Capabilities:
	LBA, IORDY(can be disabled)
	Queue depth: 32
	Standby timer values: spec'd by Standard, with device specific minimum
	R/W multiple sector transfer: Max = 16	Current = 16
	DMA: mdma0 mdma1 mdma2 udma0 udma1 udma2 udma3 udma4 udma5 *udma6 
	     Cycle time: min=120ns recommended=120ns
	PIO: pio0 pio1 pio2 pio3 pio4 
	     Cycle time: no flow control=120ns  IORDY flow control=120ns
Commands/features:
	Enabled	Supported:
	   *	SMART feature set
	    	Security Mode feature set
	   *	Power Management feature set
	   *	Write cache
	   *	Look-ahead
	   *	Host Protected Area feature set
	   *	WRITE_BUFFER command
	   *	READ_BUFFER command
	   *	NOP cmd
	   *	DOWNLOAD_MICROCODE
	    	Power-Up In Standby feature set
	   *	SET_FEATURES required to spinup after power up
	    	SET_MAX security extension
	   *	48-bit Address feature set
	   *	Device Configuration Overlay feature set
	   *	Mandatory FLUSH_CACHE
	   *	FLUSH_CACHE_EXT
	   *	SMART error logging
	   *	SMART self-test
	   *	General Purpose Logging feature set
	   *	64-bit World wide name
	   *	{READ,WRITE}_DMA_EXT_GPL commands
	   *	Segmented DOWNLOAD_MICROCODE
	   *	Gen1 signaling speed (1.5Gb/s)
	   *	Gen2 signaling speed (3.0Gb/s)
	   *	Gen3 signaling speed (6.0Gb/s)
	   *	Native Command Queueing (NCQ)
	   *	Host-initiated interface power management
	   *	Phy event counters
	   *	NCQ priority information
	   *	unknown 76[15]
	   *	DMA Setup Auto-Activate optimization
	   *	Software settings preservation
	   *	SMART Command Transport (SCT) feature set
	   *	SCT Write Same (AC2)
	   *	SCT Features Control (AC4)
	   *	SCT Data Tables (AC5)
	    	unknown 206[7]
	    	unknown 206[12] (vendor specific)
	    	unknown 206[13] (vendor specific)
Security: 
	Master password revision code = 65534
		supported
	not	enabled
	not	locked
		frozen
	not	expired: security count
		supported: enhanced erase
	112min for SECURITY ERASE UNIT. 112min for ENHANCED SECURITY ERASE UNIT. 
Logical Unit WWN Device Identifier: ****************
	NAA		: 5
	IEEE OUI	: 0014ee
	Unique ID	: ******
Checksum: correct
$
</pre>
</div>
</div>

<div id="outline-container-sec-4" class="outline-2">
<h2 id="sec-4"><span class="section-number-2">4</span> 現在のパーティション構成</h2>
<div class="outline-text-2" id="text-4">
<p>
<code>/dev/sda</code> の物理パーティション構成を確認する。
</p>
<pre class="example">
$ sudo gdisk -l /dev/sda 
GPT fdisk (gdisk) version 0.8.6

Partition table scan:
  MBR: protective
  BSD: not present
  APM: not present
  GPT: present

Found valid GPT with protective MBR; using GPT.
Disk /dev/sda: 500118192 sectors, 238.5 GiB
Logical sector size: 512 bytes
Disk identifier (GUID): A2BE7525-7A02-4E36-8C41-B9E4487690BD
Partition table holds up to 128 entries
First usable sector is 34, last usable sector is 500118158
Partitions will be aligned on 2048-sector boundaries
Total free space is 2669 sectors (1.3 MiB)

Number  Start (sector)    End (sector)  Size       Code  Name
   1            2048          411647   200.0 MiB   EF00  EFI System Partition
   2          411648         1435647   500.0 MiB   0700  
   3         1435648       500117503   237.8 GiB   8E00  
$
</pre>

<p>
LVMの構成状況
</p>
<pre class="example">
$ sudo lvmdiskscan
  /dev/centos/swap [       7.27 GiB] 
  /dev/sda1        [     200.00 MiB] 
  /dev/centos/root [      50.00 GiB] 
  /dev/sda2        [     500.00 MiB] 
  /dev/centos/home [     180.52 GiB] 
........
</pre>

<p>
先頭の物理パーティションをブート関係用にマウントしています。
</p>
<table border="2" cellspacing="0" cellpadding="6" rules="groups" frame="hsides">


<colgroup>
<col  class="left" />

<col  class="left" />

<col  class="left" />

<col  class="left" />
</colgroup>
<tbody>
<tr>
<td class="left">/dev/sda1</td>
<td class="left">vfat</td>
<td class="left">/boot/efi</td>
<td class="left">200MB</td>
</tr>

<tr>
<td class="left">/dev/sda2</td>
<td class="left">xfs</td>
<td class="left">/boot</td>
<td class="left">500MB</td>
</tr>
</tbody>
</table>

<p>
三番目の物理パーティションをLVMで割って使っています。
</p>
<table border="2" cellspacing="0" cellpadding="6" rules="groups" frame="hsides">


<colgroup>
<col  class="left" />

<col  class="left" />

<col  class="left" />

<col  class="left" />

<col  class="left" />

<col  class="left" />
</colgroup>
<thead>
<tr>
<th scope="col" class="left">PV</th>
<th scope="col" class="left">VG</th>
<th scope="col" class="left">LV</th>
<th scope="col" class="left">Format</th>
<th scope="col" class="left">Mount Point</th>
<th scope="col" class="left">Size</th>
</tr>
</thead>
<tbody>
<tr>
<td class="left">/dev/sda3</td>
<td class="left">centos</td>
<td class="left">/dev/centos/swap</td>
<td class="left">swap</td>
<td class="left">&#xa0;</td>
<td class="left">7.27G</td>
</tr>

<tr>
<td class="left">&#xa0;</td>
<td class="left">&#xa0;</td>
<td class="left">/dev/centos/home</td>
<td class="left">xfs</td>
<td class="left">/</td>
<td class="left">180G</td>
</tr>

<tr>
<td class="left">&#xa0;</td>
<td class="left">&#xa0;</td>
<td class="left">/dev/centos/root</td>
<td class="left">xfs</td>
<td class="left">/home</td>
<td class="left">50G</td>
</tr>
</tbody>
</table>
</div>
</div>

<div id="outline-container-sec-5" class="outline-2">
<h2 id="sec-5"><span class="section-number-2">5</span> 増設後のパーティション構成</h2>
<div class="outline-text-2" id="text-5">
<p>
増設したHDDに <code>vg01</code> を増やして、 <code>/home</code> と <code>/var</code> をこちら配置するようにする。
</p>
<table border="2" cellspacing="0" cellpadding="6" rules="groups" frame="hsides">


<colgroup>
<col  class="left" />

<col  class="left" />

<col  class="left" />

<col  class="left" />

<col  class="left" />

<col  class="left" />
</colgroup>
<thead>
<tr>
<th scope="col" class="left">PV</th>
<th scope="col" class="left">VG</th>
<th scope="col" class="left">LV</th>
<th scope="col" class="left">Format</th>
<th scope="col" class="left">Mount Point</th>
<th scope="col" class="left">Size</th>
</tr>
</thead>
<tbody>
<tr>
<td class="left">/dev/sda3</td>
<td class="left">centos</td>
<td class="left">/dev/centos/swap</td>
<td class="left">swap</td>
<td class="left">&#xa0;</td>
<td class="left">7.27G</td>
</tr>

<tr>
<td class="left">&#xa0;</td>
<td class="left">&#xa0;</td>
<td class="left">/dev/centos/root</td>
<td class="left">xfs</td>
<td class="left">/</td>
<td class="left">230G</td>
</tr>

<tr>
<td class="left">/dev/sdb1</td>
<td class="left">vg01</td>
<td class="left">/dev/vg01/home</td>
<td class="left">xfs</td>
<td class="left">/home</td>
<td class="left">431G</td>
</tr>

<tr>
<td class="left">&#xa0;</td>
<td class="left">&#xa0;</td>
<td class="left">/dev/vg01/var</td>
<td class="left">xfs</td>
<td class="left">/var</td>
<td class="left">500G</td>
</tr>
</tbody>
</table>
</div>
</div>

<div id="outline-container-sec-6" class="outline-2">
<h2 id="sec-6"><span class="section-number-2">6</span> 増設手順</h2>
<div class="outline-text-2" id="text-6">
</div><div id="outline-container-sec-6-1" class="outline-3">
<h3 id="sec-6-1"><span class="section-number-3">6.1</span> gdiskでパーティションを初期化する</h3>
<div class="outline-text-3" id="text-6-1">
<pre class="example">
$ sudo gdisk /dev/sdb
GPT fdisk (gdisk) version 0.8.6

Partition table scan:
  MBR: not present
  BSD: not present
  APM: not present
  GPT: not present

Creating new GPT entries.

Command (? for help): o        ★GPTパーティションテーブルを新規作成する
This option deletes all partitions and creates a new protective MBR.
Proceed? (Y/N): Y

Command (? for help): n        ★新規パーティションを作成する
Partition number (1-128, default 1): 
First sector (34-1953525134, default = 2048) or {+-}size{KMGTP}: 
Last sector (2048-1953525134, default = 1953525134) or {+-}size{KMGTP}: 
Current type is 'Linux filesystem'
Hex code or GUID (L to show codes, Enter = 8300): 8e00 ★パーティションタイプをLVMにする
Changed type of partition to 'Linux LVM'

Command (? for help): w

Final checks complete. About to write GPT data. THIS WILL OVERWRITE EXISTING
PARTITIONS!!

Do you want to proceed? (Y/N): Y
OK; writing new GUID partition table (GPT) to /dev/sdb.
The operation has completed successfully.
$
</pre>

<p>
結果を確認する
</p>
<pre class="example">
$ sudo gdisk -l /dev/sdb
GPT fdisk (gdisk) version 0.8.6

Partition table scan:
  MBR: protective
  BSD: not present
  APM: not present
  GPT: present

Found valid GPT with protective MBR; using GPT.
Disk /dev/sdb: 1953525168 sectors, 931.5 GiB
Logical sector size: 512 bytes
Disk identifier (GUID): DE117DAF-1D96-4505-89EC-6F1E6BB08E4C
Partition table holds up to 128 entries
First usable sector is 34, last usable sector is 1953525134
Partitions will be aligned on 2048-sector boundaries
Total free space is 2014 sectors (1007.0 KiB)

Number  Start (sector)    End (sector)  Size       Code  Name
   1            2048      1953525134   931.5 GiB   8E00  Linux LVM
</pre>
</div>
</div>

<div id="outline-container-sec-6-2" class="outline-3">
<h3 id="sec-6-2"><span class="section-number-3">6.2</span> LVMパーティション再構成</h3>
<div class="outline-text-3" id="text-6-2">
<p>
PV <code>/dev/sdb1</code> 作成する
</p>
<pre class="example">
$ sudo pvcreate /dev/sdb1
  Physical volume "/dev/sdb1" successfully created
</pre>

<p>
VG <code>vg01</code> を作成する
</p>
<pre class="example">
$ sudo vgcreate vg01 /dev/sdb1
  Volume group "vg01" successfully created
</pre>

<p>
VG <code>centos</code> の <code>home</code> 論理ボリュームを 一旦 <code>home0</code> にリネームする。
</p>
<pre class="example">
$ sudo lvrename centos home home0
  Renamed "home" to "home0" in volume group "centos"
</pre>

<p>
VG <code>vg01</code> 上で <code>/var</code> 用の <code>var</code> 論理ボリュームを作成する。
</p>
<pre class="example">
$ sudo lvcreate -L 500G vg01 -n var
  Logical volume "var" created
</pre>

<p>
VG <code>vg01</code> 上残りに容量を <code>/home</code> 用の <code>home</code> 論理ボリュームを作成する。
</p>
<pre class="example">
$ sudo lvcreate -l +100%FREE vg01 -n home
  Logical volume "home" created
</pre>

<p>
<code>var</code> 論理ボリュームを <code>xfs</code> タイプファイルシステムでフォーマットする。
</p>
<pre class="example">
$ sudo mkfs.xfs /dev/mapper/vg01-var 
meta-data=/dev/mapper/vg01-var   isize=256    agcount=4, agsize=32768000 blks
         =                       sectsz=4096  attr=2, projid32bit=1
         =                       crc=0
data     =                       bsize=4096   blocks=131072000, imaxpct=25
         =                       sunit=0      swidth=0 blks
naming   =version 2              bsize=4096   ascii-ci=0 ftype=0
log      =internal log           bsize=4096   blocks=64000, version=2
         =                       sectsz=4096  sunit=1 blks, lazy-count=1
realtime =none                   extsz=4096   blocks=0, rtextents=0

$#+end_example

=home= 論理ボリュームを =xfs= タイプファイルシステムでフォーマットする。
#+begin_example
$ sudo mkfs.xfs /dev/mapper/vg01-home 
meta-data=/dev/mapper/vg01-home  isize=256    agcount=4, agsize=28279296 blks
         =                       sectsz=4096  attr=2, projid32bit=1
         =                       crc=0
data     =                       bsize=4096   blocks=113117184, imaxpct=25
         =                       sunit=0      swidth=0 blks
naming   =version 2              bsize=4096   ascii-ci=0 ftype=0
log      =internal log           bsize=4096   blocks=55233, version=2
         =                       sectsz=4096  sunit=1 blks, lazy-count=1
realtime =none                   extsz=4096   blocks=0, rtextents=0
$
</pre>

<p>
<code>/home</code> 領域データをコピーする。
</p>
<pre class="example">
$ sudo mount /dev/mapper/vg01-home /mnt/
$ sudo cp --archive /home /mnt
$ ls -al /mnt/
合計 4
drwxr-xr-x   3 root root   17 11月 16 22:04 .
drwxr-xr-x. 17 root root 4096 11月 10 21:46 ..
drwxr-xr-x.  3 root root   18  9月 14 23:07 home
$ sudo mv /mnt/home/* /mnt/
$ sudo rm -rf /mnt/home/
$ sudo umount /mnt
</pre>

<p>
<code>/var</code> 領域を使用しているサービスを止めて、データをコピーする。
</p>
<pre class="example">
$ sudo systemctl stop xxxxx.service
$ sudo mount /dev/mapper/vg01-var /mnt/
$ sudo cp --archive /var /mnt
$ sudo mv /mnt/var/* /mnt/
$ sudo rm -rf /mnt/var/
$ sudo umount /mnt
</pre>

<p>
<code>/etc/fstab</code> を適切に変更する。
</p>
<pre class="example">
/dev/mapper/centos-root /                       xfs     defaults        1 1
/dev/mapper/centos-swap swap                    swap    defaults        0 0
/dev/mapper/vg01-home   /home                   xfs     defaults        1 2
/dev/mapper/vg01-var    /var                    xfs     defaults        1 2
.....
</pre>

<p>
旧 <code>/var</code> ディレクトリ名を適当に変更し、システムを再起動する。
</p>
<pre class="example">
$ sudo mv /var /var.0
</pre>

<p>
<code>root</code> 論理ボリュームを拡張する
</p>
<pre class="example">
★home0論理ボリュームの削除
$ sudo lvremove -f centos/home0
  Logical volume "home0" successfully removed

★root論理ボリュームの拡大
$ sudo lvextend -l +100%FREE centos/root
  Extending logical volume root to 230.52 GiB
  Logical volume root successfully resized

★xfsファイルシステムサイズの拡大
$ xfs_growfs /
</pre>
</div>
</div>


<div id="outline-container-sec-6-3" class="outline-3">
<h3 id="sec-6-3"><span class="section-number-3">6.3</span> 増設結果を確認する</h3>
<div class="outline-text-3" id="text-6-3">
<p>
<code>lvmdiskscan</code> の表示
</p>
<pre class="example">
$ sudo lvmdiskscan 
  /dev/centos/swap [       7.27 GiB] 
  /dev/sda1        [     200.00 MiB] 
  /dev/centos/root [     230.52 GiB] 
  /dev/sda2        [     500.00 MiB] 
  /dev/vg01/var    [     500.00 GiB] 
  /dev/sda3        [     237.79 GiB] LVM physical volume
  /dev/vg01/home   [     431.51 GiB] 
  /dev/sdb1        [     931.51 GiB] LVM physical volume
  4 disks
  2 partitions
  0 LVM physical volume whole disks
  2 LVM physical volumes
</pre>

<p>
<code>df -h</code> の表示
</p>
<pre class="example">
$ df -h
ファイルシス            サイズ  使用  残り 使用% マウント位置
/dev/sda1                 200M  9.6M  191M    5% /boot/efi
/dev/sda2                 494M  203M  292M   42% /boot
/dev/mapper/centos-root   231G   16G  215G    7% /
/dev/mapper/vg01-home     432G  379M  431G    1% /home
/dev/mapper/vg01-var      500G   13G  488G    3% /var
.......
</pre>
</div>
</div>
</div>

<div id="outline-container-sec-7" class="outline-2">
<h2 id="sec-7"><span class="section-number-2">7</span> 参考情報</h2>
<div class="outline-text-2" id="text-7">
<ul class="org-ul">
<li><a href="https://wiki.archlinux.org/index.php/Lvm#lvextend">Archlinux Wiki - LVM</a>
</li>
<li><a href="http://kuenishi.hatenadiary.jp/entry/20070325/1174833266">ディスクを加えてXFS on LVMを拡張する</a>
</li>
<li><a href="https://access.redhat.com/documentation/ja-JP/Red_Hat_Enterprise_Linux/6/html/Storage_Administration_Guide/xfsgrow.html">XFS ファイルシステムのサイズの拡大</a>
</li>
</ul>
</div>
</div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[メモ]ApacheでbackendとのKeepAliveをOFFにする]]></title>
    <link href="http://luozengbin.github.io/blog/2014-10-29-%5B%E3%83%A1%E3%83%A2%5Dapache%E3%81%A7backend%E3%81%A8%E3%81%AEkeepalive%E3%82%92off%E3%81%AB%E3%81%99%E3%82%8B.html"/>
    <updated>2014-10-29T00:00:00+09:00</updated>
    <id>http://luozengbin.github.io/blog/[メモ]apacheでbackendとのkeepaliveをoffにする</id>
    <content type="html"><![CDATA[<div id="table-of-contents">
<h2>Table of Contents</h2>
<div id="text-table-of-contents">
<ul>
<li><a href="#sec-1">1. Apache側でKeepAliveを制御する</a></li>
<li><a href="#sec-2">2. APサーバ側にてKeepAliveを制御する</a></li>
<li><a href="#sec-3">3. 参考</a></li>
</ul>
</div>
</div>
<p>
次のような構成でApacheとAPサーバ間のHTTP KeepAliveが有効にすると
</p>
<ol class="org-ol">
<li>LBの振り分けが偏る可能性がある
</li>
<li>LBの無振り分け先の切り替えに影響が生じる可能性がある、詳細は こちらの記事 を参照してください。
</li>
</ol>
<p>
のような不都合があります。
</p>

<pre class="example">
+----------+         +------------+        +-----------+     +-------------+
| Client   +---------&gt; Apache     +--------&gt;   LB      +-----&gt; AP Server   |
+----------+         +------------+        +-----------+     +-------------+
</pre>

<p>
とい言うわけでApacheとAPサーバ間KeepAliveをOFFにする方法を調査した。
</p>

<p>
<!-- more -->
</p>

<div id="outline-container-sec-1" class="outline-2">
<h2 id="sec-1"><span class="section-number-2">1</span> Apache側でKeepAliveを制御する</h2>
<div class="outline-text-2" id="text-1">
<p>
<code>ProxyPass</code> ディレクティブの <code>keepalive</code> パラメータが期待通り動作しないので迷っていた、
しかしドキュメントによると
</p>

<pre class="example">
バックエンドサーバと Apache の間にファイアーウォールがある場合には、 このパラメータを
使ってください。ファイアウォールは往々にして、 非活動状態のコネクションを落とそうとし
ます。 このフラグは OS に指示して、KEEP_ALIVE メッセージを非活動状態の コネクションで
も送るようにします。これによってファイアウォールによってコネクションが 落とされること
を防げます。keepalive を有効にするには、このプロパティを On にしてください。
</pre>

<p>
HTTP KeepAliveに関係しそうに見えたが、実はあんまり関係ないのようです。
TCPレベルでコネクションをファイアウォールによる切断を防ぐためのパラメータです。
</p>

<p>
更に調べると <code>mod_proxy_http</code> モジュールの環境変数にHTTP KeepAliveに関係するものが
出てきた。
</p>

<ul class="org-ul">
<li>force-proxy-request-1.0
プロキシがバックエンドに HTTP/1.0 でリクエストを送るようにし、HTTP/1.1 の機能を無効にします。
</li>

<li>proxy-nokeepalive
プロキシがリクエスト終了後にバックエンドとの接続を切るようにします。
</li>
</ul>

<p>
よし！これだそう。次のように設定したらうまくできた。
</p>
<pre class="example">
&lt;Location /test/&gt;
    ProxyPass http://dummyhost:8080/app1/
    SetEnv proxy-nokeepalive 1
&lt;/Location&gt;
</pre>

<p>
これで、ApacheからAPサーバへのHTTPリクエストヘッダに <code>Connection: close</code> が付与される
ようになりました。 <code>tcpdump</code> でパケットのやり取りを確認すると、ちゃんと毎回クライアン
トのからコネクション切断するためのfinパケットが送信されることを確認しました。
</p>
</div>
</div>


<div id="outline-container-sec-2" class="outline-2">
<h2 id="sec-2"><span class="section-number-2">2</span> APサーバ側にてKeepAliveを制御する</h2>
<div class="outline-text-2" id="text-2">
<p>
一般的にAPサーバ側でもKeepAliveの設定が可能です。
流れ的に、HTTPレスポンスのHTTPヘッダに <code>Connection: close</code> を付与して返すことで
リクエスト側にコネクション切断する旨を伝える。
</p>

<p>
Tomcat起動時に次のJavaオプションを付けるとHTTP KeepAliveがOFFになります。
</p>
<pre class="example">
-Dorg.apache.coyote.http11.Http11Protocol.MAX_KEEP_ALIVE_REQUESTS=1
</pre>
</div>
</div>

<div id="outline-container-sec-3" class="outline-2">
<h2 id="sec-3"><span class="section-number-2">3</span> 参考</h2>
<div class="outline-text-2" id="text-3">
<ul class="org-ul">
<li><a href="http://blog.nomadscafe.jp/2011/07/apache.html">今こそ見直すApacheの設定</a>
</li>
</ul>
</div>
</div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[メモ]Zabbix導入記録]]></title>
    <link href="http://luozengbin.github.io/blog/2014-10-16-%5B%E3%83%A1%E3%83%A2%5Dzabbix%E5%B0%8E%E5%85%A5%E8%A8%98%E9%8C%B2.html"/>
    <updated>2014-10-16T00:00:00+09:00</updated>
    <id>http://luozengbin.github.io/blog/[メモ]zabbix導入記録</id>
    <content type="html"><![CDATA[<div id="table-of-contents">
<h2>Table of Contents</h2>
<div id="text-table-of-contents">
<ul>
<li><a href="#sec-1">1. 構成</a></li>
<li><a href="#sec-2">2. インストール</a></li>
<li><a href="#sec-3">3. zabbixの起動</a></li>
<li><a href="#sec-4">4. Zabbix フロントエンドのインストール</a></li>
<li><a href="#sec-5">5. Zabbix エージェントのインストール</a></li>
<li><a href="#sec-6">6. Zabbixのアンインストール</a></li>
<li><a href="#sec-7">7. 参考</a></li>
</ul>
</div>
</div>
<p>
Zabbix2.4、CentOS7用のrpmが見つからなかったので手動ビルドすることにした。
</p>

<p>
<!-- more -->
</p>

<div id="outline-container-sec-1" class="outline-2">
<h2 id="sec-1"><span class="section-number-2">1</span> 構成</h2>
<div class="outline-text-2" id="text-1">
<pre class="example">
                            +---------------+
                            | Apache 2.4    +---+
                            +---------------+   |         +---------------+
                                                +---------+   Zabbix DB   |
                                                |         +---------------+
              10050       10051                 |         |   PostgreSQL  |
+--------------+            +---------------+   |         +---------------+
| Zabbix Agent +------------+ Zabbix Server +---+
+--------------+            +---------------+
</pre>
</div>
</div>

<div id="outline-container-sec-2" class="outline-2">
<h2 id="sec-2"><span class="section-number-2">2</span> インストール</h2>
<div class="outline-text-2" id="text-2">
<p>
必要なパッケージのインストール。
</p>
<pre class="example">
$ sudo yum install postgresql-devel
$ sudo yum install libxml2 libxml2-devel
$ sudo yum install net-snmp net-snmp-agent  net-snmp-libs net-snmp-devel
$ sudo yum install libcurl libcurl-devel
$ sudo yum install php-bcmath
</pre>

<p>
ソースコードをダウンロードし、ビルドする。
</p>
<pre class="example">
$ wget http://downloads.sourceforge.net/sourceforge/zabbix/zabbix-2.4.1.tar.gz
$ tar xzvf zabbix-2.4.1.tar.gz
$ cd zabbix-2.4.1/
$ ./configure --enable-server --enable-agent  --with-postgresql --with-net-snmp --with-libcurl --with-libxml2 --enable-java --sysconfdir=/etc/zabbix
$ sudo make install
</pre>

<p>
Zabbix設定ファイル、DB初期化用SQLを格納用のディレクトリの作成とファイルのコピー。
</p>
<pre class="example">
$ sudo mkdir -p /etc/zabbix/database/postgresql
$ sudo mkdir -p /etc/zabbix/database/postgresql/upgrade/2.0

$ sudo cp -v ./database/postgresql/*.sql /etc/zabbix/database/postgresql
$ sudo cp -v ./upgrades/dbpatches/2.0/postgresql/patch.sql /etc/zabbix/database/postgresql/upgrade/2.0

$ sudo chmod 0444 /etc/zabbix/database/postgresql/*.sql
$ sudo chmod 0444 /etc/zabbix/database/postgresql/upgrade/2.0/*.sql
</pre>

<p>
Zabbixログ格納用ディレクトリの作成。
</p>
<pre class="example">
$ sudo mkdir -m 0750 /var/log/zabbix
</pre>

<p>
Zabbixプロセス実行ユーザの登録、ディレクトリ権限の付与。
</p>
<pre class="example">
$ sudo groupadd -r zabbix
$ sudo useradd -r -g zabbix -d /dev/null zabbix -s /sbin/nologin
$ sudo chown -R zabbix:zabbix /var/log/zabbix
$ sudo chown -R zabbix:zabbix /etc/zabbix
$ sudo chown -R zabbix:zabbix /usr/local/share/zabbix
</pre>

<p>
Zabbixサーバ設定ファイルにPIDの格納場所を指定する。
</p>
<pre class="example">
$ sudo chmod 0640 /etc/zabbix/zabbix_server.conf
$ sudo sed -i 's:# PidFile=.*:PidFile=/run/zabbix/zabbix_server.pid:' /etc/zabbix/zabbix_server.conf
</pre>

<p>
Zabbixサーバ設定ファイルにログの格納場所を指定する
</p>
<pre class="example">
$ sudo sed -i 's:^LogFile=.*:LogFile=/var/log/zabbix/zabbix_server.log:' /etc/zabbix/zabbix_server.conf
</pre>

<p>
監視結果データ及び監視項目設定データを格納するためのDBを作成する。
</p>
<pre class="example">
# su - postgresql
-bash-4.2$ createuser --pwprompt zabbix      ★接続ユーザの作成
-bash-4.2$ createdb --owner=zabbix zabbix    ★データベース作成
</pre>

<p>
作成したデータベースにスキーマを初期化する。
</p>
<pre class="example">
$ cd /etc/zabbix/database/postgresql
$ psql -U zabbix zabbix &lt; schema.sql
$ psql -U zabbix zabbix &lt; images.sql
$ psql -U zabbix zabbix &lt; data.sql
</pre>

<p>
Zabbixサーバ設定ファイルにDB接続情報を変更する。
</p>
<pre class="example">
DBHost=localhost
DBName=zabbix
DBUser=zabbix
DBPassword=******
DBPort=5432
</pre>

<p>
PIDファイルの親ディレクトリをtmp領域に作成するため、 <code>systemd-tmpfiles</code> 機能でOS起
動時に予め作成するようにする。
</p>

<p>
<code>/usr/lib/tmpfiles.d/zabbix-server.conf</code>
</p>
<pre class="example">
d /run/zabbix 0755 zabbix zabbix -
</pre>

<p>
<code>systemd-tmpfiles</code> 手動実行で、ディレクトリを作成する。OS再起動する場合、この手順は不
要です。
</p>
<pre class="example">
$ sudo systemd-tmpfiles --create /usr/lib/tmpfiles.d/zabbix-server.conf
</pre>

<p>
<code>systemd</code> から起動停止できるように <code>zabbix-server.service</code> を作成する。
</p>

<p>
<code>/usr/lib/systemd/system/zabbix-server.service</code>
</p>
<pre class="example">
[Unit]
Description=Zabbix server
After=syslog.target network.target postgresql.service

[Service]
Type=forking
User=root
ExecStart=/usr/local/sbin/zabbix_server
PIDFile=/run/zabbix/zabbix_server.pid

[Install]
WantedBy=multi-user.target
</pre>
</div>
</div>

<div id="outline-container-sec-3" class="outline-2">
<h2 id="sec-3"><span class="section-number-2">3</span> zabbixの起動</h2>
<div class="outline-text-2" id="text-3">
<p>
<code>systemctl</code> コマンドで起動する。
</p>
<pre class="example">
$ sudo systemctl enable zabbix-server.service
$ sudo systemctl start zabbix-server.service
</pre>

<p>
ポート確認
</p>
<pre class="example">
$ sudo netstat -nutpl | grep zabbix
tcp        0      0 0.0.0.0:10051           0.0.0.0:*               LISTEN      23765/zabbix_server
</pre>

<p>
ログ確認
</p>
<pre class="example">
# cat zabbix_server.log
 23765:20141016:231838.117 Starting Zabbix Server. Zabbix 2.4.1 (revision 49643).
 23765:20141016:231838.118 ****** Enabled features ******
 23765:20141016:231838.118 SNMP monitoring:           YES
 23765:20141016:231838.118 IPMI monitoring:            NO
 23765:20141016:231838.118 WEB monitoring:            YES
 23765:20141016:231838.118 VMware monitoring:         YES
 23765:20141016:231838.118 Jabber notifications:       NO
 23765:20141016:231838.118 Ez Texting notifications:  YES
 23765:20141016:231838.118 ODBC:                       NO
 23765:20141016:231838.118 SSH2 support:               NO
 23765:20141016:231838.118 IPv6 support:               NO
 23765:20141016:231838.118 ******************************
 23765:20141016:231838.118 using configuration file: /etc/zabbix/zabbix_server.conf
 23765:20141016:231838.157 current database version (mandatory/optional): 02040000/02040000
 23765:20141016:231838.157 required mandatory version: 02040000
 23765:20141016:231838.190 server #0 started [main process]
 23775:20141016:231838.191 server #1 started [configuration syncer #1]
 23776:20141016:231838.191 server #2 started [db watchdog #1]
 23777:20141016:231838.191 server #3 started [poller #1]
 23781:20141016:231838.193 server #5 started [poller #3]
 23783:20141016:231838.195 server #7 started [poller #5]
 23782:20141016:231838.201 server #6 started [poller #4]
 23789:20141016:231838.201 server #12 started [trapper #4]
 23786:20141016:231838.202 server #9 started [trapper #1]
 23788:20141016:231838.203 server #11 started [trapper #3]
 23790:20141016:231838.203 server #13 started [trapper #5]
 23794:20141016:231838.204 server #17 started [timer #1]
 23791:20141016:231838.204 server #14 started [icmp pinger #1]
 23787:20141016:231838.204 server #10 started [trapper #2]
 23792:20141016:231838.204 server #15 started [alerter #1]
 23784:20141016:231838.207 server #8 started [unreachable poller #1]
 23795:20141016:231838.208 server #18 started [http poller #1]
 23799:20141016:231838.208 server #21 started [history syncer #2]
 23806:20141016:231838.209 server #23 started [history syncer #4]
 23809:20141016:231838.209 server #26 started [self-monitoring #1]
 23780:20141016:231838.210 server #4 started [poller #2]
 23801:20141016:231838.211 server #22 started [history syncer #3]
 23793:20141016:231838.211 server #16 started [housekeeper #1]
 23797:20141016:231838.211 server #20 started [history syncer #1]
 23807:20141016:231838.214 server #24 started [escalator #1]
 23808:20141016:231838.215 server #25 started [proxy poller #1]
 23796:20141016:231838.309 server #19 started [discoverer #1]
</pre>
</div>
</div>

<div id="outline-container-sec-4" class="outline-2">
<h2 id="sec-4"><span class="section-number-2">4</span> Zabbix フロントエンドのインストール</h2>
<div class="outline-text-2" id="text-4">
<p>
phpコンテンツ格納するディレクトリの作成とコンテンツ実体の格納。
</p>
<pre class="example">
$ sudo mkdir -p /var/www/zabbix
$ sudo cp -r frontends/php/* /var/www/zabbix
$ sudo chown -R apache:apache /var/www/zabbix
$ sudo chmod -R u=rwX,g=rX,o= /var/www/zabbix
</pre>

<p>
<code>/etc/php.ini</code> にてphp実行時パラメータを変更する。
</p>
<pre class="example">
max_execution_time = 300     ★変更
max_input_time = 300         ★変更
post_max_size = 16M          ★変更
memory_limit = 128M
upload_max_filesize = 2M
session.auto_start = 0
date.timezone = "Asia/Tokyo" ★変更
</pre>

<p>
フラフの日本語表示対応
</p>
<pre class="example">
$ sudo yum install ipa-gothic-fonts ipa-pgothic-fonts vlgothic-fonts vlgothic-p-fonts
$ sudo -u apache cp /usr/share/fonts/ipa-gothic/ipag.ttf /var/www/zabbix/fonts/
</pre>

<p>
<code>/var/www/zabbix/include/defines.inc.php</code>
</p>
<pre class="example">
変更前
define('ZBX_GRAPH_FONT_NAME',           'DejaVuSans'); // font file name

変更後
define('ZBX_GRAPH_FONT_NAME',           'ipag'); // font file name
</pre>

<p>
Apache設定内容 <code>/etc/httpd/conf.d/httpd-zabbix.conf</code>
</p>
<pre class="example">
Alias /zabbix /var/www/zabbix
&lt;Location /zabbix&gt;
    # Apache 2.4
    Require local
    #Require host example.com
&lt;/Location&gt;
</pre>

<p>
<code>/etc/httpd/conf/httpd.conf</code>
</p>
<pre class="example">
IncludeOptional conf.d/httpd-zabbix.conf
</pre>

<p>
画面を起動する。
</p>

<video controls>
   <source src="video/2014-10-17_zabbix_install_01.mp4">
</video>

<p>
ウィザードで生成しれたファイルの内容 <code>/var/www/zabbix/conf/zabbix.conf.php</code>
</p>
<pre class="example">
&lt;?php
// Zabbix GUI configuration file
global $DB;

$DB['TYPE']     = 'POSTGRESQL';
$DB['SERVER']   = 'localhost';
$DB['PORT']     = '0';
$DB['DATABASE'] = 'zabbix';
$DB['USER']     = 'zabbix';
$DB['PASSWORD'] = '**********';

// SCHEMA is relevant only for IBM_DB2 database
$DB['SCHEMA'] = '';

$ZBX_SERVER      = 'localhost';
$ZBX_SERVER_PORT = '10051';
$ZBX_SERVER_NAME = '';

$IMAGE_FORMAT_DEFAULT = IMAGE_FORMAT_PNG;
?&gt;
</pre>
</div>
</div>

<div id="outline-container-sec-5" class="outline-2">
<h2 id="sec-5"><span class="section-number-2">5</span> Zabbix エージェントのインストール</h2>
<div class="outline-text-2" id="text-5">
<p>
Zabbix AgentプロセスのPID格納用ディレクトリの初期化。
<code>/usr/lib/tmpfiles.d/zabbix-agentd.conf</code>
</p>
<pre class="example">
$ sudo touch /usr/lib/tmpfiles.d/zabbix-agentd.conf
$ sudo nano /usr/lib/tmpfiles.d/zabbix-agentd.conf
d /run/zabbix 0755 zabbix zabbix -
</pre>

<pre class="example">
$ sudo systemd-tmpfiles --create /usr/lib/tmpfiles.d/zabbix-agentd.conf
</pre>

<p>
Zabbix Agentサービス起動・停止用のファイル <code>/usr/lib/systemd/system/zabbix-agentd.service</code>
</p>
<pre class="example">
[Unit]
Description=Zabbix agent daemon
After=network.target

[Service]
Type=forking
User=root
ExecStart=/usr/local/sbin/zabbix_agentd
PIDFile=/run/zabbix/zabbix_agentd.pid

[Install]
WantedBy=multi-user.target
</pre>

<p>
Zabbix Agent設定ファイルに、PID及びログ出力先を変更する。
</p>
<pre class="example">
$ sudo -u zabbix sed -i 's:# PidFile=.*:PidFile=/run/zabbix/zabbix_agentd.pid:' /etc/zabbix/zabbix_agentd.conf
$ sudo -u zabbix sed -i 's:^LogFile=.*:LogFile=/var/log/zabbix/zabbix_agentd.log:' /etc/zabbix/zabbix_agentd.conf
</pre>

<p>
Zabbix Agent設定ファイルに、Zabbix Serverの情報と監視ホスト名を指定する。
</p>
<pre class="example">
Server=127.0.0.1
ServerActive=127.0.0.1
Hostname=testhost
</pre>

<p>
ポートの確認
</p>
<pre class="example">
$ sudo netstat -nutpl | grep zabbix
tcp        0      0 0.0.0.0:10050           0.0.0.0:*               LISTEN      17764/zabbix_agentd
</pre>
</div>
</div>

<div id="outline-container-sec-6" class="outline-2">
<h2 id="sec-6"><span class="section-number-2">6</span> Zabbixのアンインストール</h2>
<div class="outline-text-2" id="text-6">
<pre class="example">
$ sudo userdel zabbix
</pre>

<p>
※未完成
</p>
</div>
</div>

<div id="outline-container-sec-7" class="outline-2">
<h2 id="sec-7"><span class="section-number-2">7</span> 参考</h2>
<div class="outline-text-2" id="text-7">
<ul class="org-ul">
<li><a href="https://www.zabbix.com/documentation/2.2/jp/start">Zabbix documentation in Japanese</a>
</li>
<li><a href="http://www.sraoss.co.jp/technology/zabbix/introduction/01-firststep.php">第 1 回 Zabbix を動かしてみよう</a>
</li>
<li><a href="http://tech-sketch.jp/2011/11/osszabbix1.html">OSS統合監視ツール「Zabbix」を利用して大規模環境監視(1)</a>
</li>
</ul>
</div>
</div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[調査]JBossAS7のソケット操作タイムアウト値について]]></title>
    <link href="http://luozengbin.github.io/blog/2014-10-08-%5B%E8%AA%BF%E6%9F%BB%5Djbossas7%E3%81%AE%E3%82%BD%E3%82%B1%E3%83%83%E3%83%88%E6%93%8D%E4%BD%9C%E3%82%BF%E3%82%A4%E3%83%A0%E3%82%A2%E3%82%A6%E3%83%88%E5%80%A4%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6.html"/>
    <updated>2014-10-08T00:00:00+09:00</updated>
    <id>http://luozengbin.github.io/blog/[調査]jbossas7のソケット操作タイムアウト値について</id>
    <content type="html"><![CDATA[<div id="table-of-contents">
<h2>Table of Contents</h2>
<div id="text-table-of-contents">
<ul>
<li><a href="#sec-1">1. DEFAULT_CONNECTION_TIMEOUTオプションの役割</a></li>
<li><a href="#sec-2">2. JBossASの実装</a></li>
<li><a href="#sec-3">3. 注意書き</a></li>
<li><a href="#sec-4">4. 参考リンク</a></li>
</ul>
</div>
</div>
<p>
JBossAS の起動オプション <code>org.apache.coyote.http11.DEFAULT_CONNECTION_TIMEOUT</code> につい
て誤解があったので、メモしておきます。
</p>

<p>
まず、ドキュメントの説明。デフォルトタイムアウト値が60秒ですね。
</p>
<pre class="example">
org.apache.coyote.http11.DEFAULT_CONNECTION_TIMEOUT
Default socket timeout. The default value is 60000 ms.
</pre>
<p>
説明だけでよく分からない、最初はサーバサイトワーカスレッドの処理時間タイムアウト値
と理解しました。
</p>

<p>
テストアプリでタイムアウト時の動作を確認する。
</p>
<pre class="example">
+----------+            +----------------+
| SoapUI   +------------+  テストアプリ  |
+----------+            |                |
                        +----------------+
                        |  JBossAS 7.x   |
                        +----------------+
</pre>
<p>
SoapUIのリードタイムアウトを120秒に変更する、テストアプリに <code>Thread.sleep(70 * 1000)</code>
コードを仕込んで処理時間を長くする。これでタイムアウトになると考えたのですが、結果的に
タイムアウトせず、正常なレスポンスでした。これで、 <code>DEFAULT_CONNECTION_TIMEOUT</code> はワー
カスレッドのタイムアウト値ではないことが分かりました。
</p>

<p>
説明文にソケットのタイムアウト値であることが書かれたので <code>telnet</code> でソケット通信の各
stepの処理時間をあえて長くして動作状況を観測してみました。
</p>

<ol class="org-ol">
<li>telnetでコネクションを貼る
</li>
<li>ヘッダを途中まで送信する
</li>
<li>60秒待つこと
</li>
</ol>

<pre class="example">
$ telnet localhost 8080
Trying 127.0.0.1...
Connected to localhost.
Escape character is '^]'.
POST http://localhost:8080/testapp/HelloWorld HTTP/1.1
Connection: close
Accept-Encoding: gzip,deflate
Content-Type: text/xml;charset=UTF-8
SOAPAction: "sayHello"
Content-Length: 318
Host: localhost:8080
★ここで60秒を待つ
Connection closed by foreign host.
</pre>

<p>
step3のところで60秒後、サーバからfinパケットが送出されてコネクションが切れた。
<code>DEFAULT_CONNECTION_TIMEOUT</code> パラメータの意味が少し掴みました。
</p>

<p>
少し掘り下げて見たいので、コードリーディングして実装の概要を以下に紹介します。
</p>

<p>
<!-- more -->
</p>

<div id="outline-container-sec-1" class="outline-2">
<h2 id="sec-1"><span class="section-number-2">1</span> DEFAULT_CONNECTION_TIMEOUTオプションの役割</h2>
<div class="outline-text-2" id="text-1">
<p>
JBossASのJava起動オプションで指定する
<code>-Dorg.apache.coyote.http11.DEFAULT_CONNECTION_TIMEOUT=xxxxx</code> オプションの値は最終的に
ソケット操作のブロックタイムアウト値 <code>java.net.ServerSocket.setSoTimeout(xx)</code> に反映さ
れる。
</p>

<p>
サーバ側で以下のソケット操作でブロックされる時間が指定時間より超えるとタイムアウトさせ
る機能です。
</p>
<pre class="example">
ServerSocket.accept();
SocketInputStream.read();
DatagramSocket.receive();
</pre>

<p>
例えば、HTTPヘッダ受信途中クライアント側がストール状態になり、
<code>SocketInputStream.read()</code> 処理がずっと待ち続けるには行けないので（FDのリソース枯渇に
なるかも知らない）、タイムアウトさせる必要があります。
</p>
</div>
</div>

<div id="outline-container-sec-2" class="outline-2">
<h2 id="sec-2"><span class="section-number-2">2</span> JBossASの実装</h2>
<div class="outline-text-2" id="text-2">
<p>
<code>org.apache.coyote.http11.Constants</code> にデフォルト値が60秒で定義されている。
</p>
<div class="org-src-container">

<pre class="src src-java"><span style="color: #729fcf; font-weight: bold;">public</span> <span style="color: #729fcf; font-weight: bold;">final</span> <span style="color: #729fcf; font-weight: bold;">class</span> <span style="color: #2DA6F5; font-weight: bold;">Constants</span> {
    ...............
    <span style="color: #888a85; font-style: italic;">//</span><span style="color: #888a85; font-style: italic;">&#9733;&#12371;&#12371;&#12391;Java&#12458;&#12503;&#12471;&#12519;&#12531;&#12363;&#12425;&#20516;&#12434;&#21442;&#29031;&#12375;&#12390;&#12356;&#12427;</span>
    <span style="color: #729fcf; font-weight: bold;">public</span> <span style="color: #729fcf; font-weight: bold;">static</span> <span style="color: #729fcf; font-weight: bold;">final</span> <span style="color: #2DA6F5; font-weight: bold;">int</span> DEFAULT_CONNECTION_TIMEOUT =
            Integer.valueOf(System.getProperty(<span style="color: #ad7fa8;">"org.apache.coyote.http11.DEFAULT_CONNECTION_TIMEOUT"</span>, <span style="color: #ad7fa8;">"60000"</span>)).intValue();
    .............
</pre>
</div>

<p>
この値は以下の流れで、 <code>JIoEndpoint</code> クラスの <code>soTimeout</code> 属性に反映される。
</p>
<pre class="example">
1.org.jboss.as.web.WebConnectorService.start()
2.  org.apache.catalina.connector.Connectorのコンストラクタ処理
3.    apache.coyote.http11.Http11Protocolのコンストラクタ処理
4.      org.apache.tomcat.util.net.JIoEndpoint.setSoTimeout(xx)
</pre>

<p>
<code>acceptor</code> スレッドで新規コネクションをacceptしワーカスレッドに渡した後にワーカスレッ
ドの <code>run</code> 関数内 <code>java.net.ServerSocket.setSoTimeout(xx)</code> 関数を呼び出し、値を設定す
る。具体的な流れは以下となります。
</p>

<pre class="example">
1. org.apache.tomcat.util.net.JIoEndpoint.Acceptor.run()
2.   org.apache.tomcat.util.net.JIoEndpoint.processSocket(socket)
3.     ★ここで分岐がある、別途検証する
4.     org.apache.tomcat.util.net.JIoEndpoint.Workerが起動される
5.       org.apache.tomcat.util.net.JIoEndpoint.Worker.run()
6.         org.apache.tomcat.util.net.JIoEndpoint.setSocketOptions(socket)
7.           socket.setSoTimeout(soTimeout);
</pre>
</div>
</div>

<div id="outline-container-sec-3" class="outline-2">
<h2 id="sec-3"><span class="section-number-2">3</span> 注意書き</h2>
<div class="outline-text-2" id="text-3">
<p>
<code>org.apache.coyote.http11.DEFAULT_CONNECTION_TIMEOUT</code> が次のように誤解されることもあ
るので、要注意です。
</p>
<pre class="example">
ワーカスレッドの実行時間のタイムアウト値
</pre>

<p>
あくまでもソケットのブロックタイムアウト値なので、アプリのロジック処理時と関係ないで
す。主にHTTPヘッダとHTTP本文の読み取り処理のブロック時間を監視するために使われる。
</p>

<p>
以下、HTTP本文読み取り処理でブロックタイムアウトが起きた時のサーバログです。
</p>
<pre class="example">
Caused by: java.net.SocketTimeoutException: Read timed out
	at java.net.SocketInputStream.socketRead0(Native Method) [rt.jar:1.7.0_65]
	at java.net.SocketInputStream.read(SocketInputStream.java:152) [rt.jar:1.7.0_65]
	at java.net.SocketInputStream.read(SocketInputStream.java:122) [rt.jar:1.7.0_65]
	at org.apache.coyote.http11.InternalInputBuffer.fill(InternalInputBuffer.java:737) [jbossweb-7.2.2.Final-redhat-1.jar:7.2.2.Final-redhat-1]
	at org.apache.coyote.http11.InternalInputBuffer$InputStreamInputBuffer.doRead(InternalInputBuffer.java:767) [jbossweb-7.2.2.Final-redhat-1.jar:7.2.2.Final-redhat-1]
	at org.apache.coyote.http11.filters.IdentityInputFilter.doRead(IdentityInputFilter.java:116) [jbossweb-7.2.2.Final-redhat-1.jar:7.2.2.Final-redhat-1]
	at org.apache.coyote.http11.InternalInputBuffer.doRead(InternalInputBuffer.java:697) [jbossweb-7.2.2.Final-redhat-1.jar:7.2.2.Final-redhat-1]
	at org.apache.coyote.Request.doRead(Request.java:438) [jbossweb-7.2.2.Final-redhat-1.jar:7.2.2.Final-redhat-1]
	at org.apache.catalina.connector.InputBuffer.realReadBytes(InputBuffer.java:341) [jbossweb-7.2.2.Final-redhat-1.jar:7.2.2.Final-redhat-1]
	... 47 more
</pre>
</div>
</div>

<div id="outline-container-sec-4" class="outline-2">
<h2 id="sec-4"><span class="section-number-2">4</span> 参考リンク</h2>
<div class="outline-text-2" id="text-4">
<ul class="org-ul">
<li><a href="https://docs.jboss.org/jbossweb/7.0.x/sysprops.html">JBossWeb System Properties</a>
</li>
<li><a href="http://docs.oracle.com/javase/jp/1.4/api/java/net/Socket.html#getSoTimeout%2528%2529">Java API Doc クラス Socket</a>
</li>
<li><a href="http://docs.oracle.com/javase/jp/6/api/java/net/SocketOptions.html#SO_TIMEOUT">Java API Doc - インタフェース SocketOptions</a>
</li>
</ul>
</div>
</div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[調査]SAS統計ソフトについて]]></title>
    <link href="http://luozengbin.github.io/blog/2014-10-05-%5B%E8%AA%BF%E6%9F%BB%5Dsas%E7%B5%B1%E8%A8%88%E3%82%BD%E3%83%95%E3%83%88%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6.html"/>
    <updated>2014-10-05T00:00:00+09:00</updated>
    <id>http://luozengbin.github.io/blog/[調査]sas統計ソフトについて</id>
    <content type="html"><![CDATA[<div id="table-of-contents">
<h2>Table of Contents</h2>
<div id="text-table-of-contents">
<ul>
<li><a href="#sec-1">1. SASとは</a></li>
<li><a href="#sec-2">2. SAS言語</a></li>
<li><a href="#sec-3">3. 統計分析のイメージ</a></li>
<li><a href="#sec-4">4. SASプログラムのイメージ</a></li>
<li><a href="#sec-5">5. 無償で使えるの？</a></li>
<li><a href="#sec-6">6. 日本での事例</a></li>
<li><a href="#sec-7">7. おまけに</a></li>
<li><a href="#sec-8">8. 参考リンク</a></li>
</ul>
</div>
</div>
<p>
ある飲み会で <code>JT</code> のプログラムマーさんと出会って、最初彼からの自己紹介で「プログラムマー
です」と聞いた時に、Java屋、Ruby屋普通のWebエンジニアだと思った。話を詳しく聞くとなん
と、「SAS」という言語しか扱っていないようです。 <code>SAS</code> という言語は初耳なので、軽く調べること
にした。
</p>

<p>
<!-- more -->
</p>

<div id="outline-container-sec-1" class="outline-2">
<h2 id="sec-1"><span class="section-number-2">1</span> SASとは</h2>
<div class="outline-text-2" id="text-1">
<p>
SASの全称はStatistical Analysis System、日本語発音は「サス」というようです。
以下はIT用語辞書からの引用です。
</p>
<pre class="example">
SAS Institute社が開発・販売している、統計解析ソフトを中心とするソフトウェア製品群のブ
ランド名。また、SAS Institute社自体。

世界的に人気の高い統計解析ソフトウェアで、1960年代から主に大学や研究所で科学・工学分野
の研究に用いられてきた。近年ではビジネス向けの機能や関連製品が充実し、主要なBI(ビジネ
スインテリジェンス)ツールの一つとして企業の業務分析や意思決定支援の分野でも導入が進ん
でいる。
</pre>
<p>
なんと1960年代、父親が生まれた時代ですね、かなり古い！
</p>
<font color="red"><strong>
<p>
という訳で、「SAS」は言語名、会社名、ソフトウェア製品群のブランド名として使える。次に
SAS言語についてです。
</p>
</strong></font>
</div>
</div>
<div id="outline-container-sec-2" class="outline-2">
<h2 id="sec-2"><span class="section-number-2">2</span> SAS言語</h2>
<div class="outline-text-2" id="text-2">
<p>
以下は <a href="http://wikiwiki.jp/cattail/?SAS%25C6%25FE%25CC%25E71">SAS入門1</a> からのSAS言語についての説明内容です。
</p>

<pre class="example">
ＳＡＳ言語は，非常に古いコンピュータ言語のひとつですが，
ＦＯＲＴＲＡＮ，ＣＯＢＯＬ，Ｃといった第３世代言語（高級言語）と違い，
第４世代言語（４ＧＬ）または簡易言語と呼ばれる言語の１つです．
１つの命令文の受け持つ処理が，高級言語よりたくさんの作業をこなしてくれるので，，
プログラミングする人にとって複雑な内容を簡単に書くことができるというメリットがあります．
ＳＡＳが得意とするデータ処理は，統計解析やデータマイニングといった，データ分析処理です．
データを管理したり，データシステム構築することもできますが，大量データに対する
データ分析機能は，ＳＡＳがナンバーワンといってもよいでしょう．
製薬，金融，マーケティング，通信，製造といった分野で広く使われています．
</pre>
<p>
第４世代言語とい言われる代表的な言語は
</p>
<ul class="org-ul">
<li>データベース分野のSQL
</li>
<li>統計分野のR言語
</li>
<li>Web開発分野のRuby on Rails
</li>
</ul>
<p>
があるでしょう。SASはこれらの言語の中にR言語と同じ分野ですね。 R言語は過去SI仕事でソフト
の性能測定結果の統計分析で検証したことがあるので、なんとなくイメージが付きます。ここ
でようやくSASとの接点が見つかりました。
</p>

<p>
ちなみにEmacsからRを扱う設定は <sup><a id="fnr.1" name="fnr.1" class="footref" href="#fn.1">1</a></sup> が参考になります。
</p>
</div>
</div>

<div id="outline-container-sec-3" class="outline-2">
<h2 id="sec-3"><span class="section-number-2">3</span> 統計分析のイメージ</h2>
<div class="outline-text-2" id="text-3">
<p>
<code>JT</code> のプログラムマーさんの話から考えると、SASを使ってデータを統計分析する作業流れは
以下のようなイメージのようです。(自信がない、間違っているかも知れない)
</p>


<div class="figure">
<p><img src="img/2014-10-05-sas-chat1.png" alt="2014-10-05-sas-chat1.png" />
</p>
</div>
<ol class="org-ol">
<li>市場調査手段
<ul class="org-ul">
<li>紙媒体アンケート
</li>
<li>アンケートサイト
</li>
<li>SNS(Twitter,Facebookなど)より情報収集
</li>
</ul>
</li>
<li>SASより統計分析
<ul class="org-ul">
<li>業務視点からデータモデルを設計する（SAS提供している専用モデルの流用など）
</li>
<li>SASスクリプトを実装する
</li>
<li>1で収集したテキストデータを分析する
</li>
<li>レポートを出力する
</li>
</ul>
</li>
</ol>

<p>
モデリングの部分は業務知識が要求されるところでしょうね。
</p>

<p>
「医療統計学」でamazonを検索したら、本が結構出している感じがする。
<a href="http://www.amazon.co.jp/gp/bestsellers/books/720750">http://www.amazon.co.jp/gp/bestsellers/books/720750</a>
</p>

<p>
医療統計に関して、またっく知識がないのですが、ここではSASプログラムサンプルコードを見
てスクリプトのイメージを掴みたいと思います。
</p>
</div>
</div>

<div id="outline-container-sec-4" class="outline-2">
<h2 id="sec-4"><span class="section-number-2">4</span> SASプログラムのイメージ</h2>
<div class="outline-text-2" id="text-4">
<p>
以下はSASプログラムの雛形です。
</p>
<pre class="example">
options ...

data &lt;DATAセット名&gt;;
     infile '&lt;CSVファイルのパス&gt;';
     INPUT 変数名1 変数名2 変数名3 ......;

proc プロシジャー名 その他オプション;

run;
</pre>

<p>
以下は、 <code>plot</code> プロシージャーを利用してテキストデータからアスキーグラフを表現するSAS
プログラムサンプルです。
</p>
<pre class="example">
options nodate number pageno=1 linesize=80 pagesize=35;

data djia;
      input Year @7 HighDate date7. High @24 LowDate date7. Low;
      format highdate lowdate date7.;
      datalines;
1954  31DEC54  404.39  11JAN54  279.87
1955  30DEC55  488.40  17JAN55  388.20
...more data lines... 
1993  29DEC93 3794.33  20JAN93 3241.95
1994  31JAN94 3978.36  04APR94 3593.35
;

proc plot data=djia;
   plot high*year='*';

   title 'High Values of the Dow Jones Industrial Average';
   title2 'from 1954 to 1994';
run;
</pre>
<p>
コードは <a href="http://support.sas.com/documentation/cdl/en/proc/61895/HTML/default/viewer.htm#a002473567.htm">Base SAS(R) 9.2 Procedures Guide</a> から引用しています。
</p>

<p>
出力結果は以下のようなイメージになります。
</p>
<pre class="example">
       High Values of the Dow Jones Industrial Average                1
                      from 1954 to 1994

           Plot of High*Year.  Symbol used is '*'.

High |
     |
4000 +                                              *
     |                                             *
     |
     |                                            *
     |                                           *
3000 +                                          *
     |                                       * *
     |
     |
     |                                        *
2000 +                                      *
     |
     |                                     *
     |
     |                                   **
1000 +                 ***** ***  *** ***
     |             ****     *   **   *
     |        *****
     |      **
     |
   0 +
     |
     ---+---------+---------+---------+---------+---------+--
      1950      1960      1970      1980      1990      2000

                               Year
</pre>

<p>
SASプログラムの文法構造がかなり <code>gnuplot</code> と似ってことが気付きました。でも <a href="http://www.gnuplot.info/">gnuplot</a> が生
まれるのが1986年なので、後者が前者の形を引き続いた気がします。仕事でソフトの性能検証デー
タをフラフに加工する処理でよくgnuplotを使っています。 <code>OSS</code> なので無償で使える。SASで
も同じことができると思いますが、かなり高額のようです。コストパフォーマンスが悪いでしょ
うね。
</p>
</div>
</div>

<div id="outline-container-sec-5" class="outline-2">
<h2 id="sec-5"><span class="section-number-2">5</span> 無償で使えるの？</h2>
<div class="outline-text-2" id="text-5">
<p>
商用がメインなのでかなり高額です。SAS無償で使えるやつがあるけど、大学研究用途のみです。
おそらく個人勉強用でも問題内でしょう。詳細は <a href="http://www.slideshare.net/yuhsukek/sas-university-edition-38601663">Sas University Editionを使おう（インストール編）</a>
</p>

<p>
SAS University Editionのダウンロードリンク
<a href="http://www.sas.com/en_us/software/university-edition/download-software.html">http://www.sas.com/en_us/software/university-edition/download-software.html</a>
</p>

<p>
機会があれば、導入して遊んで見たいと思います。
</p>
</div>
</div>

<div id="outline-container-sec-6" class="outline-2">
<h2 id="sec-6"><span class="section-number-2">6</span> 日本での事例</h2>
<div class="outline-text-2" id="text-6">
<ul class="org-ul">
<li><a href="http://www.nec.co.jp/press/ja/1205/2202.html">ビッグデータ領域で、NECとSAS Institute Japanが協業</a>
</li>
<li><a href="http://www.sas.com/ja_jp/customers/jt.html">日本たばこ産業株式会社</a>
</li>
<li>他にも結構あります。<sup><a id="fnr.2" name="fnr.2" class="footref" href="#fn.2">2</a></sup>
</li>
</ul>
</div>
</div>

<div id="outline-container-sec-7" class="outline-2">
<h2 id="sec-7"><span class="section-number-2">7</span> おまけに</h2>
<div class="outline-text-2" id="text-7">
<ul class="org-ul">
<li>Javaの接点
<ul class="org-ul">
<li>SAS クライアントアプリケーションがJavaに依存しているようです。<sup><a id="fnr.3" name="fnr.3" class="footref" href="#fn.3">3</a></sup>
</li>
<li>Hadoopと連携するプロジェクトが今年から発足しているようです。<sup><a id="fnr.4" name="fnr.4" class="footref" href="#fn.4">4</a></sup>
</li>
</ul>
</li>

<li>他の統計ソフトとの比較
詳細は <sup><a id="fnr.5" name="fnr.5" class="footref" href="#fn.5">5</a></sup>
</li>
</ul>
</div>
</div>

<div id="outline-container-sec-8" class="outline-2">
<h2 id="sec-8"><span class="section-number-2">8</span> 参考リンク</h2>
<div class="outline-text-2" id="text-8">
<ul class="org-ul">
<li><a href="http://www.rcommanderdeigakutoukeikaiseki.com/index.html">臨床医のためのRコマンダーによる医学統計解析マニュアル</a>
</li>
<li><a href="http://www2.ngu.ac.jp/~taniguch/stat/intro-sas.htm">ＳＡＳ統計パッケージ の使い方</a>
</li>
<li><a href="http://sas.mathlab.info/index.html">SAS統計データ解析入門</a>
</li>
<li><a href="http://wikiwiki.jp/cattail/?FrontPage">Welcome to データ分析・マイニングの世界 by SAS</a>
</li>
</ul>
</div>
</div>
<div id="footnotes">
<h2 class="footnotes">Footnotes: </h2>
<div id="text-footnotes">

<div class="footdef"><sup><a id="fn.1" name="fn.1" class="footnum" href="#fnr.1">1</a></sup> <p class="footpara">
<a href="http://sheephead.homelinux.org/2009/10/26/1673/">これからEmacsでR使う人のための設定まとめ</a>
</p></div>

<div class="footdef"><sup><a id="fn.2" name="fn.2" class="footnum" href="#fnr.2">2</a></sup> <p class="footpara">
<a href="http://www.sas.com/ja_jp/customers.html">SASユーザー事例</a>
</p></div>

<div class="footdef"><sup><a id="fn.3" name="fn.3" class="footnum" href="#fnr.3">3</a></sup> <p class="footpara">
<a href="http://www.sas.com/offices/asiapacific/japan/service/resources/thirdpartysupport/v93/jres.html">SAS® 9.3（TS1M0以降） でサポートするJava Runtime Environment</a>
</p></div>

<div class="footdef"><sup><a id="fn.4" name="fn.4" class="footnum" href="#fnr.4">4</a></sup> <p class="footpara">
<a href="http://www.sas.com/ja_jp/news/press-releases/2014/september/2014-09-03-shionogi-imstat-for-hadoop-jp.html">SAS Institute Japan、塩野義製薬とHadoop上でビッグデータを活用した研究プロジェクトを発足</a>
</p></div>

<div class="footdef"><sup><a id="fn.5" name="fn.5" class="footnum" href="#fnr.5">5</a></sup> <p class="footpara">
<a href="https://sites.google.com/site/statinfra/comparison">統計ソフトの比較</a>
</p></div>


</div>
</div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[メモ]JBossAS稼働情報収取得方法]]></title>
    <link href="http://luozengbin.github.io/blog/2014-09-30-%5B%E3%83%A1%E3%83%A2%5Djbossas%E7%A8%BC%E5%83%8D%E6%83%85%E5%A0%B1%E5%8F%8E%E5%8F%96%E5%BE%97%E6%96%B9%E6%B3%95.html"/>
    <updated>2014-09-30T00:00:00+09:00</updated>
    <id>http://luozengbin.github.io/blog/[メモ]jbossas稼働情報収取得方法</id>
    <content type="html"><![CDATA[<div id="table-of-contents">
<h2>Table of Contents</h2>
<div id="text-table-of-contents">
<ul>
<li><a href="#sec-1">1. <code>jboss-cli.sh</code> 方式</a>
<ul>
<li><a href="#sec-1-1">1.1. JBoss管理インスタンスへ接続する</a></li>
<li><a href="#sec-1-2">1.2. JVMスレッドプール情報取得</a></li>
<li><a href="#sec-1-3">1.3. JVMメモリ情報取得</a></li>
<li><a href="#sec-1-4">1.4. データベース接続プール情報取得</a></li>
<li><a href="#sec-1-5">1.5. JDBCステートメントキャッシュ情報</a></li>
<li><a href="#sec-1-6">1.6. 起動オプション、システム属性などの確認</a></li>
<li><a href="#sec-1-7">1.7. EJBスレッドプールの確認</a></li>
<li><a href="#sec-1-8">1.8. トランザクション情報の確認</a></li>
</ul>
</li>
<li><a href="#sec-2">2. <code>remoting-jmx</code> 方式</a>
<ul>
<li><a href="#sec-2-1">2.1. JBossAS接続用のjmxterm起動スクリプト</a></li>
<li><a href="#sec-2-2">2.2. jmxterm基本的な使い方</a></li>
<li><a href="#sec-2-3">2.3. Web系ワーカスレッドの情報取得</a></li>
<li><a href="#sec-2-4">2.4. リクエストプロセッサーの稼働状況</a></li>
</ul>
</li>
<li><a href="#sec-3">3. <code>RESTful</code> 方式</a></li>
<li><a href="#sec-4">4. 参考情報</a></li>
</ul>
</div>
</div>
<p>
コマンドインタフェースから <code>JBossAS 7.x</code> アプリケーションサーバの稼働情報収取得方法に
ついて検証してみた。主に以下の方法が存在する。
</p>

<ol class="org-ol">
<li><code>jboss-cli.sh</code> コマンドでサーバの設定情報やRuntime情報を取得する。
</li>
<li>RESTful Management Interfaces HTTP通信でJSON形式で情報ヲ取得する。
</li>
<li>remoting-jmx インタフェースでMBeanサーバから情報を取得する。
</li>
</ol>

<p>
1と2の情報源が一緒です。取れる情報が次のようなイメージ、用途に応じて選ぶことになると思
います。
</p>
<pre class="example">
+-------------+
| jboss-cli   |
|   +---------+-----+
|   |         |     |
|   |         | JMX |
|   |         |     |
|   +---------+-----+
+-------------+
</pre>

<p>
<!-- more -->
</p>

<div id="outline-container-sec-1" class="outline-2">
<h2 id="sec-1"><span class="section-number-2">1</span> <code>jboss-cli.sh</code> 方式</h2>
<div class="outline-text-2" id="text-1">
</div><div id="outline-container-sec-1-1" class="outline-3">
<h3 id="sec-1-1"><span class="section-number-3">1.1</span> JBoss管理インスタンスへ接続する</h3>
<div class="outline-text-3" id="text-1-1">
<pre class="example">
$ jboss-cli.sh -c controller=&lt;hostname:port&gt;
</pre>
</div>
</div>

<div id="outline-container-sec-1-2" class="outline-3">
<h3 id="sec-1-2"><span class="section-number-3">1.2</span> JVMスレッドプール情報取得</h3>
<div class="outline-text-3" id="text-1-2">
<pre class="example">
[standalone@localhost:9999 /] /core-service=platform-mbean/type=threading:read-resource(recursive=true, include-runtime=true)
{
    "outcome" =&gt; "success",
    "result" =&gt; {
        "all-thread-ids" =&gt; [
            137L,
            .......
            2L
        ],
        "thread-contention-monitoring-supported" =&gt; true,
        "thread-cpu-time-supported" =&gt; true,
        "current-thread-cpu-time-supported" =&gt; true,
        "object-monitor-usage-supported" =&gt; true,
        "synchronizer-usage-supported" =&gt; true,
        "thread-contention-monitoring-enabled" =&gt; false,
        "thread-cpu-time-enabled" =&gt; true,
        "thread-count" =&gt; 36,
        "peak-thread-count" =&gt; 78,
        "total-started-thread-count" =&gt; 130L,
        "daemon-thread-count" =&gt; 14,
        "current-thread-cpu-time" =&gt; 5399864L,
        "current-thread-user-time" =&gt; 0L,
        "object-name" =&gt; "java.lang:type=Threading"
    }
}
[standalone@localhost:9999 /]
</pre>
</div>
</div>

<div id="outline-container-sec-1-3" class="outline-3">
<h3 id="sec-1-3"><span class="section-number-3">1.3</span> JVMメモリ情報取得</h3>
<div class="outline-text-3" id="text-1-3">
<p>
メモリ概要情報
</p>
<pre class="example">
[standalone@localhost:9999 /] /core-service=platform-mbean/type=memory:read-resource(recursive=true, include-runtime=true)
{
    "outcome" =&gt; "success",
    "result" =&gt; {
        "heap-memory-usage" =&gt; {
            "init" =&gt; 1366294528L,
            "used" =&gt; 253812744L,
            "committed" =&gt; 1320878080L,
            "max" =&gt; 1321795584L
        },
        "non-heap-memory-usage" =&gt; {
            "init" =&gt; 24313856L,
            "used" =&gt; 62715312L,
            "committed" =&gt; 63045632L,
            "max" =&gt; 318767104L
        },
        "object-name" =&gt; "java.lang:type=Memory",
        "object-pending-finalization-count" =&gt; 0,
        "verbose" =&gt; false
    }
}
[standalone@localhost:9999 /]
</pre>

<p>
メモリ詳細情報
</p>
<pre class="example">
[standalone@localhost:9999 /] /core-service=platform-mbean/type=memory-pool:read-resource(recursive=true, include-runtime=true)
{
    "outcome" =&gt; "success",
    "result" =&gt; {"name" =&gt; {
        "Eden_Space" =&gt; {
            "name" =&gt; "Eden_Space",
            "type" =&gt; "HEAP",
            "valid" =&gt; true,
            "memory-manager-names" =&gt; [
                "MarkSweepCompact",
                "Copy"
            ],
            "usage-threshold-supported" =&gt; false,
            "collection-usage-threshold-supported" =&gt; true,
            "usage-threshold" =&gt; undefined,
            "collection-usage-threshold" =&gt; 0L,
            "usage" =&gt; {
                "init" =&gt; 364445696L,
                "used" =&gt; 227453064L,
                "committed" =&gt; 364445696L,
                "max" =&gt; 364642304L
            },
            "peak-usage" =&gt; {
                "init" =&gt; 364445696L,
                "used" =&gt; 364445696L,
                "committed" =&gt; 364642304L,
                "max" =&gt; 364642304L
            },
            "usage-threshold-exceeded" =&gt; undefined,
            "usage-threshold-count" =&gt; undefined,
            "collection-usage-threshold-exceeded" =&gt; false,
            "collection-usage-threshold-count" =&gt; 0L,
            "collection-usage" =&gt; {
                "init" =&gt; 364445696L,
                "used" =&gt; 0L,
                "committed" =&gt; 364445696L,
                "max" =&gt; 364642304L
            },
            "object-name" =&gt; "java.lang:type=MemoryPool,name=\"Eden Space\""
        },
        "Survivor_Space" =&gt; {
            "name" =&gt; "Survivor_Space",
            "type" =&gt; "HEAP",
            "valid" =&gt; true,
            "memory-manager-names" =&gt; [
                "MarkSweepCompact",
                "Copy"
            ],
            "usage-threshold-supported" =&gt; false,
            "collection-usage-threshold-supported" =&gt; true,
            "usage-threshold" =&gt; undefined,
            "collection-usage-threshold" =&gt; 0L,
            "usage" =&gt; {
                "init" =&gt; 45481984L,
                "used" =&gt; 970896L,
                "committed" =&gt; 45547520L,
                "max" =&gt; 45547520L
            },
            "peak-usage" =&gt; {
                "init" =&gt; 45481984L,
                "used" =&gt; 24101280L,
                "committed" =&gt; 45547520L,
                "max" =&gt; 45547520L
            },
            "usage-threshold-exceeded" =&gt; undefined,
            "usage-threshold-count" =&gt; undefined,
            "collection-usage-threshold-exceeded" =&gt; false,
            "collection-usage-threshold-count" =&gt; 0L,
            "collection-usage" =&gt; {
                "init" =&gt; 45481984L,
                "used" =&gt; 970896L,
                "committed" =&gt; 45547520L,
                "max" =&gt; 45547520L
            },
            "object-name" =&gt; "java.lang:type=MemoryPool,name=\"Survivor Space\""
        },
        "Perm_Gen" =&gt; {
            "name" =&gt; "Perm_Gen",
            "type" =&gt; "NON_HEAP",
            "valid" =&gt; true,
            "memory-manager-names" =&gt; ["MarkSweepCompact"],
            "usage-threshold-supported" =&gt; true,
            "collection-usage-threshold-supported" =&gt; true,
            "usage-threshold" =&gt; 0L,
            "collection-usage-threshold" =&gt; 0L,
            "usage" =&gt; {
                "init" =&gt; 21757952L,
                "used" =&gt; 57597424L,
                "committed" =&gt; 57802752L,
                "max" =&gt; 268435456L
            },
            "peak-usage" =&gt; {
                "init" =&gt; 21757952L,
                "used" =&gt; 57597424L,
                "committed" =&gt; 57802752L,
                "max" =&gt; 268435456L
            },
            "usage-threshold-exceeded" =&gt; false,
            "usage-threshold-count" =&gt; 0L,
            "collection-usage-threshold-exceeded" =&gt; false,
            "collection-usage-threshold-count" =&gt; 0L,
            "collection-usage" =&gt; {
                "init" =&gt; 21757952L,
                "used" =&gt; 55181008L,
                "committed" =&gt; 55181312L,
                "max" =&gt; 268435456L
            },
            "object-name" =&gt; "java.lang:type=MemoryPool,name=\"Perm Gen\""
        },
        "Code_Cache" =&gt; {
            "name" =&gt; "Code_Cache",
            "type" =&gt; "NON_HEAP",
            "valid" =&gt; true,
            "memory-manager-names" =&gt; ["CodeCacheManager"],
            "usage-threshold-supported" =&gt; true,
            "collection-usage-threshold-supported" =&gt; false,
            "usage-threshold" =&gt; 0L,
            "collection-usage-threshold" =&gt; undefined,
            "usage" =&gt; {
                "init" =&gt; 2555904L,
                "used" =&gt; 5117888L,
                "committed" =&gt; 5242880L,
                "max" =&gt; 50331648L
            },
            "peak-usage" =&gt; {
                "init" =&gt; 2555904L,
                "used" =&gt; 5123264L,
                "committed" =&gt; 5242880L,
                "max" =&gt; 50331648L
            },
            "usage-threshold-exceeded" =&gt; false,
            "usage-threshold-count" =&gt; 0L,
            "collection-usage-threshold-exceeded" =&gt; undefined,
            "collection-usage-threshold-count" =&gt; undefined,
            "collection-usage" =&gt; undefined,
            "object-name" =&gt; "java.lang:type=MemoryPool,name=\"Code Cache\""
        },
        "Tenured_Gen" =&gt; {
            "name" =&gt; "Tenured_Gen",
            "type" =&gt; "HEAP",
            "valid" =&gt; true,
            "memory-manager-names" =&gt; ["MarkSweepCompact"],
            "usage-threshold-supported" =&gt; true,
            "collection-usage-threshold-supported" =&gt; true,
            "usage-threshold" =&gt; 0L,
            "collection-usage-threshold" =&gt; 0L,
            "usage" =&gt; {
                "init" =&gt; 910884864L,
                "used" =&gt; 36957616L,
                "committed" =&gt; 910884864L,
                "max" =&gt; 911605760L
            },
            "peak-usage" =&gt; {
                "init" =&gt; 910884864L,
                "used" =&gt; 36957616L,
                "committed" =&gt; 910884864L,
                "max" =&gt; 911605760L
            },
            "usage-threshold-exceeded" =&gt; false,
            "usage-threshold-count" =&gt; 0L,
            "collection-usage-threshold-exceeded" =&gt; false,
            "collection-usage-threshold-count" =&gt; 0L,
            "collection-usage" =&gt; {
                "init" =&gt; 910884864L,
                "used" =&gt; 36957616L,
                "committed" =&gt; 910884864L,
                "max" =&gt; 911605760L
            },
            "object-name" =&gt; "java.lang:type=MemoryPool,name=\"Tenured Gen\""
        }
    }}
}
[standalone@localhost:9999 /]
</pre>

<p>
GCの実行状況
</p>
<pre class="example">
[standalone@localhost:9999 /] /core-service=platform-mbean/type=garbage-collector:read-resource(recursive=true, include-runtime=true)
{
    "outcome" =&gt; "success",
    "result" =&gt; {"name" =&gt; {
        "MarkSweepCompact" =&gt; {
            "collection-count" =&gt; 6L,
            "collection-time" =&gt; 1183L,
            "memory-pool-names" =&gt; [
                "Eden_Space",
                "Survivor_Space",
                "Tenured_Gen",
                "Perm_Gen"
            ],
            "name" =&gt; "MarkSweepCompact",
            "object-name" =&gt; "java.lang:type=GarbageCollector,name=MarkSweepCompact",
            "valid" =&gt; true
        },
        "Copy" =&gt; {
            "collection-count" =&gt; 13L,
            "collection-time" =&gt; 3003L,
            "memory-pool-names" =&gt; [
                "Eden_Space",
                "Survivor_Space"
            ],
            "name" =&gt; "Copy",
            "object-name" =&gt; "java.lang:type=GarbageCollector,name=Copy",
            "valid" =&gt; true
        }
    }}
}
[standalone@localhost:9999 /]
</pre>
</div>
</div>
<div id="outline-container-sec-1-4" class="outline-3">
<h3 id="sec-1-4"><span class="section-number-3">1.4</span> データベース接続プール情報取得</h3>
<div class="outline-text-3" id="text-1-4">
<pre class="example">
[standalone@localhost:9999 /] /subsystem=datasources/data-source=ExampleDS/statistics=pool:read-resource(include-runtime=true, recursive=true)
{
    "outcome" =&gt; "success",
    "result" =&gt; {
        "ActiveCount" =&gt; "0",
        "AvailableCount" =&gt; "20",
        "AverageBlockingTime" =&gt; "0",
        "AverageCreationTime" =&gt; "0",
        "CreatedCount" =&gt; "0",
        "DestroyedCount" =&gt; "0",
        "InUseCount" =&gt; "0",
        "MaxCreationTime" =&gt; "0",
        "MaxUsedCount" =&gt; "0",
        "MaxWaitCount" =&gt; "0",
        "MaxWaitTime" =&gt; "0",
        "TimedOut" =&gt; "0",
        "TotalBlockingTime" =&gt; "0",
        "TotalCreationTime" =&gt; "0"
    }
}
[standalone@localhost:9999 /]
</pre>
</div>
</div>

<div id="outline-container-sec-1-5" class="outline-3">
<h3 id="sec-1-5"><span class="section-number-3">1.5</span> JDBCステートメントキャッシュ情報</h3>
<div class="outline-text-3" id="text-1-5">
<pre class="example">
[standalone@localhost:9999 /] /subsystem=datasources/data-source=ExampleDS/statistics=jdbc:read-resource(include-runtime=true, recursive=true)
{
    "outcome" =&gt; "success",
    "result" =&gt; {
        "PreparedStatementCacheAccessCount" =&gt; "0",
        "PreparedStatementCacheAddCount" =&gt; "0",
        "PreparedStatementCacheCurrentSize" =&gt; "0",
        "PreparedStatementCacheDeleteCount" =&gt; "0",
        "PreparedStatementCacheHitCount" =&gt; "0",
        "PreparedStatementCacheMissCount" =&gt; "0"
    }
}
[standalone@localhost:9999 /]
</pre>
</div>
</div>

<div id="outline-container-sec-1-6" class="outline-3">
<h3 id="sec-1-6"><span class="section-number-3">1.6</span> 起動オプション、システム属性などの確認</h3>
<div class="outline-text-3" id="text-1-6">
<pre class="example">
[standalone@localhost:9999 /] /core-service=platform-mbean/type=runtime:read-resource(recursive=true, include-runtime=true)
{
    "outcome" =&gt; "success",
    "result" =&gt; {
        "name" =&gt; "2147@localhost",
        "vm-name" =&gt; "OpenJDK 64-Bit Server VM",
        "vm-vendor" =&gt; "Oracle Corporation",
        "vm-version" =&gt; "24.65-b04",
        "spec-name" =&gt; "Java Virtual Machine Specification",
        "spec-vendor" =&gt; "Oracle Corporation",
        "spec-version" =&gt; "1.7",
        "management-spec-version" =&gt; "1.2",
        "class-path" =&gt; "/opt/jboss-eap-6.2/jboss-modules.jar",
        "library-path" =&gt; "/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib",
        "boot-class-path-supported" =&gt; true,
        "boot-class-path" =&gt; "/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.65.x86_64/jre/lib/resources.jar:/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.65.x86_64/jre/lib/rt.jar:/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.65.x86_64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.65.x86_64/jre/lib/jsse.jar:/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.65.x86_64/jre/lib/jce.jar:/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.65.x86_64/jre/lib/charsets.jar:/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.65.x86_64/jre/lib/rhino.jar:/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.65.x86_64/jre/lib/jfr.jar:/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.65.x86_64/jre/classes",
        "input-arguments" =&gt; [
            "-D[Standalone]",
            "-XX:+UseCompressedOops",
            "-Xms1303m",
            "-Xmx1303m",
            "-XX:MaxPermSize=256m",
            "-Djava.net.preferIPv4Stack=true",
            "-Djboss.modules.system.pkgs=org.jboss.byteman",
            "-Djava.awt.headless=true",
            "-Djboss.modules.metrics=true",
            "-Dorg.apache.tomcat.util.ENABLE_MODELER=true",
            "-Dorg.jboss.boot.log.file=/opt/jboss-eap-6.2/standalone/log/server.log",
            "-Dlogging.configuration=file:/opt/jboss-eap-6.2/standalone/configuration/logging.properties"
        ],
        "start-time" =&gt; 1412040330424L,
        "system-properties" =&gt; {
            "[Standalone]" =&gt; "",
            "awt.toolkit" =&gt; "sun.awt.X11.XToolkit",
            "catalina.home" =&gt; "/opt/jboss-eap-6.2/standalone/tmp",
            "file.encoding" =&gt; "UTF-8",
            "file.encoding.pkg" =&gt; "sun.io",
            "file.separator" =&gt; "/",
            "java.awt.graphicsenv" =&gt; "sun.awt.X11GraphicsEnvironment",
            "java.awt.headless" =&gt; "true",
            "java.awt.printerjob" =&gt; "sun.print.PSPrinterJob",
            "java.class.path" =&gt; "/opt/jboss-eap-6.2/jboss-modules.jar",
            "java.class.version" =&gt; "51.0",
            "java.endorsed.dirs" =&gt; "/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.65.x86_64/jre/lib/endorsed",
            "java.ext.dirs" =&gt; "/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.65.x86_64/jre/lib/ext:/usr/java/packages/lib/ext",
            "java.home" =&gt; "/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.65.x86_64/jre",
            "java.io.tmpdir" =&gt; "/tmp",
            "java.library.path" =&gt; "/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib",
            "java.naming.factory.url.pkgs" =&gt; "org.jboss.as.naming.interfaces:org.jboss.ejb.client.naming",
            "java.net.preferIPv4Stack" =&gt; "true",
            "java.protocol.handler.pkgs" =&gt; "org.jboss.net.protocol|org.jboss.vfs.protocol",
            "java.runtime.name" =&gt; "OpenJDK Runtime Environment",
            "java.runtime.version" =&gt; "1.7.0_65-mockbuild_2014_07_16_06_06-b00",
            "java.specification.name" =&gt; "Java Platform API Specification",
            "java.specification.vendor" =&gt; "Oracle Corporation",
            "java.specification.version" =&gt; "1.7",
            "java.util.logging.manager" =&gt; "org.jboss.logmanager.LogManager",
            "java.vendor" =&gt; "Oracle Corporation",
            "java.vendor.url" =&gt; "http://java.oracle.com/",
            "java.vendor.url.bug" =&gt; "http://bugreport.sun.com/bugreport/",
            "java.version" =&gt; "1.7.0_65",
            "java.vm.info" =&gt; "mixed mode",
            "java.vm.name" =&gt; "OpenJDK 64-Bit Server VM",
            "java.vm.specification.name" =&gt; "Java Virtual Machine Specification",
            "java.vm.specification.vendor" =&gt; "Oracle Corporation",
            "java.vm.specification.version" =&gt; "1.7",
            "java.vm.vendor" =&gt; "Oracle Corporation",
            "java.vm.version" =&gt; "24.65-b04",
            "javax.management.builder.initial" =&gt; "org.jboss.as.jmx.PluggableMBeanServerBuilder",
            "javax.xml.datatype.DatatypeFactory" =&gt; "__redirected.__DatatypeFactory",
            "javax.xml.parsers.DocumentBuilderFactory" =&gt; "__redirected.__DocumentBuilderFactory",
            "javax.xml.parsers.SAXParserFactory" =&gt; "__redirected.__SAXParserFactory",
            "javax.xml.stream.XMLEventFactory" =&gt; "__redirected.__XMLEventFactory",
            "javax.xml.stream.XMLInputFactory" =&gt; "__redirected.__XMLInputFactory",
            "javax.xml.stream.XMLOutputFactory" =&gt; "__redirected.__XMLOutputFactory",
            "javax.xml.transform.TransformerFactory" =&gt; "__redirected.__TransformerFactory",
            "javax.xml.validation.SchemaFactory:http://www.w3.org/2001/XMLSchema" =&gt; "__redirected.__SchemaFactory",
            "javax.xml.xpath.XPathFactory:http://java.sun.com/jaxp/xpath/dom" =&gt; "__redirected.__XPathFactory",
            "jboss.home.dir" =&gt; "/opt/jboss-eap-6.2",
            "jboss.host.name" =&gt; "localhost",
            "jboss.modules.dir" =&gt; "/opt/jboss-eap-6.2/modules",
            "jboss.modules.metrics" =&gt; "true",
            "jboss.modules.system.pkgs" =&gt; "org.jboss.byteman",
            "jboss.node.name" =&gt; "localhost",
            "jboss.qualified.host.name" =&gt; "localhost",
            "jboss.server.base.dir" =&gt; "/opt/jboss-eap-6.2/standalone",
            "jboss.server.config.dir" =&gt; "/opt/jboss-eap-6.2/standalone/configuration",
            "jboss.server.data.dir" =&gt; "/opt/jboss-eap-6.2/standalone/data",
            "jboss.server.deploy.dir" =&gt; "/opt/jboss-eap-6.2/standalone/data/content",
            "jboss.server.log.dir" =&gt; "/opt/jboss-eap-6.2/standalone/log",
            "jboss.server.name" =&gt; "localhost",
            "jboss.server.persist.config" =&gt; "true",
            "jboss.server.temp.dir" =&gt; "/opt/jboss-eap-6.2/standalone/tmp",
            "line.separator" =&gt; "
",
            "logging.configuration" =&gt; "file:/opt/jboss-eap-6.2/standalone/configuration/logging.properties",
            "module.path" =&gt; "/opt/jboss-eap-6.2/modules",
            "org.apache.tomcat.util.ENABLE_MODELER" =&gt; "true",
            "org.apache.xml.security.ignoreLineBreaks" =&gt; "true",
            "org.jboss.boot.log.file" =&gt; "/opt/jboss-eap-6.2/standalone/log/server.log",
            "org.jboss.resolver.warning" =&gt; "true",
            "org.jboss.security.context.ThreadLocal" =&gt; "true",
            "org.xml.sax.driver" =&gt; "__redirected.__XMLReaderFactory",
            "os.arch" =&gt; "amd64",
            "os.name" =&gt; "Linux",
            "os.version" =&gt; "2.6.32-358.el6.x86_64",
            "path.separator" =&gt; ":",
            "sun.arch.data.model" =&gt; "64",
            "sun.boot.class.path" =&gt; "/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.65.x86_64/jre/lib/resources.jar:/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.65.x86_64/jre/lib/rt.jar:/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.65.x86_64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.65.x86_64/jre/lib/jsse.jar:/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.65.x86_64/jre/lib/jce.jar:/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.65.x86_64/jre/lib/charsets.jar:/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.65.x86_64/jre/lib/rhino.jar:/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.65.x86_64/jre/lib/jfr.jar:/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.65.x86_64/jre/classes",
            "sun.boot.library.path" =&gt; "/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.65.x86_64/jre/lib/amd64",
            "sun.cpu.endian" =&gt; "little",
            "sun.cpu.isalist" =&gt; "",
            "sun.io.unicode.encoding" =&gt; "UnicodeLittle",
            "sun.java.command" =&gt; "/opt/jboss-eap-6.2/jboss-modules.jar -mp /opt/jboss-eap-6.2/modules -jaxpmodule javax.xml.jaxp-provider org.jboss.as.standalone -Djboss.home.dir=/opt/jboss-eap-6.2 -Djboss.server.base.dir=/opt/jboss-eap-6.2/standalone",
            "sun.java.launcher" =&gt; "SUN_STANDARD",
            "sun.jnu.encoding" =&gt; "UTF-8",
            "sun.management.compiler" =&gt; "HotSpot 64-Bit Tiered Compilers",
            "sun.os.patch.level" =&gt; "unknown",
            "user.country" =&gt; "JP",
            "user.dir" =&gt; "/root",
            "user.home" =&gt; "/root",
            "user.language" =&gt; "ja",
            "user.name" =&gt; "root",
            "user.timezone" =&gt; "Asia/Tokyo"
        },
        "uptime" =&gt; 11324677L,
        "object-name" =&gt; "java.lang:type=Runtime"
    }
}
[standalone@localhost:9999 /]
</pre>
</div>
</div>

<div id="outline-container-sec-1-7" class="outline-3">
<h3 id="sec-1-7"><span class="section-number-3">1.7</span> EJBスレッドプールの確認</h3>
<div class="outline-text-3" id="text-1-7">
<pre class="example">
[standalone@localhost:9999 /] /subsystem=ejb3/thread-pool=default:read-resource(include-runtime=true, recursive=true)
{
    "outcome" =&gt; "success",
    "result" =&gt; {
        "active-count" =&gt; 0,
        "completed-task-count" =&gt; 0L,
        "current-thread-count" =&gt; 0,
        "keepalive-time" =&gt; {
            "time" =&gt; 100L,
            "unit" =&gt; "MILLISECONDS"
        },
        "largest-thread-count" =&gt; 0,
        "max-threads" =&gt; 10,
        "name" =&gt; "default",
        "queue-size" =&gt; 0,
        "rejected-count" =&gt; 0,
        "task-count" =&gt; 0L,
        "thread-factory" =&gt; undefined
    }
}
[standalone@localhost:9999 /]
</pre>
</div>
</div>

<div id="outline-container-sec-1-8" class="outline-3">
<h3 id="sec-1-8"><span class="section-number-3">1.8</span> トランザクション情報の確認</h3>
<div class="outline-text-3" id="text-1-8">
<pre class="example">
[standalone@localhost:9999 /] /subsystem=transactions:read-resource(include-runtime=true, recursive=true)
{
    "outcome" =&gt; "success",
    "result" =&gt; {
        "default-timeout" =&gt; 300,
        "enable-statistics" =&gt; false,
        "enable-tsm-status" =&gt; false,
        "hornetq-store-enable-async-io" =&gt; false,
        "jdbc-action-store-drop-table" =&gt; false,
        "jdbc-action-store-table-prefix" =&gt; undefined,
        "jdbc-communication-store-drop-table" =&gt; false,
        "jdbc-communication-store-table-prefix" =&gt; undefined,
        "jdbc-state-store-drop-table" =&gt; false,
        "jdbc-state-store-table-prefix" =&gt; undefined,
        "jdbc-store-datasource" =&gt; undefined,
        "jts" =&gt; false,
        "node-identifier" =&gt; "1",
        "number-of-aborted-transactions" =&gt; 0L,
        "number-of-application-rollbacks" =&gt; 0L,
        "number-of-committed-transactions" =&gt; 0L,
        "number-of-heuristics" =&gt; 0L,
        "number-of-inflight-transactions" =&gt; 0L,
        "number-of-nested-transactions" =&gt; 0L,
        "number-of-resource-rollbacks" =&gt; 0L,
        "number-of-timed-out-transactions" =&gt; 0L,
        "number-of-transactions" =&gt; 0L,
        "object-store-path" =&gt; "tx-object-store",
        "object-store-relative-to" =&gt; "jboss.server.data.dir",
        "path" =&gt; "var",
        "process-id-socket-binding" =&gt; undefined,
        "process-id-socket-max-ports" =&gt; 10,
        "process-id-uuid" =&gt; true,
        "recovery-listener" =&gt; false,
        "relative-to" =&gt; "jboss.server.data.dir",
        "socket-binding" =&gt; "txn-recovery-environment",
        "status-socket-binding" =&gt; "txn-status-manager",
        "use-hornetq-store" =&gt; false,
        "use-jdbc-store" =&gt; false,
        "log-store" =&gt; {"log-store" =&gt; {
            "type" =&gt; "default",
            "transactions" =&gt; undefined
        }}
    }
}
[standalone@localhost:9999 /]
</pre>
</div>
</div>
</div>


<div id="outline-container-sec-2" class="outline-2">
<h2 id="sec-2"><span class="section-number-2">2</span> <code>remoting-jmx</code> 方式</h2>
<div class="outline-text-2" id="text-2">
<p>
JBossAS 7.x のJMX情報を参照するには <code>$JBOSS_HOME/bin/jconsole.sh</code> のGUIツールを利用す
るのが一般的だと思います。コマンドから参照するにはJDKのJMX APIを用いて自前のコードで
頑張るか。 <code>jmxterm</code> といゆツールを使うかです。ここでは後者について検証しました。
<code>jmxterm</code> でlocalhostのJBossASのJMX情報参照はOKで、リモートからは認証処理で失敗した。
</p>
</div>

<div id="outline-container-sec-2-1" class="outline-3">
<h3 id="sec-2-1"><span class="section-number-3">2.1</span> JBossAS接続用のjmxterm起動スクリプト</h3>
<div class="outline-text-3" id="text-2-1">
<p>
<code>jmxterm</code> は <a href="http://wiki.cyclopsgroup.org/jmxterm">ここ</a> からダウンロードできる。
</p>
<pre class="example">
#!/bin/sh

EAP_HOME=/opt/jboss-eap-6.2
HOST_URL=service:jmx:remoting-jmx://localhost:9999

java -classpath `dirname $0`/jmxterm-1.0-alpha-4-uber.jar:$EAP_HOME/bin/client/jboss-cli-client.jar org.codehaus.classworlds.uberjar.boot.Bootstrapper -l "$HOST_URL"
</pre>

<p>
起動時のイメージ
</p>
<pre class="example">
# ./jmxterm.sh
9 30, 2014 12:42:18 午後 org.xnio.Xnio &lt;clinit&gt;
INFO: XNIO Version 3.0.7.GA-redhat-1
9 30, 2014 12:42:18 午後 org.xnio.nio.NioXnio &lt;clinit&gt;
INFO: XNIO NIO Implementation Version 3.0.7.GA-redhat-1
9 30, 2014 12:42:18 午後 org.jboss.remoting3.EndpointImpl &lt;clinit&gt;
INFO: JBoss Remoting version 3.2.18.GA-redhat-1
Welcome to JMX terminal. Type "help" for available commands.
$&gt;
</pre>

<p>
リモートから接続する場合、認証でエラー
</p>
<pre class="example">
$ ./jmxterm.sh
9 30, 2014 12:43:31 午後 org.xnio.Xnio &lt;clinit&gt;
INFO: XNIO Version 3.0.7.GA-redhat-1
9 30, 2014 12:43:31 午後 org.xnio.nio.NioXnio &lt;clinit&gt;
INFO: XNIO NIO Implementation Version 3.0.7.GA-redhat-1
9 30, 2014 12:43:31 午後 org.jboss.remoting3.EndpointImpl &lt;clinit&gt;
INFO: JBoss Remoting version 3.2.18.GA-redhat-1
9 30, 2014 12:43:34 午後 org.jboss.remoting3.remote.RemoteConnection handleException
ERROR: JBREM000200: Remote connection failed: javax.security.sasl.SaslException: Authentication failed: all available authentication mechanisms failed
---------------------------------------------------
constituent[0]: jar:file:/opt/jmxterm/jmxterm-1.0-alpha-4-uber.jar!/WORLDS-INF/lib/jmxterm.jar
constituent[1]: jar:file:/opt/jmxterm/jmxterm-1.0-alpha-4-uber.jar!/WORLDS-INF/lib/commons-beanutils.jar
constituent[2]: jar:file:/opt/jmxterm/jmxterm-1.0-alpha-4-uber.jar!/WORLDS-INF/lib/commons-cli.jar
constituent[3]: jar:file:/opt/jmxterm/jmxterm-1.0-alpha-4-uber.jar!/WORLDS-INF/lib/commons-collections.jar
constituent[4]: jar:file:/opt/jmxterm/jmxterm-1.0-alpha-4-uber.jar!/WORLDS-INF/lib/commons-lang.jar
constituent[5]: jar:file:/opt/jmxterm/jmxterm-1.0-alpha-4-uber.jar!/WORLDS-INF/lib/commons-logging.jar
constituent[6]: jar:file:/opt/jmxterm/jmxterm-1.0-alpha-4-uber.jar!/WORLDS-INF/lib/commons-io.jar
constituent[7]: jar:file:/opt/jmxterm/jmxterm-1.0-alpha-4-uber.jar!/WORLDS-INF/lib/jcli.jar
constituent[8]: jar:file:/opt/jmxterm/jmxterm-1.0-alpha-4-uber.jar!/WORLDS-INF/lib/jline.jar
---------------------------------------------------
javax.security.sasl.SaslException: Authentication failed: all available authentication mechanisms failed
	at org.jboss.remoting3.remote.ClientConnectionOpenListener$Capabilities.handleEvent(ClientConnectionOpenListener.java:367)
	at org.jboss.remoting3.remote.ClientConnectionOpenListener$Capabilities.handleEvent(ClientConnectionOpenListener.java:229)
	at org.xnio.ChannelListeners.invokeChannelListener(ChannelListeners.java:72)
	at org.xnio.channels.TranslatingSuspendableChannel.handleReadable(TranslatingSuspendableChannel.java:189)
	at org.xnio.channels.TranslatingSuspendableChannel$1.handleEvent(TranslatingSuspendableChannel.java:103)
	at org.xnio.ChannelListeners.invokeChannelListener(ChannelListeners.java:72)
	at org.xnio.channels.TranslatingSuspendableChannel.handleReadable(TranslatingSuspendableChannel.java:189)
	at org.xnio.ssl.JsseConnectedSslStreamChannel.handleReadable(JsseConnectedSslStreamChannel.java:180)
	at org.xnio.channels.TranslatingSuspendableChannel$1.handleEvent(TranslatingSuspendableChannel.java:103)
	at org.xnio.ChannelListeners.invokeChannelListener(ChannelListeners.java:72)
	at org.xnio.nio.NioHandle.run(NioHandle.java:90)
	at org.xnio.nio.WorkerThread.run(WorkerThread.java:187)
	at ...asynchronous invocation...(Unknown Source)
	at org.jboss.remoting3.EndpointImpl.doConnect(EndpointImpl.java:270)
	at org.jboss.remoting3.EndpointImpl.doConnect(EndpointImpl.java:251)
	at org.jboss.remoting3.EndpointImpl.connect(EndpointImpl.java:349)
	at org.jboss.remoting3.EndpointImpl.connect(EndpointImpl.java:333)
	at org.jboss.remotingjmx.RemotingConnector.internalRemotingConnect(RemotingConnector.java:227)
	at org.jboss.remotingjmx.RemotingConnector.internalConnect(RemotingConnector.java:148)
	at org.jboss.remotingjmx.RemotingConnector.connect(RemotingConnector.java:99)
	at javax.management.remote.JMXConnectorFactory.connect(JMXConnectorFactory.java:270)
	at org.cyclopsgroup.jmxterm.cc.SessionImpl.doConnect(SessionImpl.java:85)
	at org.cyclopsgroup.jmxterm.cc.SessionImpl.connect(SessionImpl.java:49)
	at org.cyclopsgroup.jmxterm.cc.CommandCenter.connect(CommandCenter.java:110)
	at org.cyclopsgroup.jmxterm.boot.CliMain.execute(CliMain.java:139)
	at org.cyclopsgroup.jmxterm.boot.CliMain.main(CliMain.java:48)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.codehaus.classworlds.Launcher.launchStandard(Launcher.java:353)
	at org.codehaus.classworlds.Launcher.launch(Launcher.java:264)
	at org.codehaus.classworlds.Launcher.mainWithExitCode(Launcher.java:430)
	at org.codehaus.classworlds.Launcher.main(Launcher.java:375)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.codehaus.classworlds.uberjar.boot.Bootstrapper.bootstrap(Bootstrapper.java:209)
	at org.codehaus.classworlds.uberjar.boot.Bootstrapper.main(Bootstrapper.java:116)
$
</pre>
</div>
</div>

<div id="outline-container-sec-2-2" class="outline-3">
<h3 id="sec-2-2"><span class="section-number-3">2.2</span> jmxterm基本的な使い方</h3>
<div class="outline-text-3" id="text-2-2">
<pre class="example">
★ドメインリストの取得
$&gt;domains
#following domains are available
Catalina
JMImplementation
com.sun.management
java.lang
java.nio
java.util.logging
jboss.as
jboss.as.expr
jboss.jta
jboss.modules
jboss.msc
jboss.remoting.handler
jboss.web
jboss.ws

★特定ドメインのbeanリストの取得
$&gt;beans -d jboss.web
#domain = jboss.web:
jboss.web:J2EEApplication=none,J2EEServer=none,WebModule=//default-host/,j2eeType=Servlet,name=WelcomeContextConsoleServlet
jboss.web:J2EEApplication=none,J2EEServer=none,j2eeType=WebModule,name=//default-host/
jboss.web:J2EEApplication=none,J2EEServer=none,j2eeType=WebModule,name=//default-host/sss
jboss.web:address="/0.0.0.0",port=8080,type=Connector
jboss.web:address="/0.0.0.0",port=8080,type=ProtocolHandler
jboss.web:host=default-host,name=ErrorReportValve,type=Valve
jboss.web:host=default-host,name=SecurityContextAssociationValve,path=/sss,type=Valve
jboss.web:host=default-host,name=StandardContextValve,path=/,type=Valve
jboss.web:host=default-host,name=StandardContextValve,path=/sss,type=Valve
jboss.web:host=default-host,name=StandardHostValve,type=Valve
jboss.web:host=default-host,path=/,type=Cache
jboss.web:host=default-host,path=/,type=Manager
jboss.web:host=default-host,path=/sss,realmPath=/realm0,type=Realm
jboss.web:host=default-host,path=/sss,type=Cache
jboss.web:host=default-host,path=/sss,type=Manager
jboss.web:host=default-host,type=Host
jboss.web:name=StandardEngineValve,type=Valve
jboss.web:name=http--0.0.0.0-8080,type=GlobalRequestProcessor
jboss.web:name=http--0.0.0.0-8080,type=ThreadPool
jboss.web:serviceName=jboss.web,type=Service
jboss.web:type=Engine

★beanの中身を参照する
★ -b の後ろはbeansコマンドで出力した文字列を指定する。
★ *  全部の属性とメソッドを出力する
★ bean所属のドメインを指定する
$&gt;get -b jboss.web:address="/0.0.0.0",port=8080,type=Connector * -d jboss.web
#mbean = jboss.web:address="/0.0.0.0",port=8080,type=Connector:
port = 8080;

protocol = HTTP/1.1;

useIPVHosts = false;

objectName = jboss.web:type=Connector,port=8080,address="/0.0.0.0";

redirectPort = 443;

........
</pre>
</div>
</div>

<div id="outline-container-sec-2-3" class="outline-3">
<h3 id="sec-2-3"><span class="section-number-3">2.3</span> Web系ワーカスレッドの情報取得</h3>
<div class="outline-text-3" id="text-2-3">
<font color="red"><strong>
<p>
これはJMX方式しか取れないぽい。
</p>
</strong></font>
<p>
Web系ワーカスレッドの実装はtomcatそのものが取り入れられているぽいで、JBossASに
<code>-Dorg.apache.tomcat.util.ENABLE_MODELER=true</code> オプションを付けて起動する必要がある。
</p>

<pre class="example">
$&gt;get -b jboss.web:address="/0.0.0.0",port=8080,type=Connector * -d jboss.web
#mbean = jboss.web:address="/0.0.0.0",port=8080,type=Connector:
port = 8080;

protocol = HTTP/1.1;

useIPVHosts = false;

objectName = jboss.web:type=Connector,port=8080,address="/0.0.0.0";

redirectPort = 443;

secure = false;

proxyName = null;

enableLookups = false;

maxPostSize = 2097152;

proxyPort = 0;

available = true;

modelerType = org.apache.catalina.connector.Connector;

info = org.apache.catalina.connector.Connector/2.1;

bufferSize = 2048;

scheme = http;

xpoweredBy = false;

allowTrace = false;

domain = jboss.web;

useBodyEncodingForURI = false;

controller = jboss.web:type=Connector,port=8080,address="/0.0.0.0";

uRIEncoding = null;

maxSavePostSize = 4096;

protocolHandlerClassName = org.apache.coyote.http11.Http11Protocol;

$&gt;
</pre>
</div>
</div>

<div id="outline-container-sec-2-4" class="outline-3">
<h3 id="sec-2-4"><span class="section-number-3">2.4</span> リクエストプロセッサーの稼働状況</h3>
<div class="outline-text-3" id="text-2-4">
<pre class="example">
$&gt;get -b jboss.web:name=http--0.0.0.0-8080,type=GlobalRequestProcessor *
#mbean = jboss.web:name=http--0.0.0.0-8080,type=GlobalRequestProcessor:
bytesSent = 0;

bytesReceived = 0;

processingTime = 0;

errorCount = 0;

maxTime = 0;

requestCount = 0;

modelerType = org.apache.coyote.RequestGroupInfo;

$&gt;
</pre>
</div>
</div>
</div>


<div id="outline-container-sec-3" class="outline-2">
<h2 id="sec-3"><span class="section-number-2">3</span> <code>RESTful</code> 方式</h2>
<div class="outline-text-2" id="text-3">
<pre class="example">
$ curl --digest http://localhost:9990/management?json.pretty -u admin
Enter host password for user 'admin':
{
    "management-major-version" : 1,
    "management-micro-version" : 0,
    "management-minor-version" : 5,
    "name" : "localhost",
    "namespaces" : [],
    "product-name" : "EAP",
    "product-version" : "6.2.4.GA",
    "profile-name" : null,
    "release-codename" : "Janus",
    "release-version" : "7.3.4.Final-redhat-1",
    "schema-locations" : [],
    "core-service" : {
        "management" : null,
        "service-container" : null,
        "module-loading" : null,
        "server-environment" : null,
        "platform-mbean" : null,
        "patching" : null
    },
</pre>
</div>
</div>

<div id="outline-container-sec-4" class="outline-2">
<h2 id="sec-4"><span class="section-number-2">4</span> 参考情報</h2>
<div class="outline-text-2" id="text-4">
<ul class="org-ul">
<li><a href="https://docs.jboss.org/author/display/AS71/CLI+Recipes">CLI Recipes</a>
</li>
<li><a href="http://zorka.io/install/jboss7.html">JBoss 7.x and Wildfly 8.0 monitoring</a>
</li>
<li><a href="http://www.denniskanbier.nl/blog/monitoring/jboss-eap-6-monitoring-using-remoting-jmx-and-zabbix/">JBoss EAP 6 monitoring using remoting-jmx and Zabbix</a>
</li>
<li><a href="http://blog.akquinet.de/2014/09/18/jboss-eap-wildfly-management-interfaces-and-clients/">JBoss EAP / Wildfly Management Interfaces and Clients</a>
</li>
</ul>
</div>
</div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[レシピ]Kerbroseパスワード変更ためのPAM設定]]></title>
    <link href="http://luozengbin.github.io/blog/2014-08-16-%5B%E3%83%AC%E3%82%B7%E3%83%94%5Dkerbrose%E3%83%91%E3%82%B9%E3%83%AF%E3%83%BC%E3%83%89%E5%A4%89%E6%9B%B4%E3%81%9F%E3%82%81%E3%81%AEpam%E8%A8%AD%E5%AE%9A.html"/>
    <updated>2014-08-16T00:00:00+09:00</updated>
    <id>http://luozengbin.github.io/blog/[レシピ]kerbroseパスワード変更ためのpam設定</id>
    <content type="html"><![CDATA[<p>
前の記事で <code>pam_krb5</code> モジュールでKerbrose認証を実現しました。ここで <code>passwd</code> コマン
ドラインでKDCに登録されたプリンシバル鍵のパスワードを変更する方法を紹介します。
</p>

<p>
<!-- more -->
</p>

<p>
<code>passwd</code> コマンド実行時に裏で動いているのはPAMモジュールですので、
<code>/etc/pam.d./passwd</code> に <code>pam_kbr5</code> モジュールを適用するようにすれば、パスワード変更時
に自動的にKDCのデータベースに反映されます。
</p>

<p>
<code>/etc/pam.d./passwd</code>
</p>
<pre class="example">
#%PAM-1.0
password        requisite       pam_cracklib.so retry=3 difok=1 minlen=8 dcredit=-1
password        sufficient      pam_unix.so sha512 shadow nullok use_authtok
password        sufficient      pam_krb5.so   ★ここです
password        required        pam_deny.so
</pre>

<p>
パスワード変更を実行してみましょう。
</p>
<pre class="example">
[kbr_u01@mimi ~]$ passwd
Kerberos 5 パスワード:                     ★現在のパスワードが聞かれる
新しいパスワード:
新しいパスワードを再入力してください:
passwd: パスワードは正しく更新されました
[kbr_u01@mimi ~]$
</pre>

<p>
パスワード変更時のシスログ
</p>
<pre class="example">
Aug 16 19:01:38 mimi passwd[15359]: pam_unix(passwd:chauthtok): user "kbr_u01" does not exist in /etc/passwd
Aug 16 19:01:38 mimi passwd[15359]: pam_krb5[15359]: password changed for kbr_u01@JIZAI-DOMAIN.JP
Aug 16 19:01:38 mimi passwd[15359]: pam_krb5[15359]: TGT verified using key for 'host/mimi.jizai-domain.jp@JIZAI-DOMAIN.JP'
</pre>

<p>
KDCサーバ側のログ
</p>
<pre class="example">
2014-08-16T19:34:36+09:00 pipi local5 info krb5kdc[28554]:  AS_REQ (6 etypes {18 17 16 23 25 26}) 192.168.100.10: ISSUE: authtime 1408185276, etypes {rep=18 tkt=18 ses=18}, kbr_u01@JIZAI-DOMAIN.JP for kadmin/changepw@JIZAI-DOMAIN.JP
2014-08-16T19:34:36+09:00 pipi local5 info krb5kdc[28554]:  AS_REQ (6 etypes {18 17 16 23 25 26}) 192.168.100.10: ISSUE: authtime 1408185276, etypes {rep=18 tkt=18 ses=18}, kbr_u01@JIZAI-DOMAIN.JP for kadmin/changepw@JIZAI-DOMAIN.JP

2014-08-16T19:34:59+09:00 pipi local5 info krb5kdc[28554]:  AS_REQ (6 etypes {18 17 16 23 25 26}) 192.168.100.10: ISSUE: authtime 1408185299, etypes {rep=18 tkt=18 ses=18}, kbr_u01@JIZAI-DOMAIN.JP for krbtgt/JIZAI-DOMAIN.JP@JIZAI-DOMAIN.JP
2014-08-16T19:34:59+09:00 pipi local5 info krb5kdc[28554]:  AS_REQ (6 etypes {18 17 16 23 25 26}) 192.168.100.10: ISSUE: authtime 1408185299, etypes {rep=18 tkt=18 ses=18}, kbr_u01@JIZAI-DOMAIN.JP for krbtgt/JIZAI-DOMAIN.JP@JIZAI-DOMAIN.JP
2014-08-16T19:34:59+09:00 pipi local5 info krb5kdc[28554]:  TGS_REQ (6 etypes {18 17 16 23 25 26}) 192.168.100.10: ISSUE: authtime 1408185299, etypes {rep=18 tkt=18 ses=18}, kbr_u01@JIZAI-DOMAIN.JP for host/mimi.jizai-domain.jp@JIZAI-DOMAIN.JP
2014-08-16T19:34:59+09:00 pipi local5 info krb5kdc[28554]:  TGS_REQ (6 etypes {18 17 16 23 25 26}) 192.168.100.10: ISSUE: authtime 1408185299, etypes {rep=18 tkt=18 ses=18}, kbr_u01@JIZAI-DOMAIN.JP for host/mimi.jizai-domain.jp@JIZAI-DOMAIN.JP
</pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[レシピ]Kerberos認証環境の構築]]></title>
    <link href="http://luozengbin.github.io/blog/2014-08-15-%5B%E3%83%AC%E3%82%B7%E3%83%94%5Dkerberos%E8%AA%8D%E8%A8%BC%E7%92%B0%E5%A2%83%E3%81%AE%E6%A7%8B%E7%AF%89.html"/>
    <updated>2014-08-15T00:00:00+09:00</updated>
    <id>http://luozengbin.github.io/blog/[レシピ]kerberos認証環境の構築</id>
    <content type="html"><![CDATA[<div id="table-of-contents">
<h2>Table of Contents</h2>
<div id="text-table-of-contents">
<ul>
<li><a href="#sec-1">1. 時刻を合わせる</a>
<ul>
<li><a href="#sec-1-1">1.1. NTPサービス構築手順</a></li>
<li><a href="#sec-1-2">1.2. NTPクライアントの設定</a></li>
</ul>
</li>
<li><a href="#sec-2">2. Kerbroseサービスの構築手順</a></li>
<li><a href="#sec-3">3. KDCにプリンシバルの登録</a></li>
<li><a href="#sec-4">4. KDCデータベースのバックアップ</a></li>
<li><a href="#sec-5">5. Kerberos認証の流れを確認する</a></li>
<li><a href="#sec-6">6. LDAP+pam_krbでLinuxログイン認証</a></li>
<li><a href="#sec-7">7. 参考情報</a></li>
</ul>
</div>
</div>
<p>
夏休み中にKerbrose認証環境の構築復習を行いました。ここでメモしておきます。
<!-- more -->
</p>

<div id="outline-container-sec-1" class="outline-2">
<h2 id="sec-1"><span class="section-number-2">1</span> 時刻を合わせる</h2>
<div class="outline-text-2" id="text-1">
<p>
kerbroseチケットの有効期限及び、クライアントマシンタイムスタンプチェックをより正確に
働けるようにするため。同一レルムのマシンの時刻を同期化しておきましょう。
</p>

<p>
KDCサーバに <code>ntp</code> サービスを立ち上げて、他のマシンからKDCサーバの <code>ntp</code> サービスを使
用するようにする。
</p>
</div>

<div id="outline-container-sec-1-1" class="outline-3">
<h3 id="sec-1-1"><span class="section-number-3">1.1</span> NTPサービス構築手順</h3>
<div class="outline-text-3" id="text-1-1">
<p>
<code>sudo pacman -S ntp</code> でntpパッケージをインストールする。インストールされたファイル一
覧は以下となります。
</p>

<pre class="example">
[akira@pipi ~]$ sudo pacman -Ql ntp
ntp /etc/
ntp /etc/ntp.conf                       ★NTPサービス設定ファイル
ntp /usr/
ntp /usr/bin/
ntp /usr/bin/calc_tickadj
ntp /usr/bin/ntp-keygen
ntp /usr/bin/ntp-wait
ntp /usr/bin/ntpd
ntp /usr/bin/ntpdate
ntp /usr/bin/ntpdc
ntp /usr/bin/ntpq
ntp /usr/bin/ntptime
ntp /usr/bin/ntptrace
ntp /usr/bin/sntp
ntp /usr/bin/tickadj
ntp /usr/lib/
ntp /usr/lib/systemd/
ntp /usr/lib/systemd/ntp-units.d/
ntp /usr/lib/systemd/ntp-units.d/50-ntp.list
ntp /usr/lib/systemd/system/
ntp /usr/lib/systemd/system/ntpd.service     ★ntpdデーモン起動用サービス定義ファイル
ntp /usr/lib/systemd/system/ntpdate.service  ★ntpdプロセスで時刻を同期化するOneShotサービス定義ファイル
ntp /usr/share/
ntp /usr/share/doc/
...中略...
</pre>

<p>
<code>/etc/ntp.conf</code> ファイルサンプル
</p>
<pre class="example">
# With the default settings below, ntpd will only synchronize your clock.
#
# For details, see:
# - the ntp.conf man page
# - http://support.ntp.org/bin/view/Support/GettingStarted
# - https://wiki.archlinux.org/index.php/Network_Time_Protocol_daemon

# Associate to public NTP pool servers; see http://www.pool.ntp.org/
server 0.jp.pool.ntp.org iburst             ★物理的に近いサーバープールを使用する
server 1.jp.pool.ntp.org iburst
server 2.jp.pool.ntp.org iburst
server 3.jp.pool.ntp.org iburst

# ネットが繋がらない時に自身を NTP サーバーに変身する
server 127.127.1.1                          ★LAN内のマシンにntpサービスを継続提供するための設定
fudge  127.127.1.1 stratum 12

# Only allow read-only access from localhost
restrict default noquery nopeer
restrict 127.0.0.1
restrict ::1

# Location of drift file
driftfile /var/lib/ntp/ntp.drift

# Location of lof file
logfile /var/log/ntp.log                     ★ログ出力先の指定

# NOTE: If you run dhcpcd and have lines like 'restrict' and 'fudge' appearing
# here, be sure to add '-Y -N' to the dhcpcd_ethX variables in /etc/conf.d/net
</pre>

<p>
サービスを有効化して起動する。
</p>
<pre class="example">
$ sudo systemctl enable ntpd.service
Created symlink from /etc/systemd/system/multi-user.target.wants/ntpd.service to /usr/lib/systemd/system/ntpd.service.
$ sudo systemctl start ntpd.service
</pre>
</div>
</div>

<div id="outline-container-sec-1-2" class="outline-3">
<h3 id="sec-1-2"><span class="section-number-3">1.2</span> NTPクライアントの設定</h3>
<div class="outline-text-3" id="text-1-2">
<p>
ntpクライアントは <code>ntp</code> パッケージの <code>ntpdate.service</code> サービスを利用してマシン起動時
にLAN内のntpサービスと時刻同期化を行います。
</p>

<p>
LAN内のntpサービスを利用するために <code>/etc/ntp.conf</code> にntpサーバのURLをLAN内のntpサー
バに指すように設定を行う。
</p>
<pre class="example">
[akira@mimi ~]$ cat /etc/ntp.conf
# LAN内のntpサービスを利用する
server 192.168.100.4

# Only allow read-only access from localhost
restrict default noquery nopeer
restrict 127.0.0.1
restrict ::1

# Location of drift file
driftfile /var/lib/ntp/ntp.drift
</pre>

<p>
<code>ntpdate.service</code> を起動する
</p>

<pre class="example">
$ sudo systemctl enable ntpdate.service 
Created symlink from /etc/systemd/system/multi-user.target.wants/ntpdate.service to /usr/lib/systemd/system/ntpdate.service.
$ sudo systemctl start ntpdate.service
</pre>
</div>
</div>
</div>

<div id="outline-container-sec-2" class="outline-2">
<h2 id="sec-2"><span class="section-number-2">2</span> Kerbroseサービスの構築手順</h2>
<div class="outline-text-2" id="text-2">
<p>
MITの <a href="http://web.mit.edu/kerberos/">KerbroseV</a> を用いて構築します。まず、 <code>pacman</code> で <code>kbr5</code> パッケージをインストー
ルしましょう。
</p>
<pre class="example">
$ sudo pacman -S krb5
warning: krb5-1.12.1-1 is up to date -- reinstalling
resolving dependencies...
looking for inter-conflicts...

Packages (1): krb5-1.12.1-1

Total Installed Size:   3.60 MiB
Net Upgrade Size:       0.00 MiB

:: Proceed with installation? [Y/n] 
(1/1) checking keys in keyring                                                                 [########################################################] 100%
(1/1) checking package integrity                                                               [########################################################] 100%
(1/1) loading package files                                                                    [########################################################] 100%
(1/1) checking for file conflicts                                                              [########################################################] 100%
(1/1) checking available disk space                                                            [########################################################] 100%
(1/1) reinstalling krb5                                                                        [########################################################] 100%
synchronizing filesystem...
$
</pre>

<p>
kbr5パッケージの構成を以下のようになります、主要ファイルの説明は <code>★</code> マークにて解説
する。
</p>
<pre class="example">
$ sudo pacman -Ql krb5
krb5 /etc/
krb5 /etc/krb5.conf                  ★Kerbrose認証システム参加するための設定ファイル
krb5 /usr/
krb5 /usr/bin/
krb5 /usr/bin/gss-client
krb5 /usr/bin/gss-server
krb5 /usr/bin/k5srvutil
krb5 /usr/bin/kadmin                 ★Kerbroseの認証データをメンテナンスするためのツール
krb5 /usr/bin/kadmin.local           ★kadminと同じが、ローカルのrootユーザでパスワード入力なしで利用可能
krb5 /usr/bin/kadmind                ★kadminデーモンプロセス、tcp/udpで同じレルムに属するクライアントに管理サービスを提供する
krb5 /usr/bin/kdb5_ldap_util
krb5 /usr/bin/kdb5_util              ★KDCデータベースメンテナンス用のツール
krb5 /usr/bin/kdestroy               ★ローカルマシンに取得済みのKerbroseチケットを破棄するためのツール
krb5 /usr/bin/kinit                  ★TGTチケット取得用
krb5 /usr/bin/klist                  ★取得済みチケット一覧表示用
krb5 /usr/bin/kpasswd                ★プリンシバルの認証パスワード変更用
krb5 /usr/bin/kprop
krb5 /usr/bin/kpropd
krb5 /usr/bin/kproplog
krb5 /usr/bin/krb5-config
krb5 /usr/bin/krb5-send-pr
krb5 /usr/bin/krb5kdc
krb5 /usr/bin/ksu
krb5 /usr/bin/kswitch
krb5 /usr/bin/ktutil
krb5 /usr/bin/kvno
krb5 /usr/bin/sclient
krb5 /usr/bin/sim_client
krb5 /usr/bin/sim_server
krb5 /usr/bin/sserver
krb5 /usr/bin/uuclient
krb5 /usr/bin/uuserver
krb5 /usr/include/
krb5 /usr/include/gssapi.h
krb5 /usr/include/gssapi/
krb5 /usr/include/gssapi/gssapi.h
krb5 /usr/include/gssapi/gssapi_ext.h
krb5 /usr/include/gssapi/gssapi_generic.h
krb5 /usr/include/gssapi/gssapi_krb5.h
krb5 /usr/include/gssapi/mechglue.h
krb5 /usr/include/gssrpc/
krb5 /usr/include/gssrpc/auth.h
krb5 /usr/include/gssrpc/auth_gss.h
krb5 /usr/include/gssrpc/auth_gssapi.h
krb5 /usr/include/gssrpc/auth_unix.h
krb5 /usr/include/gssrpc/clnt.h
krb5 /usr/include/gssrpc/netdb.h
krb5 /usr/include/gssrpc/pmap_clnt.h
krb5 /usr/include/gssrpc/pmap_prot.h
krb5 /usr/include/gssrpc/pmap_rmt.h
krb5 /usr/include/gssrpc/rename.h
krb5 /usr/include/gssrpc/rpc.h
krb5 /usr/include/gssrpc/rpc_msg.h
krb5 /usr/include/gssrpc/svc.h
krb5 /usr/include/gssrpc/svc_auth.h
krb5 /usr/include/gssrpc/types.h
krb5 /usr/include/gssrpc/xdr.h
krb5 /usr/include/kadm5/
krb5 /usr/include/kadm5/admin.h
krb5 /usr/include/kadm5/chpass_util_strings.h
krb5 /usr/include/kadm5/kadm_err.h
krb5 /usr/include/kdb.h
krb5 /usr/include/krad.h
krb5 /usr/include/krb5.h
krb5 /usr/include/krb5/
krb5 /usr/include/krb5/ccselect_plugin.h
krb5 /usr/include/krb5/clpreauth_plugin.h
krb5 /usr/include/krb5/hostrealm_plugin.h
krb5 /usr/include/krb5/kadm5_hook_plugin.h
krb5 /usr/include/krb5/kdcpreauth_plugin.h
krb5 /usr/include/krb5/krb5.h
krb5 /usr/include/krb5/localauth_plugin.h
krb5 /usr/include/krb5/locate_plugin.h
krb5 /usr/include/krb5/plugin.h
krb5 /usr/include/krb5/preauth_plugin.h
krb5 /usr/include/krb5/pwqual_plugin.h
krb5 /usr/include/profile.h
krb5 /usr/include/verto-module.h
krb5 /usr/include/verto.h
krb5 /usr/lib/
krb5 /usr/lib/krb5/
krb5 /usr/lib/krb5/plugins/
krb5 /usr/lib/krb5/plugins/kdb/
krb5 /usr/lib/krb5/plugins/kdb/db2.so
krb5 /usr/lib/krb5/plugins/kdb/kldap.so
krb5 /usr/lib/krb5/plugins/preauth/
krb5 /usr/lib/krb5/plugins/preauth/otp.so
krb5 /usr/lib/krb5/plugins/preauth/pkinit.so
krb5 /usr/lib/libgssapi_krb5.so
krb5 /usr/lib/libgssapi_krb5.so.2
krb5 /usr/lib/libgssapi_krb5.so.2.2
krb5 /usr/lib/libgssrpc.so
krb5 /usr/lib/libgssrpc.so.4
krb5 /usr/lib/libgssrpc.so.4.2
krb5 /usr/lib/libk5crypto.so
krb5 /usr/lib/libk5crypto.so.3
krb5 /usr/lib/libk5crypto.so.3.1
krb5 /usr/lib/libkadm5clnt.so
krb5 /usr/lib/libkadm5clnt_mit.so
krb5 /usr/lib/libkadm5clnt_mit.so.9
krb5 /usr/lib/libkadm5clnt_mit.so.9.0
krb5 /usr/lib/libkadm5srv.so
krb5 /usr/lib/libkadm5srv_mit.so
krb5 /usr/lib/libkadm5srv_mit.so.9
krb5 /usr/lib/libkadm5srv_mit.so.9.0
krb5 /usr/lib/libkdb5.so
krb5 /usr/lib/libkdb5.so.7
krb5 /usr/lib/libkdb5.so.7.0
krb5 /usr/lib/libkdb_ldap.so
krb5 /usr/lib/libkdb_ldap.so.1
krb5 /usr/lib/libkdb_ldap.so.1.0
krb5 /usr/lib/libkrad.so
krb5 /usr/lib/libkrad.so.0
krb5 /usr/lib/libkrad.so.0.0
krb5 /usr/lib/libkrb5.so
krb5 /usr/lib/libkrb5.so.3
krb5 /usr/lib/libkrb5.so.3.3
krb5 /usr/lib/libkrb5support.so
krb5 /usr/lib/libkrb5support.so.0
krb5 /usr/lib/libkrb5support.so.0.1
krb5 /usr/lib/libverto.so
krb5 /usr/lib/libverto.so.0
krb5 /usr/lib/libverto.so.0.0
krb5 /usr/lib/pkgconfig/
krb5 /usr/lib/pkgconfig/gssrpc.pc
krb5 /usr/lib/pkgconfig/kadm-client.pc
krb5 /usr/lib/pkgconfig/kadm-server.pc
krb5 /usr/lib/pkgconfig/kdb.pc
krb5 /usr/lib/pkgconfig/krb5-gssapi.pc
krb5 /usr/lib/pkgconfig/krb5.pc
krb5 /usr/lib/pkgconfig/mit-krb5-gssapi.pc
krb5 /usr/lib/pkgconfig/mit-krb5.pc
krb5 /usr/lib/systemd/
krb5 /usr/lib/systemd/system/
krb5 /usr/lib/systemd/system/krb5-kadmind.service    ★KDCデータ管理サービス
krb5 /usr/lib/systemd/system/krb5-kdc.service        ★KDCサービス
krb5 /usr/lib/systemd/system/krb5-kpropd.service
krb5 /usr/lib/systemd/system/krb5-kpropd.socket
krb5 /usr/lib/systemd/system/krb5-kpropd@.service
krb5 /usr/share/
krb5 /usr/share/aclocal/
krb5 /usr/share/aclocal/ac_check_krb5.m4
krb5 /usr/share/doc/
krb5 /usr/share/doc/krb5/
krb5 /usr/share/doc/krb5/examples/                  ★設定ファイルサンプル
krb5 /usr/share/doc/krb5/examples/kdc.conf
krb5 /usr/share/doc/krb5/examples/kerberos.ldif
krb5 /usr/share/doc/krb5/examples/kerberos.schema
krb5 /usr/share/doc/krb5/examples/krb5.conf
krb5 /usr/share/doc/krb5/examples/services.append
krb5 /usr/share/gnats/
krb5 /usr/share/gnats/mit
krb5 /usr/share/licenses/
krb5 /usr/share/licenses/krb5/
krb5 /usr/share/licenses/krb5/LICENSE
krb5 /usr/share/locale/
krb5 /usr/share/locale/en_US/
krb5 /usr/share/locale/en_US/LC_MESSAGES/
krb5 /usr/share/locale/en_US/LC_MESSAGES/mit-krb5.mo
krb5 /usr/share/man/
krb5 /usr/share/man/man1/
krb5 /usr/share/man/man1/k5srvutil.1.gz
krb5 /usr/share/man/man1/kadmin.1.gz
krb5 /usr/share/man/man1/kdestroy.1.gz
krb5 /usr/share/man/man1/kinit.1.gz
krb5 /usr/share/man/man1/klist.1.gz
krb5 /usr/share/man/man1/kpasswd.1.gz
krb5 /usr/share/man/man1/krb5-config.1.gz
krb5 /usr/share/man/man1/krb5-send-pr.1.gz
krb5 /usr/share/man/man1/ksu.1.gz
krb5 /usr/share/man/man1/kswitch.1.gz
krb5 /usr/share/man/man1/ktutil.1.gz
krb5 /usr/share/man/man1/kvno.1.gz
krb5 /usr/share/man/man1/sclient.1.gz
krb5 /usr/share/man/man5/
krb5 /usr/share/man/man5/.k5identity.5.gz
krb5 /usr/share/man/man5/.k5login.5.gz
krb5 /usr/share/man/man5/k5identity.5.gz
krb5 /usr/share/man/man5/k5login.5.gz
krb5 /usr/share/man/man5/kadm5.acl.5.gz
krb5 /usr/share/man/man5/kdc.conf.5.gz
krb5 /usr/share/man/man5/krb5.conf.5.gz
krb5 /usr/share/man/man8/
krb5 /usr/share/man/man8/kadmin.local.8.gz
krb5 /usr/share/man/man8/kadmind.8.gz
krb5 /usr/share/man/man8/kdb5_ldap_util.8.gz
krb5 /usr/share/man/man8/kdb5_util.8.gz
krb5 /usr/share/man/man8/kprop.8.gz
krb5 /usr/share/man/man8/kpropd.8.gz
krb5 /usr/share/man/man8/kproplog.8.gz
krb5 /usr/share/man/man8/krb5kdc.8.gz
krb5 /usr/share/man/man8/sserver.8.gz
krb5 /var/
krb5 /var/lib/
krb5 /var/lib/krb5kdc/
krb5 /var/lib/krb5kdc/kdc.conf               ★KDC設定ファイル
$
</pre>

<p>
KDCサーバの設定 <code>/var/lib/krb5kdc/kdc.conf</code>
</p>
<pre class="example">
$ cat kdc.conf
[kdcdefaults]
	kdc_ports = 750,88

[realms]
	JIZAI-DOMAIN.JP = {                                       ★レルムの定義
		database_name = /var/lib/krb5kdc/principal            ★KDCデータベースファイルの格納パス
		acl_file = /var/lib/krb5kdc/kadm5.acl                 ★プリンシバルのアクセスコントロール定義
		key_stash_file = /var/lib/krb5kdc/.k5.JIZAI-DOMAIN.JP ★KDCデータベース暗号化パスワードファイル
		kdc_ports = 750,88                                    ★KDCサービスUDPポート
		max_life = 10h 0m 0s                                  ★発行チケットの有効時間
		max_renewable_life = 7d 0h 0m 0s
	}
$
</pre>

<p>
プリンシバルのアクセスコントロールの定義 <code>kadm5.acl</code>
</p>
<pre class="example">
$ cat /var/lib/krb5kdc/kadm5.acl
*/admin@JIZAI-DOMAIN.JP *
$
</pre>


<p>
レルムに参加するホストに対しての設定 <code>/etc/krb5.conf</code>
</p>
<pre class="example">
$ cat /etc/krb5.conf
[libdefaults]
	default_realm = JIZAI-DOMAIN.JP
    dns_lookup_realm = false
	dns_lookup_kdc = false
	ticket_lifetime = 10h
	renew_lifetime = 7d
	forwardable = true                                  ★TGTチケットの転送を可能にする

[realms]
	JIZAI-DOMAIN.JP = {
        kdc = pipi.jizai-domain.jp:88                   ★KDCサーバ接続情報、DNSから自動取得も可能
		admin_server = pipi.jizai-domain.jp:749         ★kadminサービス接続情報
		default_domain = jizai-domain.jp
	}

[domain_realm]
	jizai-domain.jp  = JIZAI-DOMAIN.JP
    .jizai-domain.jp = JIZAI-DOMAIN.JP

[logging]
        kdc = SYSLOG:INFO:LOCAL5
        admin_server = SYSLOG:INFO:LOCAL5
$
</pre>

<p>
KDCサーバでデータベースを初期化する
</p>
<pre class="example">
$ sudo kdb5_util create -s
Loading random data
Initializing database '/var/lib/krb5kdc/principal' for realm 'JIZAI-DOMAIN.JP',
master key name 'K/M@JIZAI-DOMAIN.JP'                           ★データベース暗号化用プリンシバル：K/M@JIZAI-DOMAIN.JP
You will be prompted for the database Master Password.
It is important that you NOT FORGET this password.
Enter KDC database master key:                                  ★データベース暗号化用パスワード
Re-enter KDC database master key to verify: 

$ ls -al /var/lib/krb5kdc                                       ★データベース作成されることを確認する
total 40
drwxr-xr-x  2 root root 4096 Aug 15 15:37 .
drwxr-xr-x 31 root root 4096 Aug 15 00:00 ..
-rw-------  1 root root   76 Aug 15 15:37 .k5.JIZAI-DOMAIN.JP   ★データベースファイルのパスワードファイル
-rw-r--r--  1 root root   26 Aug 15 14:44 kadm5.acl             ★アクセスコントロールファイル
-rw-r--r--  1 root root  288 Aug 15 14:40 kdc.conf
-rw-------  1 root root 8192 Aug 15 15:37 principal             ★データベースファイル本体
-rw-------  1 root root 8192 Aug 15 15:37 principal.kadm5
-rw-------  1 root root    0 Aug 15 15:37 principal.kadm5.lock
-rw-------  1 root root    0 Aug 15 15:37 principal.ok
$
</pre>

<p>
KDCサーバにてrootアカウントでKDC管理用 <code>root/admin</code> プリンシバルを登録する。
</p>
<pre class="example">
$ sudo kadmin.local -p root/admin -q "addprinc root/admin"
Authenticating as principal root/admin with password.
WARNING: no policy specified for root/admin@JIZAI-DOMAIN.JP; defaulting to no policy
Enter password for principal "root/admin@JIZAI-DOMAIN.JP":            ★root/admin プリンシバルのパスワード
Re-enter password for principal "root/admin@JIZAI-DOMAIN.JP": 
Principal "root/admin@JIZAI-DOMAIN.JP" created.                       ★プリンシバルフルネーム：root/admin@JIZAI-DOMAIN.JP
$
</pre>

<p>
KDCサービスを有効化して起動する
</p>
<pre class="example">
$ sudo systemctl enable krb5-kdc.service              ★KDCサービス
Created symlink from /etc/systemd/system/multi-user.target.wants/krb5-kdc.service to /usr/lib/systemd/system/krb5-kdc.service.

$ sudo systemctl enable krb5-kadmind.service          ★KDC管理用サービス
Created symlink from /etc/systemd/system/multi-user.target.wants/krb5-kadmind.service to /usr/lib/systemd/system/krb5-kadmind.service.

$ sudo systemctl start krb5-kdc.service
$ sudo systemctl start krb5-kadmind.service

★ 使用ポート一覧
$ sudo netstat -nutpl | grep k
tcp        0      0 0.0.0.0:749             0.0.0.0:*               LISTEN      29474/kadmind       
tcp        0      0 0.0.0.0:464             0.0.0.0:*               LISTEN      29474/kadmind       
tcp6       0      0 :::749                  :::*                    LISTEN      29474/kadmind       
tcp6       0      0 :::464                  :::*                    LISTEN      29474/kadmind       
udp        0      0 0.0.0.0:464             0.0.0.0:*                           29474/kadmind       
udp        0      0 0.0.0.0:750             0.0.0.0:*                           29470/krb5kdc       
udp        0      0 0.0.0.0:88              0.0.0.0:*                           29470/krb5kdc       
udp6       0      0 fe80::ba27:ebff:fe0:464 :::*                                29474/kadmind       
udp6       0      0 fe80::ba27:ebff:fe0:750 :::*                                29470/krb5kdc       
udp6       0      0 fe80::ba27:ebff:fe0d:88 :::*                                29470/krb5kdc
</pre>

<p>
サービス起動時のログ
</p>
<pre class="example">
$ sudo tail -f /var/log/everything.log

★kdc起動
2014-08-15T15:55:29+09:00 pipi daemon info systemd[1]:  Starting Kerberos 5 KDC...
2014-08-15T15:55:29+09:00 pipi daemon info systemd[1]:  Started Kerberos 5 KDC.
2014-08-15T15:55:30+09:00 pipi local5 info krb5kdc[29867]:  Loaded
2014-08-15T15:55:30+09:00 pipi local5 info krb5kdc[29867]:  Loaded
2014-08-15T15:55:30+09:00 pipi local5 err krb5kdc[29867]:  preauth pkinit failed to initialize: No realms configured correctly for pkinit support
2014-08-15T15:55:30+09:00 pipi local5 err krb5kdc[29867]:  preauth pkinit failed to initialize: No realms configured correctly for pkinit support
2014-08-15T15:55:30+09:00 pipi local5 info krb5kdc[29867]:  setting up network...
2014-08-15T15:55:30+09:00 pipi local5 info krb5kdc[29867]:  setting up network...
2014-08-15T15:55:30+09:00 pipi local5 info krb5kdc[29867]:  listening on fd 7: udp 0.0.0.0.88 (pktinfo)
2014-08-15T15:55:30+09:00 pipi local5 info krb5kdc[29867]:  listening on fd 7: udp 0.0.0.0.88 (pktinfo)
2014-08-15T15:55:30+09:00 pipi local5 info krb5kdc[29867]:  listening on fd 8: udp 0.0.0.0.750 (pktinfo)
2014-08-15T15:55:30+09:00 pipi local5 info krb5kdc[29867]:  listening on fd 8: udp 0.0.0.0.750 (pktinfo)
2014-08-15T15:55:30+09:00 pipi local5 info krb5kdc[29867]:  setsockopt(9,IPV6_V6ONLY,1) worked
2014-08-15T15:55:30+09:00 pipi local5 info krb5kdc[29867]:  setsockopt(9,IPV6_V6ONLY,1) worked
2014-08-15T15:55:30+09:00 pipi local5 info krb5kdc[29867]:  No realms configured correctly for pkinit support - Cannot request packet info for udp socket address :: port 88
2014-08-15T15:55:30+09:00 pipi local5 info krb5kdc[29867]:  No realms configured correctly for pkinit support - Cannot request packet info for udp socket address :: port 88
2014-08-15T15:55:30+09:00 pipi local5 info krb5kdc[29867]:  skipping unrecognized local address family 17
2014-08-15T15:55:30+09:00 pipi local5 info krb5kdc[29867]:  skipping unrecognized local address family 17
2014-08-15T15:55:30+09:00 pipi local5 info krb5kdc[29867]:  skipping unrecognized local address family 17
2014-08-15T15:55:30+09:00 pipi local5 info krb5kdc[29867]:  skipping unrecognized local address family 17
2014-08-15T15:55:30+09:00 pipi local5 info krb5kdc[29867]:  setsockopt(9,IPV6_V6ONLY,1) worked
2014-08-15T15:55:30+09:00 pipi local5 info krb5kdc[29867]:  setsockopt(9,IPV6_V6ONLY,1) worked
2014-08-15T15:55:30+09:00 pipi local5 info krb5kdc[29867]:  listening on fd 9: udp fe80::ba27:ebff:fe0d:8d3a%eth0.88
2014-08-15T15:55:30+09:00 pipi local5 info krb5kdc[29867]:  listening on fd 9: udp fe80::ba27:ebff:fe0d:8d3a%eth0.88
2014-08-15T15:55:30+09:00 pipi local5 info krb5kdc[29867]:  setsockopt(10,IPV6_V6ONLY,1) worked
2014-08-15T15:55:30+09:00 pipi local5 info krb5kdc[29867]:  setsockopt(10,IPV6_V6ONLY,1) worked
2014-08-15T15:55:30+09:00 pipi local5 info krb5kdc[29867]:  listening on fd 10: udp fe80::ba27:ebff:fe0d:8d3a%eth0.750
2014-08-15T15:55:30+09:00 pipi local5 info krb5kdc[29867]:  listening on fd 10: udp fe80::ba27:ebff:fe0d:8d3a%eth0.750
2014-08-15T15:55:30+09:00 pipi local5 info krb5kdc[29867]:  set up 4 sockets
2014-08-15T15:55:30+09:00 pipi local5 info krb5kdc[29867]:  set up 4 sockets
2014-08-15T15:55:30+09:00 pipi local5 info krb5kdc[29867]:  commencing operation
2014-08-15T15:55:30+09:00 pipi local5 info krb5kdc[29867]:  commencing operation
2014-08-15T15:55:30+09:00 pipi daemon info krb5kdc[29867]:  krb5kdc: starting...

★kadmind起動

2014-08-15T15:56:09+09:00 pipi daemon info systemd[1]:  Starting Kerberos 5 administration server...
2014-08-15T15:56:09+09:00 pipi daemon info systemd[1]:  Started Kerberos 5 administration server.
2014-08-15T15:56:09+09:00 pipi local5 info kadmind[29923]:  No dictionary file specified, continuing without one.
2014-08-15T15:56:09+09:00 pipi local5 info kadmind[29923]:  No dictionary file specified, continuing without one.
2014-08-15T15:56:09+09:00 pipi local5 info kadmind[29923]:  setting up network...
2014-08-15T15:56:09+09:00 pipi local5 info kadmind[29923]:  setting up network...
2014-08-15T15:56:09+09:00 pipi local5 info kadmind[29923]:  listening on fd 7: udp 0.0.0.0.464 (pktinfo)
2014-08-15T15:56:09+09:00 pipi local5 info kadmind[29923]:  listening on fd 7: udp 0.0.0.0.464 (pktinfo)
2014-08-15T15:56:09+09:00 pipi local5 info kadmind[29923]:  setsockopt(8,IPV6_V6ONLY,1) worked
2014-08-15T15:56:09+09:00 pipi local5 info kadmind[29923]:  setsockopt(8,IPV6_V6ONLY,1) worked
2014-08-15T15:56:09+09:00 pipi local5 info kadmind[29923]:  Invalid argument - Cannot request packet info for udp socket address :: port 464
2014-08-15T15:56:09+09:00 pipi local5 info kadmind[29923]:  Invalid argument - Cannot request packet info for udp socket address :: port 464
2014-08-15T15:56:09+09:00 pipi local5 info kadmind[29923]:  skipping unrecognized local address family 17
2014-08-15T15:56:09+09:00 pipi local5 info kadmind[29923]:  skipping unrecognized local address family 17
2014-08-15T15:56:09+09:00 pipi local5 info kadmind[29923]:  skipping unrecognized local address family 17
2014-08-15T15:56:09+09:00 pipi local5 info kadmind[29923]:  skipping unrecognized local address family 17
2014-08-15T15:56:09+09:00 pipi local5 info kadmind[29923]:  setsockopt(8,IPV6_V6ONLY,1) worked
2014-08-15T15:56:09+09:00 pipi local5 info kadmind[29923]:  setsockopt(8,IPV6_V6ONLY,1) worked
2014-08-15T15:56:09+09:00 pipi local5 info kadmind[29923]:  listening on fd 8: udp fe80::ba27:ebff:fe0d:8d3a%eth0.464
2014-08-15T15:56:09+09:00 pipi local5 info kadmind[29923]:  listening on fd 8: udp fe80::ba27:ebff:fe0d:8d3a%eth0.464
2014-08-15T15:56:09+09:00 pipi local5 info kadmind[29923]:  setsockopt(9,IPV6_V6ONLY,1) worked
2014-08-15T15:56:09+09:00 pipi local5 info kadmind[29923]:  setsockopt(9,IPV6_V6ONLY,1) worked
2014-08-15T15:56:09+09:00 pipi local5 info kadmind[29923]:  listening on fd 10: tcp 0.0.0.0.464
2014-08-15T15:56:09+09:00 pipi local5 info kadmind[29923]:  listening on fd 10: tcp 0.0.0.0.464
2014-08-15T15:56:09+09:00 pipi local5 info kadmind[29923]:  listening on fd 9: tcp ::.464
2014-08-15T15:56:09+09:00 pipi local5 info kadmind[29923]:  listening on fd 9: tcp ::.464
2014-08-15T15:56:09+09:00 pipi local5 info kadmind[29923]:  listening on fd 11: rpc 0.0.0.0.749
2014-08-15T15:56:09+09:00 pipi local5 info kadmind[29923]:  listening on fd 11: rpc 0.0.0.0.749
2014-08-15T15:56:09+09:00 pipi local5 info kadmind[29923]:  setsockopt(12,IPV6_V6ONLY,1) worked
2014-08-15T15:56:09+09:00 pipi local5 info kadmind[29923]:  setsockopt(12,IPV6_V6ONLY,1) worked
2014-08-15T15:56:09+09:00 pipi local5 info kadmind[29923]:  listening on fd 12: rpc ::.749
2014-08-15T15:56:09+09:00 pipi local5 info kadmind[29923]:  listening on fd 12: rpc ::.749
2014-08-15T15:56:09+09:00 pipi local5 info kadmind[29923]:  set up 6 sockets
2014-08-15T15:56:09+09:00 pipi local5 info kadmind[29923]:  set up 6 sockets
2014-08-15T15:56:09+09:00 pipi local5 info kadmind[29923]:  Seeding random number generator
2014-08-15T15:56:09+09:00 pipi local5 info kadmind[29923]:  Seeding random number generator
2014-08-15T15:56:09+09:00 pipi local5 info kadmind[29923]:  starting
2014-08-15T15:56:09+09:00 pipi local5 info kadmind[29923]:  starting
2014-08-15T15:56:09+09:00 pipi daemon info kadmind[29923]:  kadmind: starting...
</pre>
</div>
</div>

<div id="outline-container-sec-3" class="outline-2">
<h2 id="sec-3"><span class="section-number-2">3</span> KDCにプリンシバルの登録</h2>
<div class="outline-text-2" id="text-3">
<p>
<code>kadmin.local</code> 登録した <code>root/admin@JIZAI-DOMAIN.JP</code> 管理プリンシバルを用いて、レルム
に参加している任意のマシンからテスト用プリンシバル登録操作を行います。以下の操作は全
てKDCサーバ側のデータベースに反映される、クライアント側には何も影響しない。
</p>

<pre class="example">
★kadminサービスへ接続する
$ kadmin -p root/admin
Authenticating as principal root/admin with password.
Password for root/admin@JIZAI-DOMAIN.JP:

★１：プリンシバル認証用パスワードのポリシーを作成する
kadmin:  add_policy -maxlife 180day -minlife 0day -minlength 8 -minclasses 2 -history 8 users_policy

★２：作成したポリシーを用いてkbr_u01プリンシバルを登録する
kadmin:  addprinc -policy users_policy kbr_u01
Enter password for principal "kbr_u01@JIZAI-DOMAIN.JP": 
Re-enter password for principal "kbr_u01@JIZAI-DOMAIN.JP": 
Principal "kbr_u01@JIZAI-DOMAIN.JP" created.                     ★プリンシバルのフルネーム

★３：kbr_u02プリンシバルを登録する
kadmin:  addprinc -policy users_policy kbr_u02
Enter password for principal "kbr_u02@JIZAI-DOMAIN.JP": 
Re-enter password for principal "kbr_u02@JIZAI-DOMAIN.JP": 
Principal "kbr_u02@JIZAI-DOMAIN.JP" created.

★４：：プリンシバル一覧の表示
kadmin:  list_principals 
K/M@JIZAI-DOMAIN.JP
kadmin/admin@JIZAI-DOMAIN.JP
kadmin/changepw@JIZAI-DOMAIN.JP
kadmin/pipi.jizai-domain.jp@JIZAI-DOMAIN.JP                      ★kadminサービスプリンシバル
kbr_u01@JIZAI-DOMAIN.JP                                          ★通常アカウント
kbr_u02@JIZAI-DOMAIN.JP
krbtgt/JIZAI-DOMAIN.JP@JIZAI-DOMAIN.JP                           ★TGSサービスプリンシバル
root/admin@JIZAI-DOMAIN.JP                                       ★管理用プリンシバル
kadmin:
</pre>

<p>
プリンシバル登録時、kadminサービス側のログ
</p>
<pre class="example">
★接続時
2014-08-15T15:57:35+09:00 pipi local5 info krb5kdc[29867]:  AS_REQ (6 etypes {18 17 16 23 25 26}) 192.168.100.4: ISSUE: authtime 1408085855, etypes {rep=18 tkt=18 ses=18}, root/admin@JIZAI-DOMAIN.JP for kadmin/pipi.jizai-domain.jp@JIZAI-DOMAIN.JP
2014-08-15T15:57:35+09:00 pipi local5 info krb5kdc[29867]:  AS_REQ (6 etypes {18 17 16 23 25 26}) 192.168.100.4: ISSUE: authtime 1408085855, etypes {rep=18 tkt=18 ses=18}, root/admin@JIZAI-DOMAIN.JP for kadmin/pipi.jizai-domain.jp@JIZAI-DOMAIN.JP
2014-08-15T15:57:39+09:00 pipi local5 notice kadmind[29923]:  Request: kadm5_init, root/admin@JIZAI-DOMAIN.JP, success, client=root/admin@JIZAI-DOMAIN.JP, service=kadmin/pipi.jizai-domain.jp@JIZAI-DOMAIN.JP, addr=192.168.100.4, vers=4, flavor=6
2014-08-15T15:57:39+09:00 pipi local5 notice kadmind[29923]:  Request: kadm5_init, root/admin@JIZAI-DOMAIN.JP, success, client=root/admin@JIZAI-DOMAIN.JP, service=kadmin/pipi.jizai-domain.jp@JIZAI-DOMAIN.JP, addr=192.168.100.4, vers=4, flavor=6

★１
2014-08-15T16:01:55+09:00 pipi local5 notice kadmind[29923]:  Request: kadm5_create_policy, users_policy, success, client=root/admin@JIZAI-DOMAIN.JP, service=kadmin/pipi.jizai-domain.jp@JIZAI-DOMAIN.JP, addr=192.168.100.4
2014-08-15T16:01:55+09:00 pipi local5 notice kadmind[29923]:  Request: kadm5_create_policy, users_policy, success, client=root/admin@JIZAI-DOMAIN.JP, service=kadmin/pipi.jizai-domain.jp@JIZAI-DOMAIN.JP, addr=192.168.100.4

★２
2014-08-15T16:03:18+09:00 pipi local5 notice kadmind[29923]:  Request: kadm5_get_policy, users_policy, success, client=root/admin@JIZAI-DOMAIN.JP, service=kadmin/pipi.jizai-domain.jp@JIZAI-DOMAIN.JP, addr=192.168.100.4
2014-08-15T16:03:18+09:00 pipi local5 notice kadmind[29923]:  Request: kadm5_get_policy, users_policy, success, client=root/admin@JIZAI-DOMAIN.JP, service=kadmin/pipi.jizai-domain.jp@JIZAI-DOMAIN.JP, addr=192.168.100.4
2014-08-15T16:03:27+09:00 pipi local5 notice kadmind[29923]:  Request: kadm5_create_principal, kbr_u01@JIZAI-DOMAIN.JP, success, client=root/admin@JIZAI-DOMAIN.JP, service=kadmin/pipi.jizai-domain.jp@JIZAI-DOMAIN.JP, addr=192.168.100.4
2014-08-15T16:03:27+09:00 pipi local5 notice kadmind[29923]:  Request: kadm5_create_principal, kbr_u01@JIZAI-DOMAIN.JP, success, client=root/admin@JIZAI-DOMAIN.JP, service=kadmin/pipi.jizai-domain.jp@JIZAI-DOMAIN.JP, addr=192.168.100.4

★３
2014-08-15T16:04:11+09:00 pipi local5 notice kadmind[29923]:  Request: kadm5_get_policy, users_policy, success, client=root/admin@JIZAI-DOMAIN.JP, service=kadmin/pipi.jizai-domain.jp@JIZAI-DOMAIN.JP, addr=192.168.100.4
2014-08-15T16:04:11+09:00 pipi local5 notice kadmind[29923]:  Request: kadm5_get_policy, users_policy, success, client=root/admin@JIZAI-DOMAIN.JP, service=kadmin/pipi.jizai-domain.jp@JIZAI-DOMAIN.JP, addr=192.168.100.4
2014-08-15T16:04:18+09:00 pipi local5 notice kadmind[29923]:  Request: kadm5_create_principal, kbr_u02@JIZAI-DOMAIN.JP, success, client=root/admin@JIZAI-DOMAIN.JP, service=kadmin/pipi.jizai-domain.jp@JIZAI-DOMAIN.JP, addr=192.168.100.4
2014-08-15T16:04:18+09:00 pipi local5 notice kadmind[29923]:  Request: kadm5_create_principal, kbr_u02@JIZAI-DOMAIN.JP, success, client=root/admin@JIZAI-DOMAIN.JP, service=kadmin/pipi.jizai-domain.jp@JIZAI-DOMAIN.JP, addr=192.168.100.4

★４
2014-08-15T16:05:27+09:00 pipi local5 notice kadmind[29923]:  Request: kadm5_get_principals, *, success, client=root/admin@JIZAI-DOMAIN.JP, service=kadmin/pipi.jizai-domain.jp@JIZAI-DOMAIN.JP, addr=192.168.100.4
2014-08-15T16:05:27+09:00 pipi local5 notice kadmind[29923]:  Request: kadm5_get_principals, *, success, client=root/admin@JIZAI-DOMAIN.JP, service=kadmin/pipi.jizai-domain.jp@JIZAI-DOMAIN.JP, addr=192.168.100.4
</pre>
</div>
</div>

<div id="outline-container-sec-4" class="outline-2">
<h2 id="sec-4"><span class="section-number-2">4</span> KDCデータベースのバックアップ</h2>
<div class="outline-text-2" id="text-4">
<p>
<code>kdb5_util dump</code> 、 <code>kdb5_util load</code> コマンドを用いてKDCデータベースをバックアップと
リストアすることができる。リストア時にKDCサービスを停止する必要があります。
</p>

<pre class="example">
$ sudo kdb5_util dump /var/lib/krb5kdc/kdc_dump
$ ls -al /var/lib/krb5kdc/
total 52
drwxr-xr-x  2 root root 4096 Aug 15 16:11 .
drwxr-xr-x 31 root root 4096 Aug 15 00:00 ..
-rw-------  1 root root   76 Aug 15 15:37 .k5.JIZAI-DOMAIN.JP
-rw-r--r--  1 root root   26 Aug 15 14:44 kadm5.acl
-rw-r--r--  1 root root  288 Aug 15 14:40 kdc.conf
-rw-r--r--  1 root root  304 Aug 15 14:28 kdc.conf.ogin
-rw-------  1 root root 5167 Aug 15 16:11 kdc_dump             ★バックアップ
-rw-------  1 root root    1 Aug 15 16:11 kdc_dump.dump_ok
-rw-------  1 root root 8192 Aug 15 16:04 principal
-rw-------  1 root root 8192 Aug 15 16:01 principal.kadm5
-rw-------  1 root root    0 Aug 15 15:37 principal.kadm5.lock
-rw-------  1 root root    0 Aug 15 16:04 principal.ok
$
</pre>
</div>
</div>

<div id="outline-container-sec-5" class="outline-2">
<h2 id="sec-5"><span class="section-number-2">5</span> Kerberos認証の流れを確認する</h2>
<div class="outline-text-2" id="text-5">
<p>
シナリオ、レルムに参考しているホスト <code>mimi</code> にて <code>kinit kbr_u01</code> でkbr_u01ユーザプリン
シバル認証を通してTGTチケットして、TGTチケットを用いてレルムに参考している別のホスト
<code>jizai</code> にSSHでSSOを実現する。
</p>

<pre class="example">
[レルム:JIZAI=DOMAIN.JP]

                                           &lt;&lt;KDC&gt;&gt; pipi.jizai-domain.jp
+---------------------+  ①kinit kbr_u01   +----------------------------------------------------+
|mimi.jizai-domain.jp |-------------------&gt;| A|ユーザ  ：kbr_u01@JIZAI-DOMAIN.JP                |
|                     |&lt;---TGTチケット-----| B|ホスト  ：jizai/jizai-domain.jp@JIZAI-DOMAIN.JP  |
|                     |                    | C|サービス：krbgtg/JIZAI-DOMAIN.JP@JIZAI-DOMAIN.JP |
|                     |------TGS-REQ------&gt;|                                                    |
|                     |&lt;-----TGS-RES-------|                                                    |
|                     |  ③Bホストチケット |                                                    |
+---------+-----------+                    +----------------------------------------------------+
          |
     ②ssh -o GSSAPIAuthentication=yes kbr_u01@jizai.jizai-domai.jp
          |
+---------+-----------+
|jizai.jizai-domain.jp|
|                     |
|                     |
+---------------------+
</pre>

<p>
検証の前提条件
</p>
<ul class="org-ul">
<li>KDCにkbr_u01ユーザプリンシバルが登録済み
</li>
<li>KDCに <code>jizai</code> ホストプリンシバルが登録済み
</li>
<li><code>jizai</code> ホストにsshdのGSSAPIAuthenticationオプションが有効である
</li>
<li><code>jizai</code> ホストの <code>/etc/passwd</code> ファイルに <code>kbr_u01</code> アカウントが登録済み
</li>
</ul>


<p>
<code>jizai</code> ホストプリンシバルの登録
</p>
<pre class="example">
★以下の作業は jizai ホストで行う

★KDCのkadminサービスへ接続する
$ sudo kadmin -p root/admin
Authenticating as principal root/admin with password.
Password for root/admin@JIZAI-DOMAIN.JP: 

★１：randkeyオプションでランダムなパスワードを用いて、ホストプリンシバルを登録する
kadmin:  addprinc -randkey host/jizai.jizai-domain.jp
WARNING: no policy specified for host/jizai.jizai-domain.jp@JIZAI-DOMAIN.JP; defaulting to no policy
Principal "host/jizai.jizai-domain.jp@JIZAI-DOMAIN.JP" created.

★２：ホストプリンシバル認証用鍵（パスワード）をローカルシステムに保存する
kadmin:  ktadd host/jizai.jizai-domain.jp
Entry for principal host/mimi.jizai-domain.jp with kvno 5, encryption type aes256-cts-hmac-sha1-96 added to keytab FILE:/etc/krb5.keytab.
Entry for principal host/mimi.jizai-domain.jp with kvno 5, encryption type aes128-cts-hmac-sha1-96 added to keytab FILE:/etc/krb5.keytab.
Entry for principal host/mimi.jizai-domain.jp with kvno 5, encryption type des3-cbc-sha1 added to keytab FILE:/etc/krb5.keytab.
Entry for principal host/mimi.jizai-domain.jp with kvno 5, encryption type arcfour-hmac added to keytab FILE:/etc/krb5.keytab.

kadmin: quit

★４：ローカルシステムに保存されたホストプリンシバルの鍵を確認する
$ sudo klist -k /etc/krb5.keytab
Keytab name: FILE:/etc/krb5.keytab
KVNO Principal
---- --------------------------------------------------------------------------
   7 host/jizai.jizai-domain.jp@JIZAI-DOMAIN.JP
   7 host/jizai.jizai-domain.jp@JIZAI-DOMAIN.JP
   7 host/jizai.jizai-domain.jp@JIZAI-DOMAIN.JP
   7 host/jizai.jizai-domain.jp@JIZAI-DOMAIN.JP
$
</pre>

<p>
<code>jizai</code> ホストにテスト用プリンシバル <code>kbr_u01</code> をシステムローカルユーザとして登録する。
</p>
<pre class="example">
[akira@jizai ~]$ sudo useradd kbr_u01           ★kbr_u01ユーザ登録
[akira@jizai ~]$ getent passwd | grep kbr       ★kbr_u01ユーザ登録の確認
kbr_u01:x:5013:5013::/home/kbr_u01:/bin/bash
[akira@jizai ~]$
</pre>

<p>
<code>mimi</code> ホストにて <code>kinit</code> コマンドで <code>kbr_u01</code> プリンシバル認証して TGTチケットを取得
する。
</p>
<pre class="example">
[root@mimi-air ~]# klist -5                                   ★チケット一覧確認
klist: Credentials cache file '/tmp/krb5cc_0' not found

[root@mimi-air ~]# kinit kbr_u01                              ★kbr_u01プリンシバル認証する
Password for kbr_u01@JIZAI-DOMAIN.JP:                         ★kbr_u01プリンシバルに対応する鍵のパスワードを入力する

[akira@mimi ~]$ klist -5                                      ★チケット一覧確認
Ticket cache: FILE:/tmp/krb5cc_1000
Default principal: kbr_u01@JIZAI-DOMAIN.JP                    ★← ユーザプリンシバルkbr_u01として認証

Valid starting       Expires              Service principal
2014-08-16T16:01:31  2014-08-17T02:01:31  krbtgt/JIZAI-DOMAIN.JP@JIZAI-DOMAIN.JP  ★←TGTチケット
	renew until 2014-08-23T16:01:31
[root@mimi-air ~]#
</pre>

<p>
<code>mimi</code> から <code>jizai</code> へSSO
</p>
<pre class="example">
★GSSAPIAuthenticationオプション有効でSSHログインする
[akira@mimi ~]$ ssh -vvv -o GSSAPIAuthentication=yes kbr_u01@jizai.jizai-domain.jp
OpenSSH_6.6.1, OpenSSL 1.0.1i 6 Aug 2014
debug1: Reading configuration data /home/akira/.ssh/config
debug1: Reading configuration data /etc/ssh/ssh_config
debug2: ssh_connect: needpriv 0
debug1: Connecting to jizai.jizai-domain.jp [192.168.100.3] port 22.
debug1: Connection established.
debug1: identity file /home/akira/.ssh/id_rsa type -1
debug1: identity file /home/akira/.ssh/id_rsa-cert type -1
debug3: Incorrect RSA1 identifier
debug3: Could not load "/home/akira/.ssh/id_dsa" as a RSA1 public key
debug1: identity file /home/akira/.ssh/id_dsa type 2
debug1: identity file /home/akira/.ssh/id_dsa-cert type -1
debug1: identity file /home/akira/.ssh/id_ecdsa type -1
debug1: identity file /home/akira/.ssh/id_ecdsa-cert type -1
debug1: identity file /home/akira/.ssh/id_ed25519 type -1
debug1: identity file /home/akira/.ssh/id_ed25519-cert type -1
debug1: Enabling compatibility mode for protocol 2.0
debug1: Local version string SSH-2.0-OpenSSH_6.6.1
debug1: Remote protocol version 2.0, remote software version OpenSSH_6.6.1
debug1: match: OpenSSH_6.6.1 pat OpenSSH_6.6.1* compat 0x04000000
debug2: fd 3 setting O_NONBLOCK
debug3: load_hostkeys: loading entries for host "jizai.jizai-domain.jp" from file "/home/akira/.ssh/known_hosts"
debug3: load_hostkeys: found key type ECDSA in file /home/akira/.ssh/known_hosts:16
debug3: load_hostkeys: loaded 1 keys
debug3: order_hostkeyalgs: prefer hostkeyalgs: ecdsa-sha2-nistp256-cert-v01@openssh.com,ecdsa-sha2-nistp384-cert-v01@openssh.com,ecdsa-sha2-nistp521-cert-v01@openssh.com,ecdsa-sha2-nistp256,ecdsa-sha2-nistp384,ecdsa-sha2-nistp521
debug1: SSH2_MSG_KEXINIT sent
debug1: SSH2_MSG_KEXINIT received
debug2: kex_parse_kexinit: curve25519-sha256@libssh.org,ecdh-sha2-nistp256,ecdh-sha2-nistp384,ecdh-sha2-nistp521,diffie-hellman-group-exchange-sha256,diffie-hellman-group-exchange-sha1,diffie-hellman-group14-sha1,diffie-hellman-group1-sha1
debug2: kex_parse_kexinit: ecdsa-sha2-nistp256-cert-v01@openssh.com,ecdsa-sha2-nistp384-cert-v01@openssh.com,ecdsa-sha2-nistp521-cert-v01@openssh.com,ecdsa-sha2-nistp256,ecdsa-sha2-nistp384,ecdsa-sha2-nistp521,ssh-ed25519-cert-v01@openssh.com,ssh-rsa-cert-v01@openssh.com,ssh-dss-cert-v01@openssh.com,ssh-rsa-cert-v00@openssh.com,ssh-dss-cert-v00@openssh.com,ssh-ed25519,ssh-rsa,ssh-dss
debug2: kex_parse_kexinit: aes128-ctr,aes192-ctr,aes256-ctr,arcfour256,arcfour128,aes128-gcm@openssh.com,aes256-gcm@openssh.com,chacha20-poly1305@openssh.com,aes128-cbc,3des-cbc,blowfish-cbc,cast128-cbc,aes192-cbc,aes256-cbc,arcfour,rijndael-cbc@lysator.liu.se
debug2: kex_parse_kexinit: aes128-ctr,aes192-ctr,aes256-ctr,arcfour256,arcfour128,aes128-gcm@openssh.com,aes256-gcm@openssh.com,chacha20-poly1305@openssh.com,aes128-cbc,3des-cbc,blowfish-cbc,cast128-cbc,aes192-cbc,aes256-cbc,arcfour,rijndael-cbc@lysator.liu.se
debug2: kex_parse_kexinit: hmac-md5-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-ripemd160-etm@openssh.com,hmac-sha1-96-etm@openssh.com,hmac-md5-96-etm@openssh.com,hmac-md5,hmac-sha1,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-ripemd160,hmac-ripemd160@openssh.com,hmac-sha1-96,hmac-md5-96
debug2: kex_parse_kexinit: hmac-md5-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-ripemd160-etm@openssh.com,hmac-sha1-96-etm@openssh.com,hmac-md5-96-etm@openssh.com,hmac-md5,hmac-sha1,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-ripemd160,hmac-ripemd160@openssh.com,hmac-sha1-96,hmac-md5-96
debug2: kex_parse_kexinit: none,zlib@openssh.com,zlib
debug2: kex_parse_kexinit: none,zlib@openssh.com,zlib
debug2: kex_parse_kexinit: 
debug2: kex_parse_kexinit: 
debug2: kex_parse_kexinit: first_kex_follows 0 
debug2: kex_parse_kexinit: reserved 0 
debug2: kex_parse_kexinit: curve25519-sha256@libssh.org,ecdh-sha2-nistp256,ecdh-sha2-nistp384,ecdh-sha2-nistp521,diffie-hellman-group-exchange-sha256,diffie-hellman-group-exchange-sha1,diffie-hellman-group14-sha1,diffie-hellman-group1-sha1
debug2: kex_parse_kexinit: ssh-rsa,ssh-dss,ecdsa-sha2-nistp256,ssh-ed25519
debug2: kex_parse_kexinit: aes128-ctr,aes192-ctr,aes256-ctr,arcfour256,arcfour128,aes128-gcm@openssh.com,aes256-gcm@openssh.com,chacha20-poly1305@openssh.com,aes128-cbc,3des-cbc,blowfish-cbc,cast128-cbc,aes192-cbc,aes256-cbc,arcfour,rijndael-cbc@lysator.liu.se
debug2: kex_parse_kexinit: aes128-ctr,aes192-ctr,aes256-ctr,arcfour256,arcfour128,aes128-gcm@openssh.com,aes256-gcm@openssh.com,chacha20-poly1305@openssh.com,aes128-cbc,3des-cbc,blowfish-cbc,cast128-cbc,aes192-cbc,aes256-cbc,arcfour,rijndael-cbc@lysator.liu.se
debug2: kex_parse_kexinit: hmac-md5-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-ripemd160-etm@openssh.com,hmac-sha1-96-etm@openssh.com,hmac-md5-96-etm@openssh.com,hmac-md5,hmac-sha1,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-ripemd160,hmac-ripemd160@openssh.com,hmac-sha1-96,hmac-md5-96
debug2: kex_parse_kexinit: hmac-md5-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-ripemd160-etm@openssh.com,hmac-sha1-96-etm@openssh.com,hmac-md5-96-etm@openssh.com,hmac-md5,hmac-sha1,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-ripemd160,hmac-ripemd160@openssh.com,hmac-sha1-96,hmac-md5-96
debug2: kex_parse_kexinit: none,zlib@openssh.com
debug2: kex_parse_kexinit: none,zlib@openssh.com
debug2: kex_parse_kexinit: 
debug2: kex_parse_kexinit: 
debug2: kex_parse_kexinit: first_kex_follows 0 
debug2: kex_parse_kexinit: reserved 0 
debug2: mac_setup: setup hmac-md5-etm@openssh.com
debug1: kex: server-&gt;client aes128-ctr hmac-md5-etm@openssh.com none
debug2: mac_setup: setup hmac-md5-etm@openssh.com
debug1: kex: client-&gt;server aes128-ctr hmac-md5-etm@openssh.com none
debug1: sending SSH2_MSG_KEX_ECDH_INIT
debug1: expecting SSH2_MSG_KEX_ECDH_REPLY
debug1: Server host key: ECDSA 35:6c:0a:2e:7e:c2:5a:45:a0:05:f6:69:7b:7a:15:d0
debug3: load_hostkeys: loading entries for host "jizai.jizai-domain.jp" from file "/home/akira/.ssh/known_hosts"
debug3: load_hostkeys: found key type ECDSA in file /home/akira/.ssh/known_hosts:16
debug3: load_hostkeys: loaded 1 keys
debug3: load_hostkeys: loading entries for host "192.168.100.3" from file "/home/akira/.ssh/known_hosts"
debug3: load_hostkeys: found key type ECDSA in file /home/akira/.ssh/known_hosts:3
debug3: load_hostkeys: loaded 1 keys
debug1: Host 'jizai.jizai-domain.jp' is known and matches the ECDSA host key.
debug1: Found key in /home/akira/.ssh/known_hosts:16
debug1: ssh_ecdsa_verify: signature correct
debug2: kex_derive_keys
debug2: set_newkeys: mode 1
debug1: SSH2_MSG_NEWKEYS sent
debug1: expecting SSH2_MSG_NEWKEYS
debug2: set_newkeys: mode 0
debug1: SSH2_MSG_NEWKEYS received
debug1: Roaming not allowed by server
debug1: SSH2_MSG_SERVICE_REQUEST sent
debug2: service_accept: ssh-userauth
debug1: SSH2_MSG_SERVICE_ACCEPT received
debug2: key: /home/akira/.ssh/id_dsa (0x7f87e82679a0),
debug2: key: /home/akira/.ssh/id_rsa ((nil)),
debug2: key: /home/akira/.ssh/id_ecdsa ((nil)),
debug2: key: /home/akira/.ssh/id_ed25519 ((nil)),
debug1: Authentications that can continue: publickey,gssapi-with-mic
debug3: start over, passed a different list publickey,gssapi-with-mic
debug3: preferred gssapi-with-mic,publickey,keyboard-interactive,password
debug3: authmethod_lookup gssapi-with-mic
debug3: remaining preferred: publickey,keyboard-interactive,password
debug3: authmethod_is_enabled gssapi-with-mic
debug1: Next authentication method: gssapi-with-mic
debug2: we sent a gssapi-with-mic packet, wait for reply
debug1: Authentication succeeded (gssapi-with-mic).                     ★GSSAPIによるKerbrose認証が成功
Authenticated to jizai.jizai-domain.jp ([192.168.100.3]:22).            ★
debug1: channel 0: new [client-session]
debug3: ssh_session2_open: channel_new: 0
debug2: channel 0: send open
debug1: Requesting no-more-sessions@openssh.com
debug1: Entering interactive session.
debug2: callback start
debug2: fd 3 setting TCP_NODELAY
debug3: packet_set_tos: set IP_TOS 0x10
debug2: client_session2_setup: id 0
debug2: channel 0: request pty-req confirm 1
debug2: channel 0: request shell confirm 1
debug2: callback done
debug2: channel 0: open confirm rwindow 0 rmax 32768
debug2: channel_input_status_confirm: type 99 id 0
debug2: PTY allocation request accepted on channel 0
debug2: channel 0: rcvd adjust 2097152
debug2: channel_input_status_confirm: type 99 id 0
debug2: shell request accepted on channel 0
Last login: Sat Aug 16 12:36:44 2014 from mimi.jizai-domain.jp
[kbr_u01@jizai ~]$ 

[kbr_u01@jizai ~]$ exit
ログアウト

[akira@mimi ~]$ klist -5                                                 ★チケット一覧確認
Ticket cache: FILE:/tmp/krb5cc_1000
Default principal: kbr_u01@JIZAI-DOMAIN.JP

Valid starting       Expires              Service principal
2014-08-16T16:01:31  2014-08-17T02:01:31  krbtgt/JIZAI-DOMAIN.JP@JIZAI-DOMAIN.JP
	renew until 2014-08-23T16:01:31
2014-08-16T16:01:39  2014-08-17T02:01:31  host/jizai.jizai-domain.jp@JIZAI-DOMAIN.JP    ★jizaiのホストアクセス用のチケットが取得された
	renew until 2014-08-23T16:01:31
[akira@mimi ~]$
</pre>

<p>
以下はkinitからsshグインまでKDC側で取得したkerbroseパケット通信の状況です。
</p>



<div class="figure">
<p><img src="img/2014-08-15-berbrose-01.png" alt="2014-08-15-berbrose-01.png" />
</p>
</div>


<div class="figure">
<p><img src="img/2014-08-15-berbrose-02.png" alt="2014-08-15-berbrose-02.png" />
</p>
</div>


<div class="figure">
<p><img src="img/2014-08-15-berbrose-03.png" alt="2014-08-15-berbrose-03.png" />
</p>
</div>


<div class="figure">
<p><img src="img/2014-08-15-berbrose-04.png" alt="2014-08-15-berbrose-04.png" />
</p>
</div>
</div>
</div>

<div id="outline-container-sec-6" class="outline-2">
<h2 id="sec-6"><span class="section-number-2">6</span> LDAP+pam_krbでLinuxログイン認証</h2>
<div class="outline-text-2" id="text-6">
<p>
LDAPサーバにユーザエントリの登録を行う。
</p>

<p>
ユーザエントリの定義
</p>
<pre class="example">
# --- kbr_u01 ---
dn: uid=kbr_u01,ou=User,o=Linux Users,dc=jizai-domain,dc=jp
uid: kbr_u01
cn: Kerberose Test User01
uidNumber: 5101
gidNumber: 3101
userPassword: {CRYPT}x                          ★LDAPの簡易パスワード認証を利用しない
homeDirectory: /home/kbr_u01
loginShell: /bin/bash
gecos: Kerberose User01
objectClass: account
objectClass: posixAccount

# --- kbr_u02 ---
dn: uid=kbr_u02,ou=User,o=Linux Users,dc=jizai-domain,dc=jp
uid: kbr_u02
cn: Kerberose Test User02
uidNumber: 5102
gidNumber: 3102
userPassword: {CRYPT}x
homeDirectory: /home/kbr_u02
loginShell: /bin/bash
gecos: Kerberose User02
objectClass: account
objectClass: posixAccount
</pre>

<p>
<code>ldapadd</code> で登録を行う
</p>
<pre class="example">
$ ldapadd -x -W -D "cn=Manager,dc=jizai-domain,dc=jp" -f 01.users.ldif
Enter LDAP Password: 
adding new entry "uid=kbr_u01,ou=User,o=Linux Users,dc=jizai-domain,dc=jp"

adding new entry "uid=kbr_u02,ou=User,o=Linux Users,dc=jizai-domain,dc=jp"
</pre>

<p>
LinuxホストからLDAPユーザエントリ情報を参照するするようにする
</p>

<p>
<code>nss-pam-ldapd</code> をインストールして、 <code>/etc/nslcd.conf</code> にてLDAPサーバ接続設定を行う。
<code>/etc/nsswitch.conf</code> に以下のように情報源にldapを追加する。
</p>
<pre class="example">
$ cat /etc/nsswitch.conf
passwd:    files ldap
group:     files ldap
shadow:    files ldap
netgroup:  files ldap

★以上以外の内容、ここでは省略します。
</pre>

<p>
<code>nslcd.service</code> サービスを起動して、LDAPからユーザ情報参照できることを確認する。
</p>
<pre class="example">
$ sudo systemctl start nslcd.service
$ getent passwd
root:x:0:0:root:/root:/bin/bash
.....省略.....
★LDAPのユーザエントリ情報が表示されている
kbr_u01:*:5101:3101:Kerberose User01:/home/kbr_u01:/bin/bash
kbr_u02:*:5102:3102:Kerberose User02:/home/kbr_u02:/bin/bash
</pre>

<p>
AURリポジトリからLinuxホストに <code>pam_krb5</code> 認証モジュールをインストールする
</p>
<pre class="example">
$ yaourt -S pam_krb5
==&gt; AUR から pam_krb5 の PKGBUILD をダウンロード...
...中略...
==&gt; インストールを整理...
  -&gt; 不要なファイルを削除...
  -&gt; libtool ファイルを削除...
  -&gt; static library ファイルを削除...
  -&gt; man と info ページを圧縮...
  -&gt; バイナリとライブラリから不要なシンボルを削除...
==&gt; パッケージを作成 "pam_krb5"...
  -&gt; .PKGINFO ファイルを生成...
  -&gt; .MTREE ファイルを生成...
  -&gt; パッケージの圧縮...
==&gt; fakeroot 環境を終了。
==&gt; 作成完了: pam_krb5 2.4.9-1 (2014年  8月 16日 土曜日 16:38:32 JST)

==&gt; pam_krb5 のインストールを続行しますか ? [Y/n]
==&gt; [v]パッケージの中身確認 [c]heck package with namcap
==&gt; -----------------------------------------
==&gt; y

パッケージをロード...
警告: pam_krb5-2.4.9-1 は最新です -- 再インストール
依存関係を解決しています...
相互衝突をチェックしています...

パッケージ (1): pam_krb5-2.4.9-1

Total Installed Size:   0.27 MiB
Net Upgrade Size:       0.00 MiB

:: インストールを行いますか？ [Y/n] 
(1/1) キーリングのキーを確認                                                                   [########################################################] 100%
(1/1) パッケージの整合性をチェック                                                             [########################################################] 100%
(1/1) パッケージファイルのロード                                                               [########################################################] 100%
(1/1) ファイルの衝突をチェック                                                                 [########################################################] 100%
(1/1) 空き容量を確認                                                                           [########################################################] 100%
(1/1) 再インストール pam_krb5                                                                  [########################################################] 100%
[akira@jizai ~]$
</pre>


<p>
<code>pam_krb5</code> モジュールの確認
</p>
<pre class="example">
[akira@jizai ~]$ pacman -Ql pam_krb5
pam_krb5 /usr/
pam_krb5 /usr/bin/
pam_krb5 /usr/bin/afs5log
pam_krb5 /usr/lib/
pam_krb5 /usr/lib/security/
pam_krb5 /usr/lib/security/pam_krb5.so      ★モジュール自体
pam_krb5 /usr/lib/security/pam_krb5/
pam_krb5 /usr/lib/security/pam_krb5/pam_krb5_cchelper
pam_krb5 /usr/share/
pam_krb5 /usr/share/locale/
...中略...
[akira@jizai ~]$
</pre>

<p>
PAM認証設定１： <code>/etc/pam.d/system-auth</code>
</p>
<pre class="example">
#%PAM-1.0

auth      sufficient pam_krb5.so                   ★Kerbrose認証連携
auth      required  pam_env.so
auth      required  pam_unix.so     try_first_pass nullok
auth      optional  pam_permit.so

account   sufficient pam_krb5.so                   ★Kerbrose認証連携
account   required  pam_unix.so
account   optional  pam_permit.so
account   required  pam_time.so

password  sufficient pam_krb5.so                   ★Kerbrose認証連携
password  required  pam_unix.so     try_first_pass nullok sha512 shadow
password  optional  pam_permit.so

#ユーザ、グループ単位にリソース制限を行う
session   required  pam_limits.so
session   required  pam_env.so

#ログイン時にホームディレクトリが存在していなければ自動で生成する指定
session   required  pam_mkhomedir.so umask=077

#ログイン、ログアウト情報をauthログに出力する
session   required  pam_unix.so

session   optional  pam_krb5.so                    ★Kerbrose認証連携
session   optional  pam_permit.so
</pre>

<p>
PAM認証設定２： <code>/etc/pam.d/other</code>
</p>
<pre class="example">
#%PAM-1.0
auth            sufficient      pam_krb5.so
auth		required	pam_unix.so

account         sufficient      pam_krb5.so
account		required	pam_unix.so

password        sufficient      pam_krb5.so
password	required	pam_unix.so

session		required	pam_unix.so
</pre>


<p>
Linuxホストに <code>kbr_u01</code> アカウントでログインする
</p>
<pre class="example">
$ ssh kbr_u01@jizai.jizai-domain.jp
kbr_u01@jizai.jizai-domain.jp's password:       ★KDCに登録されたkbr_u01プリンシバルのパスワードを入力する
Last login: Sat Aug 16 16:29:21 2014 from mimi.jizai-domain.jp

[kbr_u01@jizai ~]$ klist -5                     ★チケット一覧を確認する
Ticket cache: FILE:/tmp/krb5cc_5101_557rnl
Default principal: kbr_u01@JIZAI-DOMAIN.JP

Valid starting       Expires              Service principal
2014-08-16T16:46:53  2014-08-17T02:46:53  krbtgt/JIZAI-DOMAIN.JP@JIZAI-DOMAIN.JP    ★TGTチケット
	renew until 2014-08-23T16:46:53
2014-08-16T16:46:53  2014-08-17T02:46:53  krbtgt/JIZAI-DOMAIN.JP@JIZAI-DOMAIN.JP    ★なぜ２枚なのかは不明
	renew until 2014-08-23T16:46:53


[kbr_u01@jizai ~]$ env  | grep KRB5CCNAME
KRB5CCNAME=FILE:/tmp/krb5cc_5101_557rnl               ★Kerbrose認証チケットの保管場所は環境変数KRB5CCNAMEで参照できる
[kbr_u01@jizai ~]$
</pre>

<p>
ログイン時Linuxホストのログ
</p>
<pre class="example">
Aug 16 16:46:53 jizai sshd[22872]: pam_krb5[22872]: TGT verified using key for 'host/jizai.jizai-domain.jp@JIZAI-DOMAIN.JP'
Aug 16 16:46:53 jizai sshd[22872]: pam_krb5[22872]: authentication succeeds for 'kbr_u01' (kbr_u01@JIZAI-DOMAIN.JP)    ★Kerbrose認証成功
Aug 16 16:46:53 jizai sshd[22872]: Accepted password for kbr_u01 from 192.168.100.10 port 58136 ssh2
Aug 16 16:46:55 jizai sshd[22872]: pam_unix(sshd:session): session opened for user kbr_u01 by (uid=0)
Aug 16 16:46:55 jizai systemd-logind[655]: New session c17 of user kbr_u01.
</pre>
</div>
</div>

<div id="outline-container-sec-7" class="outline-2">
<h2 id="sec-7"><span class="section-number-2">7</span> 参考情報</h2>
<div class="outline-text-2" id="text-7">
<ul class="org-ul">
<li><a href="http://www.amazon.co.jp/%25E3%2583%2597%25E3%2583%25AD%25E3%2581%25AE%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AE-Linux%25E3%2582%25B7%25E3%2582%25B9%25E3%2583%2586%25E3%2583%25A0%25E3%2583%25BB%25E3%2583%258D%25E3%2583%2583%25E3%2583%2588%25E3%2583%25AF%25E3%2583%25BC%25E3%2582%25AF%25E7%25AE%25A1%25E7%2590%2586%25E6%258A%2580%25E8%25A1%2593-Software-Design-plus/dp/4774146757">プロのためのLinuxシステムネットワーク管理技術</a>
</li>
<li><a href="https://nsrc.org/workshops/ws-files/2011/sanog17/exercises/ex2-kerberos-host.html">Exercise2 : enable Kerberos logins to a host</a>
</li>
<li><a href="http://www.l2tp.org/?p=2358">CentOSでSSHのログインがとても遅かった件</a>
</li>
<li><a href="http://plone.uconn.edu/workspaces/uits-linux/facts/troubleshooting-sshd-and-gssapi">SSHD and Kerberos GSSAPI Troubleshooting</a>
</li>
<li><a href="https://wiki.archlinux.org/index.php/Network_Time_Protocol_daemon_%2528%25E6%2597%25A5%25E6%259C%25AC%25E8%25AA%259E%2529#systemd_.E3.82.B5.E3.83.BC.E3.83.93.E3.82.B9">Network Time Protocol daemon (日本語)</a>
</li>
<li><a href="https://wiki.archlinux.org/index.php/LDAP_authentication#NSS_Configuration">LDAP authentication</a>
</li>
</ul>
</div>
</div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[レシピ]ローカルシステムのUIDの抽出]]></title>
    <link href="http://luozengbin.github.io/blog/2014-08-12-%5B%E3%83%AC%E3%82%B7%E3%83%94%5D%E3%83%AD%E3%83%BC%E3%82%AB%E3%83%AB%E3%82%B7%E3%82%B9%E3%83%86%E3%83%A0%E3%81%AEuid%E3%81%AE%E6%8A%BD%E5%87%BA.html"/>
    <updated>2014-08-12T00:00:00+09:00</updated>
    <id>http://luozengbin.github.io/blog/[レシピ]ローカルシステムのuidの抽出</id>
    <content type="html"><![CDATA[<p>
LDAPにユーザID定義時にローカルシステムのUIDと被らないように、ローカルシステムのUIDと
GIDを抽出してみた。
</p>

<p>
ユーザID、1000番代以下はシステム予約番号のことがすぐわかる。
</p>
<pre class="example">
$ cat /etc/passwd | awk -F: '{print $3 "\t" $1}' | sort -n
0	root
1	bin
2	daemon
8	mail
14	ftp
32	rpc
33	http
40	named
68	uuidd
74	dovenull
76	dovecot
81	dbus
84	avahi
87	ntp
89	mysql
99	nobody
102	polkitd
124	colord
169	transmission
191	systemd-journal-gateway
192	systemd-timesync
193	systemd-network
194	systemd-bus-proxy
195	systemd-resolve
241	mediatomb
439	ldap
998	dnsmasq
999	git
1000	akira
1002	amule
</pre>

<p>
グループID一覧
</p>
<pre class="example">
$ cat /etc/group | awk -F: '{print $3 "\t" $1}' | sort -n
0	root
1	bin
2	daemon
3	sys
4	adm
5	tty
6	disk
7	lp
8	mem
9	kmem
10	wheel
11	ftp
12	mail
14	uucp
19	log
20	utmp
21	locate
24	rfkill
25	smmsp
32	rpc
33	http
40	named
50	games
54	lock
68	uuidd
74	dovenull
76	dovecot
81	dbus
84	avahi
87	ntp
89	mysql
90	network
91	video
92	audio
93	optical
94	floppy
95	storage
96	scanner
97	input
98	power
99	nobody
100	users
102	polkitd
124	colord
169	transmission
190	systemd-journal
191	systemd-journal-gateway
192	systemd-timesync
193	systemd-network
194	systemd-bus-proxy
195	systemd-resolve
241	mediatomb
439	ldap
998	dnsmasq
999	git
1002	g001
1003	g002
1004	g003
1005	amule
</pre>

<p>
<code>sort</code> コマンドで数字順でソートするためのオプションが <code>-n</code> であることを復習致しました。
</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[レシピ]LDAPサーバの構築]]></title>
    <link href="http://luozengbin.github.io/blog/2014-08-12-%5B%E3%83%AC%E3%82%B7%E3%83%94%5Dldap%E3%82%B5%E3%83%BC%E3%83%90%E3%81%AE%E6%A7%8B%E7%AF%89.html"/>
    <updated>2014-08-12T00:00:00+09:00</updated>
    <id>http://luozengbin.github.io/blog/[レシピ]ldapサーバの構築</id>
    <content type="html"><![CDATA[<div id="table-of-contents">
<h2>Table of Contents</h2>
<div id="text-table-of-contents">
<ul>
<li><a href="#sec-1">1. 知識のおさらい</a>
<ul>
<li><a href="#sec-1-1">1.1. 用語</a></li>
<li><a href="#sec-1-2">1.2. LDAPの役割</a></li>
<li><a href="#sec-1-3">1.3. LDAPへ接続時（バインド）の認証方式</a></li>
<li><a href="#sec-1-4">1.4. LDAPによるLinuxのログイン認証</a></li>
<li><a href="#sec-1-5">1.5. LDAPによるSambaサーバのユーザ認証</a></li>
<li><a href="#sec-1-6">1.6. LDAPデータ構造サンプル</a></li>
<li><a href="#sec-1-7">1.7. よく使用するObjectClass</a></li>
<li><a href="#sec-1-8">1.8. ldapsearchの使い方</a></li>
<li><a href="#sec-1-9">1.9. ldapaddの使い方</a></li>
<li><a href="#sec-1-10">1.10. ldapdeleteの使い方</a></li>
<li><a href="#sec-1-11">1.11. ldapmodifyの使い方</a></li>
<li><a href="#sec-1-12">1.12. slapindexの使い方</a></li>
</ul>
</li>
<li><a href="#sec-2">2. 環境構成</a></li>
<li><a href="#sec-3">3. OpenLDAPのインストール</a></li>
<li><a href="#sec-4">4. OpenLDAPサーバ設定と起動</a></li>
<li><a href="#sec-5">5. OpenLDAPログ出力設定</a></li>
<li><a href="#sec-6">6. LDAPクライアントの設定</a></li>
<li><a href="#sec-7">7. LDAPクライアントとサーバ間の通信内容</a></li>
<li><a href="#sec-8">8. LDAPによるLinuxのログイン認証設定</a>
<ul>
<li><a href="#sec-8-1">8.1. LDAP連携用ライブラリの導入</a></li>
<li><a href="#sec-8-2">8.2. LDAP認証PAMモジュールの設定</a></li>
<li><a href="#sec-8-3">8.3. パスワード変更時の挙動</a></li>
<li><a href="#sec-8-4">8.4. ログイン時の挙動</a></li>
</ul>
</li>
<li><a href="#sec-9">9. 宿題</a></li>
<li><a href="#sec-10">10. 参考情報</a></li>
</ul>
</div>
</div>
<p>
夏休み中にOpenLDAPの構築復習を行いました。ここでメモしておきます。
</p>

<p>
<!-- more -->
</p>

<div id="outline-container-sec-1" class="outline-2">
<h2 id="sec-1"><span class="section-number-2">1</span> 知識のおさらい</h2>
<div class="outline-text-2" id="text-1">
</div><div id="outline-container-sec-1-1" class="outline-3">
<h3 id="sec-1-1"><span class="section-number-3">1.1</span> 用語</h3>
<div class="outline-text-3" id="text-1-1">
<ul class="org-ul">
<li>LDAP: Lightweight Directory Access Protocol、ディレクトリ・サービス
ツリー構造、検索中心としたサービス
</li>
<li>DIT: Directory information Tree、ディレクトリ情報ツリー
</li>
<li>DN: Distinguished Name、ツリーの頂点に向かって全てのエントリを表す主キーのようなもの
</li>
<li>エントリ: LDAPに保存されるデータのこと
</li>
<li>ObjectClass: エントリの種類、エントリにどんな情報を持たせるかの定義、一つエントリに
複数ObjectClasの指定は可能です。また、ObjectClass自身は構造型(Structural)と補助型
(Auxiliary)の２種類があります、各エントリは少なくても１つの構造型ObjectClassに属する
必要があります
</li>
</ul>
</div>
</div>

<div id="outline-container-sec-1-2" class="outline-3">
<h3 id="sec-1-2"><span class="section-number-3">1.2</span> LDAPの役割</h3>
<div class="outline-text-3" id="text-1-2">
<ul class="org-ul">
<li>ユーザ情報参照機能
</li>
<li>ユーザ認証機能
</li>
</ul>
</div>
</div>

<div id="outline-container-sec-1-3" class="outline-3">
<h3 id="sec-1-3"><span class="section-number-3">1.3</span> LDAPへ接続時（バインド）の認証方式</h3>
<div class="outline-text-3" id="text-1-3">
<ul class="org-ul">
<li>簡易認証: 接続時のユーザDNに加えてパスワードが平文でLDAPサーバに送られる、そのため
SSL/TLSで通信経路の暗号化しておく必要があります。
</li>
<li>SASL認証: Simple Authentication and Security Layer、外部の認証システム（モジュール）
に認証処理を委譲する。ただし、LDAP内のエントリのDNと外部認証システムのユーザ識別子
のマッピング定義が必要となります。
</li>
</ul>
</div>
</div>

<div id="outline-container-sec-1-4" class="outline-3">
<h3 id="sec-1-4"><span class="section-number-3">1.4</span> LDAPによるLinuxのログイン認証</h3>
<div class="outline-text-3" id="text-1-4">
<ul class="org-ul">
<li>ログイン認証をLDAPサーバに委譲するためにPAMモジュールにpam_ldapを利用します。また、
  pam_ldapの仕様上LDAP認証バインド時に簡易認証しかできない。
</li>
<li>LDAPで認証させるために、ログインユーザIDでLDAP認証バインドを行う
</li>
</ul>

<p>
認証メカニズム、Linuxサーバでpam_ldapmoモジュールでSSHクライアントから入力されたユーザ
IDとパスワードをLDAPサーバに認証バインドを実施する。
</p>
<pre class="example">
                   userid:akira               dn    : uid=akira,ou=User,dc=jizai-domain,dc=jp
                   passwd:xxxxxx              passwd: xxxxxx
+---------------+                +-------------+                    +------------+
|SSHクライアント+---------------&gt;| Linuxサーバ +-------------------&gt;| LDAPサーバ |
+---------------+   ログイン     +-------------+  LDAP認証バインド  +------------+
</pre>
</div>
</div>

<div id="outline-container-sec-1-5" class="outline-3">
<h3 id="sec-1-5"><span class="section-number-3">1.5</span> LDAPによるSambaサーバのユーザ認証</h3>
<div class="outline-text-3" id="text-1-5">
<p>
認証メカニズム、Sambaサーバは管理者権限でWindows PCから入力されたユーザIDを検索条件で
LDAPサーバから該当ユーザのパスワード情報を取得して、比較を行う。
</p>
<pre class="example">
                   userid:akira               rootdn: uid=Manager,dc=jizai-domain,dc=jp
                   passwd:xxxxxx              passwd: xxxxxx
+---------------+                +-------------+                    +------------+
|Windows PC     +---------------&gt;| Sambaサーバ +&lt;-------------------| LDAPサーバ |
+---------------+   ユーザID     +-------------+   管理者権限で     +------------+
                    パスワード     パスワード      LDAP認証バインドして、
                                   確認を行う      ユーザパスワード情報を取得する
</pre>

<p>
簡易認証時のtcpdumpの結果
</p>
<pre class="example">
</pre>
</div>
</div>

<div id="outline-container-sec-1-6" class="outline-3">
<h3 id="sec-1-6"><span class="section-number-3">1.6</span> LDAPデータ構造サンプル</h3>
<div class="outline-text-3" id="text-1-6">
<p>
ルートエントリ直下の <code>cn=Manager</code> エントリはrootdnと呼ばれる、LDAPの特権ユーザです。
このユーザでLDAPとバインドすると任意のデータ操作が可能になります。rootdnエントリは
<code>/etc/openaldap/slapd.conf</code> にて定義される、実際にDITになくてもよいです。
</p>
<pre class="example">
                            ┏━━━━━━━━━━━┓
                            ┃dc=jizai-domain,dc=jp ┃
                            ┗━━━━━┳━━━━━┛
                                        ┃
                    ┏━━━━━━━━━╋━━━━━━━━━━━━━━━━━━━━━━┓
                    ┃                  ┃                                            ┃
            ┏━━━┻━━┓    ┏━━━┻━━━┓                          ┏━━━━┻━━━┓
    rootdn→┃ cn=Manager ┃    ┃o=Linux Users ┃                          ┃ o=Samba Users  ┃ ← アプリケーション毎に分ける管理する
特権ユーザ  ┗━━━━━━┛    ┗━━━┳━━━┛                          ┗━━━━┯━━━┛
                                        ┃                                            │
                          ┏━━━━━━┻━━━━━━━┓                            │
                    ┏━━┻━━┓              ┏━━━┻━━┓            Sambaサーバユーザ情報
                    ┃ou=User   ┃              ┃ ou=Group   ┃
                    ┗━━┳━━┛              ┗━━━┳━━┛
                  ┏━━━┻━━┓              ┏━━━┻━━━┓
            ┏━━┻━━┓┏━━┻━━┓  ┏━━┻━━┓  ┏━━┻━━┓
            ┃uid=user01┃┃uid=user02┃  ┃cn=group01┃  ┃cn=group02┃
            ┗━━━━━┛┗━━━━━┛  ┗━━━━━┛  ┗━━━━━┛

※ユーザとグループの紐付けはユーザエントリやグループエントリの属性値に表現される。
</pre>

<p>
ルートエントリの定義
</p>
<pre class="example">
dn: dc=jizai-domain,dc=jp
dc: jizai-domain             ★ dcObjectの属性
o: jizai-domain Corporation  ★ organizationの属性
objectClass: dcObject
objectClass: organization
</pre>

<p>
rootdnの定義
</p>
<pre class="example">
dn: cn=Manager,dc=jizai-domain,dc=jp
cn: Manager
objectClass: organizationalRole
</pre>

<p>
Linux系ユーザとSamba系ユーザの親エントリの定義
</p>
<pre class="example">
dn: o=Linux Users,dc=jizai-domain,dc=jp
o: Linux Users
objectClass: organization

dn: o=Smaba Users,dc=jizai-domain,dc=jp
o: Smaba Users
objectClass: organization
</pre>


<p>
Linuxユーザとグループの親エントリの定義
</p>
<pre class="example">
dn: ou=User,o=Linux Users,dc=jizai-domain,dc=jp
ou: User
objectClass: organizationalUnit

dn: ou=Group,o=Linux Users,dc=jizai-domain,dc=jp
ou: Group
objectClass: organizationalUnit
</pre>

<p>
Linuxユーザのエントリ定義
</p>
<pre class="example">
# --- user01 ---
dn: uid=user01,ou=User,o=Linux Users,dc=jizai-domain,dc=jp
uid: user01                 ★accountオブジェクトの属性
cn: Test User01
uidNumber: 5001
gidNumber: 3001
homeDirectory: /home/user01
loginShell: /bin/bash
userPassword: P@ssw0rd      ★パスワードが平文で登録される
gecos: Test User No01       ★ユーザのフルネーム
shadowLastChange: 0         ★パスワードの最終更新日
shadowMin: 0                ★パスワード変更可能になるまでの日数
shadowMax: 99999            ★パスワードの有効期限日数
shadowWarning: 7            ★パスワード期限切れ警告表示開始日数
objectClass: account        ★構造型ObjectClass
objectClass: posixAccount   ★補助型ObjectClass
objectClass: shadowAccount  ★補助型ObjectClass

# --- user02 ---
dn: uid=user02,ou=User,o=Linux Users,dc=jizai-domain,dc=jp
uid: user02
cn: Test User02
uidNumber: 5002
gidNumber: 3002
homeDirectory: /home/user02
loginShell: /bin/bash
userPassword: {SSHA}KpJwwA2Sbt29GGNZxdasq5XRml6J5q2Z   ★Salted SHA-1方式で暗号化された
gecos: Test User No02  ★ユーザのフルネーム
shadowLastChange: 0    ★パスワードの最終更新日、0で指定すると初回ログイン時にパスワードの変更を求めます
shadowMin: 0           ★パスワード変更可能になるまでの日数
shadowMax: 99999       ★パスワードの有効期限日数
shadowWarning: 7       ★パスワード期限切れ警告表示開始日数
objectClass: account
objectClass: posixAccount
objectClass: shadowAccount
</pre>

<p>
userPasswordの暗号化文字列は次のコマンドで得ることができる。
</p>
<pre class="example">
$ slappasswd -h {SSHA} -s P@ssw0rd
{SSHA}KpJwwA2Sbt29GGNZxdasq5XRml6J5q2Z

$ slappasswd -h {SMD5} -s P@ssw0rd
{SMD5}AIZvIadIpJbgKPQ7DtjZ4U6xBVY=
</pre>
<p>
<code>-h</code> の後ろに暗号化方式を指定する。j
</p>

<p>
Linuxグループのエントリ定義
</p>
<pre class="example">
#--- group01 ---
dn: cn=group01,ou=Group,o=Linux Users,dc=jizai-domain,dc=jp
cn: group01
gidNumber: 3001
objectClass: posixGroup

#--- group02 ---
dn: cn=group02,ou=Group,o=Linux Users,dc=jizai-domain,dc=jp
cn: group02
gidNumber: 3002
memberUid: 5001  ★group02をuser01のセカンドグループとして使う
objectClass: posixGroup
</pre>
</div>
</div>

<div id="outline-container-sec-1-7" class="outline-3">
<h3 id="sec-1-7"><span class="section-number-3">1.7</span> よく使用するObjectClass</h3>
<div class="outline-text-3" id="text-1-7">
<table border="2" cellspacing="0" cellpadding="6" rules="groups" frame="hsides">


<colgroup>
<col  class="left" />

<col  class="left" />

<col  class="left" />
</colgroup>
<thead>
<tr>
<th scope="col" class="left">スキーマ</th>
<th scope="col" class="left">ObjectClass</th>
<th scope="col" class="left">用途</th>
</tr>
</thead>
<tbody>
<tr>
<td class="left">core</td>
<td class="left">dcObject</td>
<td class="left">ルートの定義</td>
</tr>

<tr>
<td class="left">&#xa0;</td>
<td class="left">organization</td>
<td class="left">アプリケーションの区分に使用</td>
</tr>

<tr>
<td class="left">&#xa0;</td>
<td class="left">organizationalRole</td>
<td class="left">rootdn定義に使用</td>
</tr>

<tr>
<td class="left">&#xa0;</td>
<td class="left">organizationalUnit</td>
<td class="left">ユーザ情報とグループ情報の区別に使用</td>
</tr>

<tr>
<td class="left">consine</td>
<td class="left">account</td>
<td class="left">ユーザID定義に使用する</td>
</tr>

<tr>
<td class="left">nis</td>
<td class="left">posixAccount</td>
<td class="left">POSIXユーザ定義に使用する</td>
</tr>

<tr>
<td class="left">&#xa0;</td>
<td class="left">shadowAccount</td>
<td class="left">パスワード定義に使用する</td>
</tr>

<tr>
<td class="left">&#xa0;</td>
<td class="left">posixGroup</td>
<td class="left">グループ定義に使用する</td>
</tr>
</tbody>
</table>

<p>
ユーザのプライマリグループはposixAccountのgidNumber属性にて指定する、セカンドグ
ループはposixGroupのmemberUidにて指定する。posixGroupのmemberUidは複数指定可能。
</p>

<p>
そのなか汎用的な属性
</p>
<table border="2" cellspacing="0" cellpadding="6" rules="groups" frame="hsides">


<colgroup>
<col  class="left" />

<col  class="left" />
</colgroup>
<thead>
<tr>
<th scope="col" class="left">属性名</th>
<th scope="col" class="left">説明</th>
</tr>
</thead>
<tbody>
<tr>
<td class="left">dc</td>
<td class="left">Domain Component/ ドメイン名の要素</td>
</tr>

<tr>
<td class="left">o</td>
<td class="left">Organization/ 組織名</td>
</tr>

<tr>
<td class="left">ou</td>
<td class="left">OrganizationUnit/ 部署名</td>
</tr>

<tr>
<td class="left">cn</td>
<td class="left">Common Name/ 氏名</td>
</tr>
</tbody>
</table>
</div>
</div>

<div id="outline-container-sec-1-8" class="outline-3">
<h3 id="sec-1-8"><span class="section-number-3">1.8</span> ldapsearchの使い方</h3>
<div class="outline-text-3" id="text-1-8">
<p>
アクセスコントロール設定でユーザ毎に検索結果の絞り込みが可能です。
以下は簡易認証を用いた検索のコマンド書式です。
</p>
<pre class="example">
$ ldapsearch -x -D &lt;バインドDN&gt; -b &lt;サーチベース&gt; -s &lt;スコープ&gt; -w &lt;パスワード&gt; &lt;検索フィルタ&gt; &lt;取得する属性&gt;
</pre>
<ul class="org-ul">
<li><code>-x</code> 簡易認証でバインドする
</li>
<li><code>-D</code> 認証バインドで使用するDNの指定
</li>
<li><code>-b</code> サーチベース、検索の起点とするエントリの指定
</li>
<li><code>-s</code> 検索スコープの指定
</li>
<li><code>-w</code> 簡易認証のパスワード指定、 <code>-W</code> （大文字）で指定した場合、対話式でパスワードの
が求められる
</li>
</ul>

<p>
指定可能な検索スコープ
</p>
<table border="2" cellspacing="0" cellpadding="6" rules="groups" frame="hsides">


<colgroup>
<col  class="left" />

<col  class="left" />
</colgroup>
<thead>
<tr>
<th scope="col" class="left">スコープ</th>
<th scope="col" class="left">説明</th>
</tr>
</thead>
<tbody>
<tr>
<td class="left">base</td>
<td class="left">サーチベース自身に対して検索する</td>
</tr>

<tr>
<td class="left">one</td>
<td class="left">サーチベース直下のエントリを検索する</td>
</tr>

<tr>
<td class="left">sub</td>
<td class="left">サーチベースを含むその下の全てのエントリを検索する</td>
</tr>

<tr>
<td class="left">children</td>
<td class="left">subの範囲からサーチベースを除く</td>
</tr>
</tbody>
</table>

<p>
検索フィルタの組み合わせ方法
</p>
<table border="2" cellspacing="0" cellpadding="6" rules="groups" frame="hsides">


<colgroup>
<col  class="left" />

<col  class="left" />
</colgroup>
<thead>
<tr>
<th scope="col" class="left">記法</th>
<th scope="col" class="left">意味</th>
</tr>
</thead>
<tbody>
<tr>
<td class="left">(&amp;(A)(B))</td>
<td class="left">A and B</td>
</tr>

<tr>
<td class="left">(&vert;(A)(B))</td>
<td class="left">A or B</td>
</tr>

<tr>
<td class="left">(!(A))</td>
<td class="left">not A</td>
</tr>
</tbody>
</table>

<p>
<code>user01</code> の定義を検索する例
</p>
<pre class="example">
$ ldapsearch -x -D "cn=Manager,dc=jizai-domain,dc=jp" -b "dc=jizai-domain,dc=jp" "uid=user01" -W -LLL
Enter LDAP Password: 
dn: uid=user01,ou=User,dc=jizai-domain,dc=jp
uid: user01
cn: Test User 01
objectClass: account
objectClass: posixAccount
objectClass: top
userPassword:: dXNlcjAx  ★Base64形式で表示される
loginShell: /bin/bash
uidNumber: 5001
gidNumber: 3001
homeDirectory: /home/user01
</pre>
<p>
<code>-LLL</code> オプションは検索結果以外の余計な除法を落とすオプションです。
</p>

<p>
匿名で検索する例
</p>
<pre class="example">
$ ldapsearch -x -b "dc=jizai-domain,dc=jp" "(cn=group01)" -LLL
dn: cn=group01,ou=Group,dc=jizai-domain,dc=jp
objectClass: posixGroup
cn: group01
gidNumber: 3001
</pre>
</div>
</div>

<div id="outline-container-sec-1-9" class="outline-3">
<h3 id="sec-1-9"><span class="section-number-3">1.9</span> ldapaddの使い方</h3>
<div class="outline-text-3" id="text-1-9">
<p>
<code>ldapadd</code> エントリ登録するためのコマンドです。以下はLDAPに新規登録するエントリの定義ファ
イル <code>01.base.ldif</code> を <code>-f</code> オプションで指定して登録する例です。
</p>

<pre class="example">
$  ldapadd -x -D "cn=Manager,dc=jizai-domain,dc=jp" -W -f 01.base.ldif
Enter LDAP Password: 
adding new entry "o=Linux Users,dc=jizai-domain,dc=jp"

adding new entry "o=Smaba Users,dc=jizai-domain,dc=jp"

adding new entry "ou=User,o=Linux Users,dc=jizai-domain,dc=jp"

adding new entry "ou=Group,o=Linux Users,dc=jizai-domain,dc=jp"
</pre>

<p>
<code>ldapadd</code> コマンド実行時のログ
</p>
<pre class="example">
2014-08-13T14:43:35+09:00 pipi local4 debug slapd[172]:  conn=1044 fd=10 ACCEPT from IP=[::1]:58644 (IP=[::]:389)
2014-08-13T14:43:35+09:00 pipi local4 debug slapd[172]:  conn=1044 op=0 BIND dn="cn=Manager,dc=jizai-domain,dc=jp" method=128
2014-08-13T14:43:35+09:00 pipi local4 debug slapd[172]:  conn=1044 op=0 BIND dn="cn=Manager,dc=jizai-domain,dc=jp" mech=SIMPLE ssf=0
2014-08-13T14:43:35+09:00 pipi local4 debug slapd[172]:  conn=1044 op=0 RESULT tag=97 err=0 text=
2014-08-13T14:43:35+09:00 pipi local4 debug slapd[172]:  conn=1044 op=1 ADD dn="o=Linux Users,dc=jizai-domain,dc=jp"
2014-08-13T14:43:35+09:00 pipi local4 debug slapd[172]:  conn=1044 op=2 ADD dn="o=Smaba Users,dc=jizai-domain,dc=jp"
2014-08-13T14:43:35+09:00 pipi local4 debug slapd[172]:  conn=1044 op=1 RESULT tag=105 err=0 text=
2014-08-13T14:43:35+09:00 pipi local4 debug slapd[172]:  conn=1044 op=3 ADD dn="ou=User,o=Linux Users,dc=jizai-domain,dc=jp"
2014-08-13T14:43:35+09:00 pipi local4 debug slapd[172]:  conn=1044 op=2 RESULT tag=105 err=0 text=
2014-08-13T14:43:35+09:00 pipi local4 debug slapd[172]:  conn=1044 op=4 ADD dn="ou=Group,o=Linux Users,dc=jizai-domain,dc=jp"
2014-08-13T14:43:35+09:00 pipi local4 debug slapd[172]:  conn=1044 op=3 RESULT tag=105 err=0 text=
2014-08-13T14:43:35+09:00 pipi local4 debug slapd[172]:  conn=1044 op=5 UNBIND
2014-08-13T14:43:35+09:00 pipi local4 debug slapd[172]:  conn=1044 op=4 RESULT tag=105 err=0 text=
2014-08-13T14:43:35+09:00 pipi local4 debug slapd[172]:  conn=1044 fd=10 closed
</pre>
</div>
</div>

<div id="outline-container-sec-1-10" class="outline-3">
<h3 id="sec-1-10"><span class="section-number-3">1.10</span> ldapdeleteの使い方</h3>
<div class="outline-text-3" id="text-1-10">
<p>
<code>ldapdelete</code> コマンドでLDAPに登録されたエントリの削除することができる。 <code>-r</code> オプショ
ンでサブツリーを含めて削除することも可能です。
</p>
<pre class="example">
$ ldapdelete -x -W -D "cn=Manager,dc=jizai-domain,dc=jp" "ou=User,dc=jizai-domain,dc=jp" -r
</pre>

<p>
以下は実行時のログです。
</p>
<pre class="example">
2014-08-13T00:05:27+09:00 pipi local4 debug slapd[172]:  conn=1027 fd=10 ACCEPT from IP=[::1]:58548 (IP=[::]:389)
2014-08-13T00:05:27+09:00 pipi local4 debug slapd[172]:  conn=1027 op=0 BIND dn="cn=Manager,dc=jizai-domain,dc=jp" method=128
2014-08-13T00:05:27+09:00 pipi local4 debug slapd[172]:  conn=1027 op=0 BIND dn="cn=Manager,dc=jizai-domain,dc=jp" mech=SIMPLE ssf=0
2014-08-13T00:05:27+09:00 pipi local4 debug slapd[172]:  conn=1027 op=0 RESULT tag=97 err=0 text=
2014-08-13T00:05:27+09:00 pipi local4 debug slapd[172]:  conn=1027 op=1 SRCH base="ou=User,dc=jizai-domain,dc=jp" scope=1 deref=0 filter="(objectClass=*)"
2014-08-13T00:05:27+09:00 pipi local4 debug slapd[172]:  conn=1027 op=1 SRCH attr=1.1
2014-08-13T00:05:28+09:00 pipi local4 debug slapd[172]:  conn=1027 op=2 SRCH base="uid=user01,ou=User,dc=jizai-domain,dc=jp" scope=1 deref=0 filter="(objectClass=*)"
2014-08-13T00:05:28+09:00 pipi local4 debug slapd[172]:  conn=1027 op=2 SRCH attr=1.1
2014-08-13T00:05:28+09:00 pipi local4 debug slapd[172]:  conn=1027 op=2 SEARCH RESULT tag=101 err=0 nentries=0 text=
2014-08-13T00:05:28+09:00 pipi local4 debug slapd[172]:  conn=1027 op=1 SEARCH RESULT tag=101 err=0 nentries=5 text=
2014-08-13T00:05:28+09:00 pipi local4 debug slapd[172]:  conn=1027 op=3 DEL dn="uid=user01,ou=User,dc=jizai-domain,dc=jp"    ★削除さエントリ
2014-08-13T00:05:28+09:00 pipi local4 debug slapd[172]:  conn=1027 op=3 RESULT tag=107 err=0 text=
2014-08-13T00:05:28+09:00 pipi local4 debug slapd[172]:  conn=1027 op=4 SRCH base="uid=user02,ou=User,dc=jizai-domain,dc=jp" scope=1 deref=0 filter="(objectClass=*)"
2014-08-13T00:05:28+09:00 pipi local4 debug slapd[172]:  conn=1027 op=4 SRCH attr=1.1
2014-08-13T00:05:28+09:00 pipi local4 debug slapd[172]:  conn=1027 op=4 SEARCH RESULT tag=101 err=0 nentries=0 text=
2014-08-13T00:05:28+09:00 pipi local4 debug slapd[172]:  conn=1027 op=5 DEL dn="uid=user02,ou=User,dc=jizai-domain,dc=jp"
2014-08-13T00:05:28+09:00 pipi local4 debug slapd[172]:  conn=1027 op=5 RESULT tag=107 err=0 text=
2014-08-13T00:05:28+09:00 pipi local4 debug slapd[172]:  conn=1027 op=6 SRCH base="uid=user03,ou=User,dc=jizai-domain,dc=jp" scope=1 deref=0 filter="(objectClass=*)"
2014-08-13T00:05:28+09:00 pipi local4 debug slapd[172]:  conn=1027 op=6 SRCH attr=1.1
2014-08-13T00:05:28+09:00 pipi local4 debug slapd[172]:  conn=1027 op=7 DEL dn="uid=user03,ou=User,dc=jizai-domain,dc=jp"
2014-08-13T00:05:28+09:00 pipi local4 debug slapd[172]:  conn=1027 op=6 SEARCH RESULT tag=101 err=0 nentries=0 text=
2014-08-13T00:05:28+09:00 pipi local4 debug slapd[172]:  conn=1027 op=8 SRCH base="uid=hoge01,ou=User,dc=jizai-domain,dc=jp" scope=1 deref=0 filter="(objectClass=*)"
2014-08-13T00:05:28+09:00 pipi local4 debug slapd[172]:  conn=1027 op=8 SRCH attr=1.1
2014-08-13T00:05:28+09:00 pipi local4 debug slapd[172]:  conn=1027 op=7 RESULT tag=107 err=0 text=
2014-08-13T00:05:28+09:00 pipi local4 debug slapd[172]:  conn=1027 op=9 DEL dn="uid=hoge01,ou=User,dc=jizai-domain,dc=jp"
2014-08-13T00:05:28+09:00 pipi local4 debug slapd[172]:  conn=1027 op=8 SEARCH RESULT tag=101 err=0 nentries=0 text=
2014-08-13T00:05:28+09:00 pipi local4 debug slapd[172]:  conn=1027 op=10 SRCH base="uid=hoge02,ou=User,dc=jizai-domain,dc=jp" scope=1 deref=0 filter="(objectClass=*)"
2014-08-13T00:05:28+09:00 pipi local4 debug slapd[172]:  conn=1027 op=10 SRCH attr=1.1
2014-08-13T00:05:28+09:00 pipi local4 debug slapd[172]:  conn=1027 op=10 SEARCH RESULT tag=101 err=0 nentries=0 text=
2014-08-13T00:05:28+09:00 pipi local4 debug slapd[172]:  conn=1027 op=9 RESULT tag=107 err=0 text=
2014-08-13T00:05:28+09:00 pipi local4 debug slapd[172]:  conn=1027 op=11 DEL dn="uid=hoge02,ou=User,dc=jizai-domain,dc=jp"
2014-08-13T00:05:28+09:00 pipi local4 debug slapd[172]:  conn=1027 op=11 RESULT tag=107 err=0 text=
2014-08-13T00:05:28+09:00 pipi local4 debug slapd[172]:  conn=1027 op=12 DEL dn="ou=User,dc=jizai-domain,dc=jp"
2014-08-13T00:05:28+09:00 pipi local4 debug slapd[172]:  conn=1027 op=13 UNBIND
2014-08-13T00:05:28+09:00 pipi local4 debug slapd[172]:  conn=1027 op=12 RESULT tag=107 err=0 text=
2014-08-13T00:05:28+09:00 pipi local4 debug slapd[172]:  conn=1027 fd=10 closed
</pre>
</div>
</div>

<div id="outline-container-sec-1-11" class="outline-3">
<h3 id="sec-1-11"><span class="section-number-3">1.11</span> ldapmodifyの使い方</h3>
<div class="outline-text-3" id="text-1-11">
<p>
<code>modify_top.ldif</code> に変更内容を記述する
</p>
<pre class="example">
$ cat modify_top.ldif
dn: dc=jizai-domain,dc=jp
changetype: modify
replace: o                    ★変更対象属性
o: jizai-domain Corporation   ★変更内容
-                             ★複数変更対象間のセパレーター
add: description
description: this is my first test suffix
</pre>

<p>
<code>ldapmodify</code> コマンドで変更を実施する
</p>
<pre class="example">
$ ldapmodify -x -W -D "cn=Manager,dc=jizai-domain,dc=jp" -f modify_top.ldif
Enter LDAP Password: 
modifying entry "dc=jizai-domain,dc=jp"
</pre>

<p>
以下は変更時の動作ログです。
</p>
<pre class="example">
2014-08-13T00:20:58+09:00 pipi local4 debug slapd[172]:  conn=1036 fd=10 ACCEPT from IP=[::1]:58557 (IP=[::]:389)
2014-08-13T00:20:58+09:00 pipi local4 debug slapd[172]:  conn=1036 op=0 BIND dn="cn=Manager,dc=jizai-domain,dc=jp" method=128
2014-08-13T00:20:58+09:00 pipi local4 debug slapd[172]:  conn=1036 op=0 BIND dn="cn=Manager,dc=jizai-domain,dc=jp" mech=SIMPLE ssf=0
2014-08-13T00:20:58+09:00 pipi local4 debug slapd[172]:  conn=1036 op=0 RESULT tag=97 err=0 text=
2014-08-13T00:20:58+09:00 pipi local4 debug slapd[172]:  conn=1036 op=1 MOD dn="dc=jizai-domain,dc=jp"
2014-08-13T00:20:58+09:00 pipi local4 debug slapd[172]:  conn=1036 op=1 MOD attr=o description   ★変更や追加された属性
2014-08-13T00:20:58+09:00 pipi local4 debug slapd[172]:  conn=1036 op=1 RESULT tag=103 err=0 text=
2014-08-13T00:20:58+09:00 pipi local4 debug slapd[172]:  conn=1036 op=2 UNBIND
2014-08-13T00:20:58+09:00 pipi local4 debug slapd[172]:  conn=1036 fd=10 closed
</pre>
</div>
</div>

<div id="outline-container-sec-1-12" class="outline-3">
<h3 id="sec-1-12"><span class="section-number-3">1.12</span> slapindexの使い方</h3>
<div class="outline-text-3" id="text-1-12">
<p>
<code>slapindex</code> は <code>slapd.conf</code> 設定ファイルに定義されたインデックスメタ情報を元にインデッ
クスの作成/再作成をするコマンドです。このコマンドを実行時に <code>slapd</code>  デーモンプロセス
を停止しておく必要があります。
</p>

<pre class="example">
akira@pipi ~]$ sudo systemctl stop slapd
[sudo] password for akira: 
[akira@pipi ~]$ sudo -u ldap slapindex -b dc=jizai-domain,dc=jp -v
53ef16ba bdb_monitor_db_open: monitoring disabled; configure monitor database to enable
indexing id=00000001
indexing id=00000002
indexing id=00000003
indexing id=00000004
indexing id=00000005
indexing id=00000006
indexing id=00000007
indexing id=00000008
indexing id=00000009
indexing id=0000000a
indexing id=0000000b
indexing id=0000000c
[akira@pipi ~]$ sudo systemctl start slapd
[akira@pipi ~]$
</pre>
</div>
</div>
</div>

<div id="outline-container-sec-2" class="outline-2">
<h2 id="sec-2"><span class="section-number-2">2</span> 環境構成</h2>
</div>

<div id="outline-container-sec-3" class="outline-2">
<h2 id="sec-3"><span class="section-number-2">3</span> OpenLDAPのインストール</h2>
<div class="outline-text-2" id="text-3">
<p>
<code>sudo pacman -S openldap</code> でインストールを行うと、openldapパッケージが以下の形でシス
テムに展開される。
</p>
<pre class="example">
$ pacman -Ql openldap
openldap /etc/
openldap /etc/openldap/
openldap /etc/openldap/DB_CONFIG.example
openldap /etc/openldap/schema/              ★ 予め用意されたスキーマ
openldap /etc/openldap/schema/README
openldap /etc/openldap/schema/collective.ldif
openldap /etc/openldap/schema/collective.schema
openldap /etc/openldap/schema/corba.ldif
openldap /etc/openldap/schema/corba.schema
openldap /etc/openldap/schema/core.ldif
openldap /etc/openldap/schema/core.schema
openldap /etc/openldap/schema/cosine.ldif
openldap /etc/openldap/schema/cosine.schema
openldap /etc/openldap/schema/duaconf.ldif
openldap /etc/openldap/schema/duaconf.schema
openldap /etc/openldap/schema/dyngroup.ldif
openldap /etc/openldap/schema/dyngroup.schema
openldap /etc/openldap/schema/inetorgperson.ldif
openldap /etc/openldap/schema/inetorgperson.schema
openldap /etc/openldap/schema/java.ldif
openldap /etc/openldap/schema/java.schema
openldap /etc/openldap/schema/ldapns.schema
openldap /etc/openldap/schema/misc.ldif
openldap /etc/openldap/schema/misc.schema
openldap /etc/openldap/schema/nis.ldif
openldap /etc/openldap/schema/nis.schema
openldap /etc/openldap/schema/openldap.ldif
openldap /etc/openldap/schema/openldap.schema
openldap /etc/openldap/schema/pmi.ldif
openldap /etc/openldap/schema/pmi.schema
openldap /etc/openldap/schema/ppolicy.ldif
openldap /etc/openldap/schema/ppolicy.schema
openldap /etc/openldap/slapd.conf   ★LDAP設定ファイル
openldap /etc/openldap/slapd.d/
openldap /etc/openldap/slapd.ldif
openldap /usr/
openldap /usr/bin/
openldap /usr/bin/ldapadd         ★エントリの登録に使う
openldap /usr/bin/ldapcompare
openldap /usr/bin/ldapdelete      ★エントリの削除に使う
openldap /usr/bin/ldapexop
openldap /usr/bin/ldapmodify      ★エントリ属性の変更使う
openldap /usr/bin/ldapmodrdn
openldap /usr/bin/ldappasswd
openldap /usr/bin/ldapsearch      ★エントリの検索に使う
openldap /usr/bin/ldapurl
openldap /usr/bin/ldapwhoami
openldap /usr/bin/slapacl
openldap /usr/bin/slapadd
openldap /usr/bin/slapauth
openldap /usr/bin/slapcat
openldap /usr/bin/slapd            ★デーモンプロセスのバイナリ →  stand-alone LDAP daemon (server)
openldap /usr/bin/slapdn
openldap /usr/bin/slapindex        ★インデックス作成/再作成
openldap /usr/bin/slappasswd
openldap /usr/bin/slapschema
openldap /usr/bin/slaptest         ★設定ファイルの検証に使う
openldap /usr/lib/
openldap /usr/lib/openldap/
openldap /usr/lib/openldap/accesslog-2.4.so.2
openldap /usr/lib/openldap/accesslog-2.4.so.2.10.2
openldap /usr/lib/openldap/accesslog.so
openldap /usr/lib/openldap/auditlog-2.4.so.2
openldap /usr/lib/openldap/auditlog-2.4.so.2.10.2
openldap /usr/lib/openldap/auditlog.so
openldap /usr/lib/openldap/collect-2.4.so.2
openldap /usr/lib/openldap/collect-2.4.so.2.10.2
openldap /usr/lib/openldap/collect.so
openldap /usr/lib/openldap/constraint-2.4.so.2
openldap /usr/lib/openldap/constraint-2.4.so.2.10.2
openldap /usr/lib/openldap/constraint.so
openldap /usr/lib/openldap/dds-2.4.so.2
openldap /usr/lib/openldap/dds-2.4.so.2.10.2
openldap /usr/lib/openldap/dds.so
openldap /usr/lib/openldap/deref-2.4.so.2
openldap /usr/lib/openldap/deref-2.4.so.2.10.2
openldap /usr/lib/openldap/deref.so
openldap /usr/lib/openldap/dyngroup-2.4.so.2
openldap /usr/lib/openldap/dyngroup-2.4.so.2.10.2
openldap /usr/lib/openldap/dyngroup.so
openldap /usr/lib/openldap/dynlist-2.4.so.2
openldap /usr/lib/openldap/dynlist-2.4.so.2.10.2
openldap /usr/lib/openldap/dynlist.so
openldap /usr/lib/openldap/memberof-2.4.so.2
openldap /usr/lib/openldap/memberof-2.4.so.2.10.2
openldap /usr/lib/openldap/memberof.so
openldap /usr/lib/openldap/nssov.so
openldap /usr/lib/openldap/nssov.so.0
openldap /usr/lib/openldap/nssov.so.0.0.0
openldap /usr/lib/openldap/pcache-2.4.so.2
openldap /usr/lib/openldap/pcache-2.4.so.2.10.2
openldap /usr/lib/openldap/pcache.so
openldap /usr/lib/openldap/ppolicy-2.4.so.2
openldap /usr/lib/openldap/ppolicy-2.4.so.2.10.2
openldap /usr/lib/openldap/ppolicy.so
openldap /usr/lib/openldap/refint-2.4.so.2
openldap /usr/lib/openldap/refint-2.4.so.2.10.2
openldap /usr/lib/openldap/refint.so
openldap /usr/lib/openldap/retcode-2.4.so.2
openldap /usr/lib/openldap/retcode-2.4.so.2.10.2
openldap /usr/lib/openldap/retcode.so
openldap /usr/lib/openldap/rwm-2.4.so.2
openldap /usr/lib/openldap/rwm-2.4.so.2.10.2
openldap /usr/lib/openldap/rwm.so
openldap /usr/lib/openldap/seqmod-2.4.so.2
openldap /usr/lib/openldap/seqmod-2.4.so.2.10.2
openldap /usr/lib/openldap/seqmod.so
openldap /usr/lib/openldap/sssvlv-2.4.so.2
openldap /usr/lib/openldap/sssvlv-2.4.so.2.10.2
openldap /usr/lib/openldap/sssvlv.so
openldap /usr/lib/openldap/syncprov-2.4.so.2
openldap /usr/lib/openldap/syncprov-2.4.so.2.10.2
openldap /usr/lib/openldap/syncprov.so
openldap /usr/lib/openldap/translucent-2.4.so.2
openldap /usr/lib/openldap/translucent-2.4.so.2.10.2
openldap /usr/lib/openldap/translucent.so
openldap /usr/lib/openldap/unique-2.4.so.2
openldap /usr/lib/openldap/unique-2.4.so.2.10.2
openldap /usr/lib/openldap/unique.so
openldap /usr/lib/openldap/valsort-2.4.so.2
openldap /usr/lib/openldap/valsort-2.4.so.2.10.2
openldap /usr/lib/openldap/valsort.so
openldap /usr/lib/slapd
openldap /usr/lib/systemd/
openldap /usr/lib/systemd/system/
openldap /usr/lib/systemd/system/slapd.service ★サービス定義ファイル
openldap /usr/lib/tmpfiles.d/
openldap /usr/lib/tmpfiles.d/slapd.conf
openldap /usr/share/
openldap /usr/share/licenses/
openldap /usr/share/licenses/openldap/
openldap /usr/share/licenses/openldap/LICENSE  ★ライセンスファイル
openldap /usr/share/man/
openldap /usr/share/man/man1/
openldap /usr/share/man/man1/ldapadd.1.gz
openldap /usr/share/man/man1/ldapcompare.1.gz
openldap /usr/share/man/man1/ldapdelete.1.gz
openldap /usr/share/man/man1/ldapexop.1.gz
openldap /usr/share/man/man1/ldapmodify.1.gz
openldap /usr/share/man/man1/ldapmodrdn.1.gz
openldap /usr/share/man/man1/ldappasswd.1.gz
openldap /usr/share/man/man1/ldapsearch.1.gz
openldap /usr/share/man/man1/ldapurl.1.gz
openldap /usr/share/man/man1/ldapwhoami.1.gz
openldap /usr/share/man/man5/
openldap /usr/share/man/man5/ldif.5.gz
openldap /usr/share/man/man5/slapd-bdb.5.gz
openldap /usr/share/man/man5/slapd-config.5.gz
openldap /usr/share/man/man5/slapd-dnssrv.5.gz
openldap /usr/share/man/man5/slapd-hdb.5.gz
openldap /usr/share/man/man5/slapd-ldap.5.gz
openldap /usr/share/man/man5/slapd-ldbm.5.gz
openldap /usr/share/man/man5/slapd-ldif.5.gz
openldap /usr/share/man/man5/slapd-mdb.5.gz
openldap /usr/share/man/man5/slapd-meta.5.gz
openldap /usr/share/man/man5/slapd-monitor.5.gz
openldap /usr/share/man/man5/slapd-ndb.5.gz
openldap /usr/share/man/man5/slapd-null.5.gz
openldap /usr/share/man/man5/slapd-passwd.5.gz
openldap /usr/share/man/man5/slapd-perl.5.gz
openldap /usr/share/man/man5/slapd-relay.5.gz
openldap /usr/share/man/man5/slapd-shell.5.gz
openldap /usr/share/man/man5/slapd-sock.5.gz
openldap /usr/share/man/man5/slapd-sql.5.gz
openldap /usr/share/man/man5/slapd.access.5.gz
openldap /usr/share/man/man5/slapd.backends.5.gz
openldap /usr/share/man/man5/slapd.conf.5.gz
openldap /usr/share/man/man5/slapd.overlays.5.gz
openldap /usr/share/man/man5/slapd.plugin.5.gz
openldap /usr/share/man/man5/slapo-accesslog.5.gz
openldap /usr/share/man/man5/slapo-auditlog.5.gz
openldap /usr/share/man/man5/slapo-chain.5.gz
openldap /usr/share/man/man5/slapo-collect.5.gz
openldap /usr/share/man/man5/slapo-constraint.5.gz
openldap /usr/share/man/man5/slapo-dds.5.gz
openldap /usr/share/man/man5/slapo-dyngroup.5.gz
openldap /usr/share/man/man5/slapo-dynlist.5.gz
openldap /usr/share/man/man5/slapo-memberof.5.gz
openldap /usr/share/man/man5/slapo-pbind.5.gz
openldap /usr/share/man/man5/slapo-pcache.5.gz
openldap /usr/share/man/man5/slapo-ppolicy.5.gz
openldap /usr/share/man/man5/slapo-refint.5.gz
openldap /usr/share/man/man5/slapo-retcode.5.gz
openldap /usr/share/man/man5/slapo-rwm.5.gz
openldap /usr/share/man/man5/slapo-sock.5.gz
openldap /usr/share/man/man5/slapo-sssvlv.5.gz
openldap /usr/share/man/man5/slapo-syncprov.5.gz
openldap /usr/share/man/man5/slapo-translucent.5.gz
openldap /usr/share/man/man5/slapo-unique.5.gz
openldap /usr/share/man/man5/slapo-valsort.5.gz
openldap /usr/share/man/man8/
openldap /usr/share/man/man8/slapacl.8.gz
openldap /usr/share/man/man8/slapadd.8.gz
openldap /usr/share/man/man8/slapauth.8.gz
openldap /usr/share/man/man8/slapcat.8.gz
openldap /usr/share/man/man8/slapd.8.gz
openldap /usr/share/man/man8/slapdn.8.gz
openldap /usr/share/man/man8/slapindex.8.gz
openldap /usr/share/man/man8/slappasswd.8.gz
openldap /usr/share/man/man8/slapschema.8.gz
openldap /usr/share/man/man8/slaptest.8.gz
openldap /var/
openldap /var/lib/
openldap /var/lib/openldap/
openldap /var/lib/openldap/openldap-data/                  ★LDAPに保存するデータがBerkeley DB形式でここで管理される
openldap /var/lib/openldap/openldap-data/DB_CONFIG.example ★データ保管バックエンドBerkeley DBの設定ファイルテンプレート
</pre>

<p>
また、 <code>slapd</code> デーモンプロセスを動かすユーザとグループ <code>ldap</code> が自動的に
<code>/etc/passwd</code> と <code>/etc/group</code> に登録される。
</p>
<pre class="example">
★ldapユーザ
$ cat /etc/passwd | grep ldap
ldap:x:439:439::/var/lib/openldap:/bin/false

★ldapグループ
$ cat /etc/group | grep ldap
ldap:x:439:
</pre>
</div>
</div>

<div id="outline-container-sec-4" class="outline-2">
<h2 id="sec-4"><span class="section-number-2">4</span> OpenLDAPサーバ設定と起動</h2>
<div class="outline-text-2" id="text-4">
<p>
OpenLDAPのサーバ設定情報は基本的 <code>/etc/openldap/slapd.conf</code> に記載される。
この設定ファイルは主に以下の情報を定義します。
</p>
<ul class="org-ul">
<li>OpenLDAPに使用するスキーマファイルの指定
</li>
<li>ルートエントリとrootdnの定義
</li>
<li>インデックスの定義(検索を向上するための設定)
</li>
<li>アクセスコントロール
</li>
<li>SSL/TLS通信暗号化時の設定情報
</li>
<li>パスワード暗号化方式の指定
</li>
</ul>

<p>
以下は <code>/etc/openldap/slapd.conf</code> 設定例です.
</p>
<pre class="example">
#
# See slapd.conf(5) for details on configuration options.
# This file should NOT be world readable.
#
#######################################################################
# 使用するスキーマファイルのインクルード
#######################################################################
include	    /etc/openldap/schema/core.schema
include     /etc/openldap/schema/cosine.schema
include     /etc/openldap/schema/nis.schema
include     /etc/openldap/schema/inetorgperson.schema
include     /etc/openldap/schema/postfix.schema

# Define global ACLs to disable default read access.

# Do not enable referrals until AFTER you have a working directory
# service AND an understanding of referrals.
#referral	ldap://root.openldap.org

pidfile		/run/openldap/slapd.pid
argsfile	/run/openldap/slapd.args

# Load dynamic backend modules:
# modulepath	/usr/lib/openldap
# moduleload	back_bdb.la
# moduleload	back_hdb.la
# moduleload	back_ldap.la

# Sample security restrictions
#	Require integrity protection (prevent hijacking)
#	Require 112-bit (3DES or better) encryption for updates
#	Require 63-bit encryption for simple bind
# security ssf=1 update_ssf=112 simple_bind=64

#######################################################################
# アクセスコントロール
#######################################################################
# Sample access control policy:
#	Root DSE: allow anyone to read it
#	Subschema (sub)entry DSE: allow anyone to read it
#	Other DSEs:
#		Allow self write access
#		Allow authenticated users read access
#		Allow anonymous users to authenticate
#	Directives needed to implement policy:
# access to dn.base="" by * read
# access to dn.base="cn=Subschema" by * read
# access to *
#	by self write
#	by users read
#	by anonymous auth
#
# if no access controls are present, the default policy
# allows anyone and everyone to read anything but restricts
# updates to rootdn.  (e.g., "access to * by * read")
#
# rootdn can always read and write EVERYTHING!

#ユーザが自分のパスワード変更できるようにアクセス権を設定
access to attrs=userPassword
  by dn="cn=Manager,dc=jizai-domain,dc=jp" write
  by self write
  by anonymous auth              ★簡易認証では一度匿名でバンドしてuserPassword属性による認証を行うため
  by * none

#管理者は書き込み可能、その他のユーザは読み取り専用
access to *
  by dn="cn=Manager,dc=jizai-domain,dc=jp" write
  by self write
  by * read

#######################################################################
# BDB database definitions (ルートエントリとrootdnの定義)
#######################################################################
database	bdb
suffix		"dc=jizai-domain,dc=jp"                    ★ルートエントリの定義
rootdn		"cn=Manager,dc=jizai-domain,dc=jp"         ★rootdnの定義
# Cleartext passwords, especially for the rootdn, should
# be avoid.  See slappasswd(8) and slapd.conf(5) for details.
# Use of strong authentication encouraged.
rootpw		{SSHA}mMRwA4mPL7hIet11pVaXdK1AaV49J7Iy
# The database directory MUST exist prior to running slapd AND
# should only be accessible by the slapd and slap tools.
# Mode 700 recommended.
directory	/var/lib/openldap/jizai-domain             ★BDBファイル格納先の指定、ディレクトリを予め作成してお必要があります

#######################################################################
# インデックスの定義
#######################################################################
# Indices to maintain
index	objectClass	                     eq,pres        ★eq:   属性値が一致する
index   uidNumber,gidNumber,loginShell   eq,pres        ★pres: 属性が存在する
index	uid,memberUid            	     eq,pres,sub    ★sub:  属性値の一部が一致する
index	ou,cn,mail,surname,givenname     eq,pres,sub
index	nisMapName,nisMapEntry    	     eq,pres,sub

#######################################################################
# SSL/TLS通信暗号化
#######################################################################

#######################################################################
# パスワード暗号化方式
#######################################################################
password-hash {SSHA}          ★パスワード属性値の暗号化方式
</pre>

<p>
設定ファイル編集完了後、director項目で指定したディレクトリを <code>ldap</code> ユーザ権限で作成しましょう。
</p>
<pre class="example">
$ sudo -u ldap mkdir /var/lib/openldap/jizai-domain
</pre>

<p>
またこのディレクトリの直下にDBDのパラメータファイル <code>DB_CONFIG</code> を予め定義しましょう。
</p>

<pre class="example">
$ sudo -u ldap touch /var/lib/openldap/jizai-domain/DB_CONFIG
$ sudo -u ldap cat /var/lib/openldap/jizai-domain/DB_CONFIG
# $OpenLDAP$
# Example DB_CONFIG file for use with slapd(8) BDB/HDB databases.
#
# See the Oracle Berkeley DB documentation
#   &lt;http://www.oracle.com/technology/documentation/berkeley-db/db/ref/env/db_config.html&gt;
# for detail description of DB_CONFIG syntax and semantics.
#
# Hints can also be found in the OpenLDAP Software FAQ
#	&lt;http://www.openldap.org/faq/index.cgi?file=2&gt;
# in particular:
#   &lt;http://www.openldap.org/faq/index.cgi?file=1075&gt;

# Note: most DB_CONFIG settings will take effect only upon rebuilding
# the DB environment.

# one 0.25 GB cache
set_cachesize 0 268435456 1

# Data Directory
#set_data_dir db

# Transaction Log settings
set_lg_regionmax 262144
set_lg_bsize 2097152
#set_lg_dir logs

set_flags DB_LOG_AUTOREMOVE

# Note: special DB_CONFIG flags are no longer needed for "quick"
# slapadd(8) or slapindex(8) access (see their -q option).
</pre>

<p>
サービスを起動する前に、=slaptest= コマンドで設定ファイルの文法検証を行いましょう。
</p>
<pre class="example">
$ sudo -u ldap slaptest
/etc/openldap/slapd.conf: line 94: index attribute "givename" undefined
slaptest: bad configuration file!  ★文法検証NGの場合、このメッセージが表示される。
</pre>

<p>
初回起動前に <code>id2entry.bdb</code> ファイルがないため、検証時に以下のようなメッセージが表示される。
これは設定ファイルの問題ではありません。気にせずに前に進みましょう。
</p>
<pre class="example">
$ sudo -u ldap slaptest
53eb0121 bdb_db_open: database "dc=jizai-domain,dc=jp": db_open(/var/lib/openldap/jizai-domain/id2entry.bdb) failed: No such file or directory (2).
53eb0121 backend_startup_one (type=bdb, suffix="dc=jizai-domain,dc=jp"): bi_db_open failed! (2)
slap_startup failed (test would succeed using the -u switch)

★-uオプションでdry-runモードで実行すると警告がなくなる
$ sudo -u ldap slaptest -u
config file testing succeeded
$
</pre>

<p>
いよいよ、サービスを起動します。
</p>
<pre class="example">
★systemctlでサービスを起動します
$ sudo systemctl start slapd.service

★ログを確認する
$ sudo tail -f /var/log/everything.log
2014-08-13T15:10:24+09:00 pipi daemon info systemd[1]:  Starting OpenLDAP server daemon...
2014-08-13T15:10:25+09:00 pipi local4 debug slapd[9780]:  @(#) $OpenLDAP: slapd 2.4.39 (Feb  2 2014 15:15:20) $
	nobody@root-armv6-copy:/build/openldap/src/openldap-2.4.39/servers/slapd
2014-08-13T15:10:25+09:00 pipi local4 debug slapd[9781]:  bdb_monitor_db_open: monitoring disabled; configure monitor database to enable
2014-08-13T15:10:25+09:00 pipi local4 debug slapd[9781]:  slapd starting
2014-08-13T15:10:25+09:00 pipi daemon info systemd[1]:  Started OpenLDAP server daemon.
</pre>

<p>
正常に起動された感じですね。 <code>monitoring disabled</code> 部分が気にされるかも知れないが、こ
れはOpenLDAPのモニタ機能が無効化の状態で起動されたのことです。今度機会があれば、モニ
タ機能に関して取り上げたいと思います。
</p>

<p>
試しにrootdnでバインドしてldapsearchを実行してみましょう。
</p>
<pre class="example">
$ ldapsearch -x -W -D "cn=Manager,dc=jizai-domain,dc=jp" -b "dc=jizai-domain,dc=jp"
Enter LDAP Password: 
# extended LDIF
#
# LDAPv3
# base &lt;dc=jizai-domain,dc=jp&gt; with scope subtree
# filter: (objectclass=*)
# requesting: ALL
#

# search result
search: 2
result: 32 No such object

# numResponses: 1
$
</pre>

<p>
エントリが登録されていないため空の検索結果が表示されましたね。
また、director項目で指定したディレクトリに自動的にDBDファイルが作成される。
</p>

<pre class="example">
$ sudo -u ldap ls -al /var/lib/openldap/jizai-domain
total 14264
drwx------ 2 ldap ldap     4096 Aug 13 15:10 .
drwx------ 4 ldap ldap     4096 Aug 13 14:51 ..
-rwx------ 1 ldap ldap      874 Aug 13 14:59 DB_CONFIG
-rw------- 1 ldap ldap  2310144 Aug 13 15:29 __db.001
-rw------- 1 ldap ldap 12861440 Aug 13 15:29 __db.002
-rw------- 1 ldap ldap  1490944 Aug 13 15:29 __db.003
-rw-r--r-- 1 ldap ldap     4096 Aug 13 15:10 alock
-rw------- 1 ldap ldap     8192 Aug 13 15:10 dn2id.bdb
-rw------- 1 ldap ldap    32768 Aug 13 15:10 id2entry.bdb
-rw------- 1 ldap ldap 10485760 Aug 13 15:10 log.0000000001
</pre>

<p>
続いて、 <a href="#sec-1-6">1.6</a> で説明したデータを登録してましょう。
</p>
<pre class="example">
$ ldapadd -x -D "cn=Manager,dc=jizai-domain,dc=jp" -W -f 01.base.ldif 
Enter LDAP Password: 
adding new entry "dc=jizai-domain,dc=jp"

adding new entry "cn=Manager,dc=jizai-domain,dc=jp"

adding new entry "o=Linux Users,dc=jizai-domain,dc=jp"

adding new entry "o=Smaba Users,dc=jizai-domain,dc=jp"

adding new entry "ou=User,o=Linux Users,dc=jizai-domain,dc=jp"

adding new entry "ou=Group,o=Linux Users,dc=jizai-domain,dc=jp"

★ユーザエントリの登録
$ ldapadd -x -D "cn=Manager,dc=jizai-domain,dc=jp" -W -f 02.users.ldif 
Enter LDAP Password: 
adding new entry "uid=user01,ou=User,o=Linux Users,dc=jizai-domain,dc=jp"

adding new entry "uid=user02,ou=User,o=Linux Users,dc=jizai-domain,dc=jp"

★グループエントリの登録
$ ldapadd -x -D "cn=Manager,dc=jizai-domain,dc=jp" -W -f 03.groups.ldif 
Enter LDAP Password: 
adding new entry "cn=group01,ou=Group,o=Linux Users,dc=jizai-domain,dc=jp"

adding new entry "cn=group02,ou=Group,o=Linux Users,dc=jizai-domain,dc=jp"

$
</pre>
<p>
無地に登録出来ました！匿名ユーザで検索してましょう。
</p>

<pre class="example">
$ ldapsearch -x -b "dc=jizai-domain,dc=jp" -LLL
dn: dc=jizai-domain,dc=jp
dc: jizai-domain
o: jizai-domain Corporation
objectClass: dcObject
objectClass: organization

dn: cn=Manager,dc=jizai-domain,dc=jp
cn: Manager
objectClass: organizationalRole

dn: o=Linux Users,dc=jizai-domain,dc=jp
o: Linux Users
objectClass: organization

dn: o=Smaba Users,dc=jizai-domain,dc=jp
o: Smaba Users
objectClass: organization

dn: ou=User,o=Linux Users,dc=jizai-domain,dc=jp
ou: User
objectClass: organizationalUnit

dn: ou=Group,o=Linux Users,dc=jizai-domain,dc=jp
ou: Group
objectClass: organizationalUnit

dn: uid=user01,ou=User,o=Linux Users,dc=jizai-domain,dc=jp
uid: user01
cn: Test User01
uidNumber: 5001
gidNumber: 3001
homeDirectory: /home/user01
loginShell: /bin/bash
gecos: Test User No01
shadowLastChange: 0
shadowMin: 0
shadowMax: 99999
shadowWarning: 7
objectClass: account
objectClass: posixAccount
objectClass: shadowAccount

dn: uid=user02,ou=User,o=Linux Users,dc=jizai-domain,dc=jp
uid: user02
cn: Test User02
uidNumber: 5002
gidNumber: 3002
homeDirectory: /home/user02
loginShell: /bin/bash
gecos: Test User No02
shadowLastChange: 0
shadowMin: 0
shadowMax: 99999
shadowWarning: 7
objectClass: account
objectClass: posixAccount
objectClass: shadowAccount

dn: cn=group01,ou=Group,o=Linux Users,dc=jizai-domain,dc=jp
cn: group01
gidNumber: 3001
objectClass: posixGroup

dn: cn=group02,ou=Group,o=Linux Users,dc=jizai-domain,dc=jp
cn: group02
gidNumber: 3002
memberUid: 5001
objectClass: posixGroup
</pre>
<p>
匿名でアクセスする場合 <code>userPassword</code> 属性が表示されないことを確認しました。
次は曖昧検索ウィ練習してみたいと思います。
</p>

<pre class="example">
★uidで前方一致検索する、検索結果にgecosのみを表示する
$ ldapsearch -x -b "dc=jizai-domain,dc=jp" "uid=user*" "uid" -LLL
dn: uid=user01,ou=User,o=Linux Users,dc=jizai-domain,dc=jp
gecos: Test User No01

dn: uid=user02,ou=User,o=Linux Users,dc=jizai-domain,dc=jp
gecos: Test User No02
</pre>
</div>
</div>

<div id="outline-container-sec-5" class="outline-2">
<h2 id="sec-5"><span class="section-number-2">5</span> OpenLDAPログ出力設定</h2>
<div class="outline-text-2" id="text-5">
<p>
デフォルトではサービスのログが <code>journal</code> ログシステムでバイナリ形式でログ収集される。
次はコマンドで <code>/usr/bin/slapd</code> プロセスのログ出力を確認することができます。
</p>
<pre class="example">
$ journalctl /usr/bin/slapd
-- Logs begin at Tue 2014-01-28 15:40:27 JST, end at Tue 2014-08-12 22:05:05 JST. --
Jan 28 22:08:32 pipi slapd[175]: conn=1000 fd=9 ACCEPT from IP=192.168.100.7:35520 (IP=0.0.0.0:389)
Jan 28 22:08:32 pipi slapd[175]: conn=1000 op=0 BIND dn="" method=128
Jan 28 22:08:32 pipi slapd[175]: conn=1000 op=0 RESULT tag=97 err=0 text=
Jan 28 22:08:32 pipi slapd[175]: conn=1000 op=1 SRCH base="dc=jizai-domain,dc=jp" scope=2 deref=0 filter="(&amp;(objectClass=posixAccount)(u
........
</pre>

<p>
journald と syslog のを結合して運用している場合以下手順でsyslogの設定を行うでopenldap
のログを別ファイルに出力させることができる。
</p>

<p>
<code>/etc/syslog-ng/syslog-ng.conf</code> に以下の定義の追加して、 <code>syslog-ng</code> サービスを再起動
する。
</p>

<pre class="example">
template t_1 {
        template("$ISODATE $FULLHOST $FACILITY $PRIORITY $MSGHDR $MSG\n"); templat$
};

destination d_ldap { file("/var/log/ldap.log" template(t_1)); };

filter f_ldap { facility(local4); };   ★ここが肝です、openldapのログはlocal4ファシリティを用いて出力する仕様となっている

log { source(src); filter(f_ldap); destination(d_ldap); };
</pre>

<p>
<code>/etc/logrotate.d/syslog-ng</code> にローテーション対象に追加する。
</p>
<pre class="example">
                            ★最後に追加する
/var/log/messages.log ..... /var/log/ldap.log  {
	missingok
	sharedscripts
	postrotate
		/bin/kill -HUP $(cat /run/syslog-ng.pid 2&gt;/dev/null) 2&gt;/dev/null || true
	endscript
}
</pre>

<p>
### TODO
loglevel
</p>
</div>
</div>

<div id="outline-container-sec-6" class="outline-2">
<h2 id="sec-6"><span class="section-number-2">6</span> LDAPクライアントの設定</h2>
<div class="outline-text-2" id="text-6">
<p>
LDAPクライアントはいろいろありますが、ここでは <code>ldapsearch</code> などOpenLDAPに付属したツー
ルから参照されるクライアント設定ファイルについて紹介します。
</p>

<p>
OpenLDAPサーバを参照するためにLDAPクライアントに <code>libldap</code> をインストールしましょう。
<code>OpenLDAP</code> インストール時もすでにインストールされていると思いますが、ここでは再イン
ストールことになります。
</p>

<pre class="example">
$ sudo pacman -S libldap
[sudo] password for akira: 
警告: libldap-2.4.39-1 は最新です -- 再インストール
依存関係を解決しています...
相互衝突をチェックしています...

パッケージ (1): libldap-2.4.39-1

Total Installed Size:   0.94 MiB
Net Upgrade Size:       0.00 MiB

:: インストールを行いますか？ [Y/n]
(1/1) キーリングのキーを確認                                                                   [########################################################] 100%
(1/1) パッケージの整合性をチェック                                                             [########################################################] 100%
(1/1) パッケージファイルのロード                                                               [########################################################] 100%
(1/1) ファイルの衝突をチェック                                                                 [########################################################] 100%
(1/1) 空き容量を確認                                                                           [########################################################] 100%
(1/1) 再インストール libldap                                                                   [########################################################] 100%
$ pacman -Ql libldap
libldap /etc/
libldap /etc/openldap/
libldap /etc/openldap/ldap.conf  ★LDAPクライアント設定ファイル
......省略......
</pre>

<p>
<code>/etc/openldap/ldap.conf</code> はLDAPクライアントの設定ファイルとなります。このファイルう
に最低限に以下のLDAPサーバ接続する情報を記述しましょう。
</p>
<pre class="example">
BASE   dc=jizai-domain,dc=jp
URI    ldap://pipi.home/
</pre>

<p>
これで <code>ldapsearch</code> コマンド実行時にデフォルトの接続先として付与されることになります。
</p>
</div>
</div>

<div id="outline-container-sec-7" class="outline-2">
<h2 id="sec-7"><span class="section-number-2">7</span> LDAPクライアントとサーバ間の通信内容</h2>
<div class="outline-text-2" id="text-7">
<p>
LDAPクライアントとサーバ間通経路が暗号化されていない時のパケット内容を確認しましょう。
以下は <code>ldapsearch</code> コマンドでユーザエントリの <code>userPassword</code> 属性の検索結果となりま
す。 <code>userPassword</code> の値がBase64エンコード形式で出力されていることが分かりました。
</p>
<pre class="example">
$ ldapsearch -x -W  -D "cn=Manager,dc=jizai-domain,dc=jp" -b "ou=User,o=Linux Users,dc=jizai-domain,dc=jp" "userPassword" -LLL
Enter LDAP Password: 
dn: ou=User,o=Linux Users,dc=jizai-domain,dc=jp

dn: uid=user01,ou=User,o=Linux Users,dc=jizai-domain,dc=jp
userPassword:: UEBzc3cwcmQ=

dn: uid=user02,ou=User,o=Linux Users,dc=jizai-domain,dc=jp
userPassword:: e1NTSEF9S3BKd3dBMlNidDI5R0dOWnhkYXNxNVhSbWw2SjVxMlo=
</pre>

<p>
<code>wireshark</code> の監視結果
</p>


<div class="figure">
<p><img src="img/2014-08-12-openldap-01.png" alt="2014-08-12-openldap-01.png" />
</p>
</div>

<p>
<code>tcpdump</code> の監視結果（一部情報を落としている）
</p>
<pre class="example">
$ sudo tcpdump -n -i wlp2s0 port 389 -X
tcpdump: verbose output suppressed, use -v or -vv for full protocol decode
listening on wlp2s0, link-type EN10MB (Ethernet), capture size 65535 bytes
16:38:54.494320 IP 192.168.100.10.37832 &gt; 192.168.100.4.389: Flags [S], seq 1466415103, win 29200, options [mss 1460,sackOK,TS val 23258407 ecr 0,nop,wscale 7], length 0
...省略...
16:38:54.495465 IP 192.168.100.4.389 &gt; 192.168.100.10.37832: Flags [S.], seq 206831997, ack 1466415104, win 28960, options [mss 1460,sackOK,TS val 10688865 ecr 23258407,nop,wscale 5], length 0
...省略...
16:38:54.495515 IP 192.168.100.10.37832 &gt; 192.168.100.4.389: Flags [.], ack 1, win 229, options [nop,nop,TS val 23258407 ecr 10688865], length 0
...省略...
16:38:54.495602 IP 192.168.100.10.37832 &gt; 192.168.100.4.389: Flags [P.], seq 1:55, ack 1, win 229, options [nop,nop,TS val 23258407 ecr 10688865], length 54
	0x0000:  4500 006a 52da 4000 4006 9e54 c0a8 640a  E..jR.@.@..T..d.
	0x0010:  c0a8 6404 93c8 0185 5767 b800 0c54 017e  ..d.....Wg...T.~
	0x0020:  8018 00e5 082b 0000 0101 080a 0162 e527  .....+.......b.'
	0x0030:  00a3 1961 3034 0201 0160 2f02 0103 0420  ...a04...`/.....
	0x0040:  636e 3d4d 616e 6167 6572 2c64 633d 6a69  cn=Manager,dc=ji
	0x0050:  7a61 692d 646f 6d61 696e 2c64 633d 6a70  zai-domain,dc=jp
	0x0060:  8008 5040 7373 7730 7264                 ..P@ssw0rd                 ★rootdnバインド時のパスワード

16:38:54.497192 IP 192.168.100.4.389 &gt; 192.168.100.10.37832: Flags [.], ack 55, win 905, options [nop,nop,TS val 10688865 ecr 23258407], length 0
...省略...
16:38:54.505926 IP 192.168.100.4.389 &gt; 192.168.100.10.37832: Flags [P.], seq 1:15, ack 55, win 905, options [nop,nop,TS val 10688866 ecr 23258407], length 14
...省略...
16:38:54.505948 IP 192.168.100.10.37832 &gt; 192.168.100.4.389: Flags [.], ack 15, win 229, options [nop,nop,TS val 23258410 ecr 10688866], length 0
...省略...
16:38:54.506029 IP 192.168.100.10.37832 &gt; 192.168.100.4.389: Flags [P.], seq 55:151, ack 15, win 229, options [nop,nop,TS val 23258410 ecr 10688866], length 96
16:38:54.511339 IP 192.168.100.4.389 &gt; 192.168.100.10.37832: Flags [P.], seq 15:69, ack 151, win 905, options [nop,nop,TS val 10688866 ecr 23258410], length 54
16:38:54.517492 IP 192.168.100.4.389 &gt; 192.168.100.10.37832: Flags [P.], seq 69:162, ack 151, win 905, options [nop,nop,TS val 10688867 ecr 23258410], length 93
	0x0000:  4500 0091 1822 4000 4006 d8e5 c0a8 6404  E...."@.@.....d.
	0x0010:  c0a8 640a 0185 93c8 0c54 01c2 5767 b896  ..d......T..Wg..
	0x0020:  8018 0389 7d44 0000 0101 080a 00a3 1963  ....}D.........c
	0x0030:  0162 e52a 305b 0201 0264 5604 3675 6964  .b.*0[...dV.6uid
	0x0040:  3d75 7365 7230 312c 6f75 3d55 7365 722c  =user01,ou=User,
	0x0050:  6f3d 4c69 6e75 7820 5573 6572 732c 6463  o=Linux.Users,dc
	0x0060:  3d6a 697a 6169 2d64 6f6d 6169 6e2c 6463  =jizai-domain,dc
	0x0070:  3d6a 7030 1c30 1a04 0c75 7365 7250 6173  =jp0.0...userPas
	0x0080:  7377 6f72 6431 0a04 0850 4073 7377 3072  sword1...P@ssw0r          ★検索結果にuser01のパスワード
	0x0090:  64                                       d
16:38:54.517536 IP 192.168.100.10.37832 &gt; 192.168.100.4.389: Flags [.], ack 162, win 229, options [nop,nop,TS val 23258414 ecr 10688866], length 0
16:38:54.518197 IP 192.168.100.4.389 &gt; 192.168.100.10.37832: Flags [P.], seq 162:285, ack 151, win 905, options [nop,nop,TS val 10688867 ecr 23258410], length 123
	0x0000:  4500 00af 1823 4000 4006 d8c6 c0a8 6404  E....#@.@.....d.
	0x0010:  c0a8 640a 0185 93c8 0c54 021f 5767 b896  ..d......T..Wg..
	0x0020:  8018 0389 682f 0000 0101 080a 00a3 1963  ....h/.........c
	0x0030:  0162 e52a 3079 0201 0264 7404 3675 6964  .b.*0y...dt.6uid
	0x0040:  3d75 7365 7230 322c 6f75 3d55 7365 722c  =user02,ou=User,
	0x0050:  6f3d 4c69 6e75 7820 5573 6572 732c 6463  o=Linux.Users,dc
	0x0060:  3d6a 697a 6169 2d64 6f6d 6169 6e2c 6463  =jizai-domain,dc
	0x0070:  3d6a 7030 3a30 3804 0c75 7365 7250 6173  =jp0:08..userPas
	0x0080:  7377 6f72 6431 2804 267b 5353 4841 7d4b  sword1(.&amp;{SSHA}K          ★検索結果にuser02のパスワード
	0x0090:  704a 7777 4132 5362 7432 3947 474e 5a78  pJwwA2Sbt29GGNZx
	0x00a0:  6461 7371 3558 526d 6c36 4a35 7132 5a    dasq5XRml6J5q2Z
16:38:54.518549 IP 192.168.100.4.389 &gt; 192.168.100.10.37832: Flags [P.], seq 285:299, ack 151, win 905, options [nop,nop,TS val 10688867 ecr 23258414], length 14
</pre>

<p>
検証結果の通り、バインド時のパスワードや検索結果中のパスワード情報がバレバレですね。
本番運用ではこの状態だと好ましくないでしょうか。ちゃんとSSL/TLSで暗号化しましょう。
</p>
</div>
</div>

<div id="outline-container-sec-8" class="outline-2">
<h2 id="sec-8"><span class="section-number-2">8</span> LDAPによるLinuxのログイン認証設定</h2>
<div class="outline-text-2" id="text-8">
</div><div id="outline-container-sec-8-1" class="outline-3">
<h3 id="sec-8-1"><span class="section-number-3">8.1</span> LDAP連携用ライブラリの導入</h3>
<div class="outline-text-3" id="text-8-1">
<p>
LDAPサーバと連携してログイン認証するために <code>libnss_ldap</code> と <code>pam_ldap</code> ライブラリが必
要とします。２つライブラリの役割は
</p>
<ul class="org-ul">
<li>libnss_ldap: Name Service Switch によるLDAPユーザ情報を引けるようにする
</li>
<li>pam_ldap: 簡易パスワード認証や <code>passwd</code> によるパスワード変更のLDAP対応
</li>
</ul>

<p>
この２つライブラリは別々プロジェクトで開発されているため、設定ファイルも別々
となっている。
</p>
<table border="2" cellspacing="0" cellpadding="6" rules="groups" frame="hsides">


<colgroup>
<col  class="left" />

<col  class="left" />

<col  class="left" />
</colgroup>
<tbody>
<tr>
<td class="left">pam_ldap</td>
<td class="left"><a href="http://www.padl.com/OSS/pam_ldap.html">http://www.padl.com/OSS/pam_ldap.html</a></td>
<td class="left">nss_ldap.conf</td>
</tr>

<tr>
<td class="left">nss_ldap</td>
<td class="left"><a href="http://www.padl.com/OSS/nss_ldap.html">http://www.padl.com/OSS/nss_ldap.html</a></td>
<td class="left">pam_ldap.conf</td>
</tr>
</tbody>
</table>
<p>
実際にこの２つ設定ファイルに記述する内容はほどんどん変わらない、設定情報が二重管理と
なってしまいます。 この問題を解決してくれるのは <code>nss-pam-ldapd</code> です。以下は
<code>nss-pam-ldapd</code> プロジェクトサイトからの説明引用です。
</p>

<pre class="example">
This is implemented using thin NSS and PAM modules which delegate to a dedicated
service (nslcd) that queries the LDAP server with persistent connections,
authentication, attribute translation, etc.
</pre>

<p>
つまり、２モジュールを仲良くする代理人的なものですね。
</p>

<pre class="example">
$ sudo pacman -S nss-pam-ldapd
依存関係を解決しています...
相互衝突をチェックしています...
:: nss-pam-ldapd と pam_ldap が衝突しています。pam_ldap を削除しますか？ [y/N] y

パッケージ (2): pam_ldap-186-5 [削除]  nss-pam-ldapd-0.8.14-1

Total Installed Size:   0.23 MiB
Net Upgrade Size:       0.14 MiB

:: インストールを行いますか？ [Y/n]
(1/1) キーリングのキーを確認                                                                   [########################################################] 100%
(1/1) パッケージの整合性をチェック                                                             [########################################################] 100%
(1/1) パッケージファイルのロード                                                               [########################################################] 100%
(1/1) ファイルの衝突をチェック                                                                 [########################################################] 100%
(2/2) 空き容量を確認                                                                           [########################################################] 100%
(1/1) 削除 pam_ldap                                                                            [########################################################] 100%
警告: /etc/pam_ldap.conf は /etc/pam_ldap.conf.pacsave として保存されました
(1/1) インストール nss-pam-ldapd                                                               [########################################################] 100%

★インストールされたファイル一覧
$ sudo pacman -Ql nss-pam-ldapd 
nss-pam-ldapd /etc/
nss-pam-ldapd /etc/nslcd.conf                        ★LDAPサーバ接続情報はここに載せる
nss-pam-ldapd /usr/
nss-pam-ldapd /usr/bin/
nss-pam-ldapd /usr/bin/nslcd                         ★[local LDAP name service daemon]、LDAP連携時の代理デーモンプロセス
nss-pam-ldapd /usr/lib/
nss-pam-ldapd /usr/lib/libnss_ldap.so.2              ★NSSのLDAP対応
nss-pam-ldapd /usr/lib/security/
nss-pam-ldapd /usr/lib/security/pam_ldap.so          ★LDAP認証PAMモジュール
nss-pam-ldapd /usr/lib/systemd/
nss-pam-ldapd /usr/lib/systemd/system/
nss-pam-ldapd /usr/lib/systemd/system/nslcd.service  ★nslcdサービスファイル
nss-pam-ldapd /usr/lib/tmpfiles.d/
nss-pam-ldapd /usr/lib/tmpfiles.d/nslcd.conf
nss-pam-ldapd /usr/share/
nss-pam-ldapd /usr/share/man/
nss-pam-ldapd /usr/share/man/man5/
nss-pam-ldapd /usr/share/man/man5/nslcd.conf.5.gz
nss-pam-ldapd /usr/share/man/man8/
nss-pam-ldapd /usr/share/man/man8/nslcd.8.gz
nss-pam-ldapd /usr/share/man/man8/pam_ldap.8.gz
$
</pre>

<p>
<code>nslcd</code> は <code>libnss_ldap</code> や <code>pam_ldap</code> からLDAPと連携時の中継代理デーモンプロセス
となります。LDAPサーバへの接続情報は <code>/etc/nslcd.conf</code> にて記述します。
</p>

<pre class="example">
$ cat /etc/nslcd.conf
uri ldap://pipi.home/
base dc=jizai-domain,dc=jp                    ★ユーザエントリ検索の起点
rootpwmoddn cn=Manager,dc=jizai-domain,dc=jp  ★rootユーザでLDAPユーザのパスワード変更時の認証バインドに使われる
</pre>

<p>
<code>/etc/nslcd.conf</code> とは別に <code>/etc/nscd.conf</code> が存在します、このファイルは <code>glibc</code> が提供してい
るものです、混乱しないように注意しましょう。
</p>

<p>
<code>/etc/nsswitch.conf</code> に以下のように情報源にldapを追加する。
</p>
<pre class="example">
$ cat /etc/nsswitch.conf
passwd:    files ldap
group:     files ldap
shadow:    files ldap
netgroup:  files ldap

★以上以外の内容、ここでは省略します。
</pre>

<p>
<code>nslcd.service</code> サービスを起動して、 <code>getent passwd</code> でLDAPのユーザ情報ちゃんと参照で
きることを確認しましょう。ちなみに、getentはNSSライブラリからエントリーを取得するコマ
ンドです。
</p>

<pre class="example">
$ sudo systemctl start nslcd.service
$ getent passwd
root:x:0:0:root:/root:/bin/bash
.....省略.....
nslcd:x:997:996::/var/run/nslcd:/bin/false

★LDAPのユーザエントリ情報が表示されている
user01:x:5001:3001:Test User No01:/home/user01:/bin/bash
user02:x:5002:3002:Test User No02:/home/user02:/bin/bash
</pre>

<pre class="example">
★サービス起動時のログ
Aug 14 00:14:31 mimi-air systemd[1]: Starting Naming services LDAP client daemon....
Aug 14 00:14:31 mimi-air nslcd[8554]: version 0.8.14 starting
Aug 14 00:14:31 mimi-air nslcd[8554]: accepting connections
Aug 14 00:14:31 mimi-air systemd[1]: Started Naming services LDAP client daemon..

★getent passwd実行時のログ
Aug 14 00:14:35 mimi-air nslcd[8554]: [8b4567] &lt;passwd(all)&gt; (re)loading /etc/nsswitch.conf
</pre>
</div>
</div>

<div id="outline-container-sec-8-2" class="outline-3">
<h3 id="sec-8-2"><span class="section-number-3">8.2</span> LDAP認証PAMモジュールの設定</h3>
<div class="outline-text-3" id="text-8-2">
<p>
次はLDAP認証するためのPAMモジュール設定を行います。対象となる設定ファイルは次の表にま
とめます。
</p>

<table border="2" cellspacing="0" cellpadding="6" rules="groups" frame="hsides">


<colgroup>
<col  class="left" />

<col  class="left" />
</colgroup>
<thead>
<tr>
<th scope="col" class="left">ファイル</th>
<th scope="col" class="left">用途</th>
</tr>
</thead>
<tbody>
<tr>
<td class="left">/etc/pam.d/system-auth</td>
<td class="left">通常のログインで利用する</td>
</tr>

<tr>
<td class="left">/etc/pam.d/su</td>
<td class="left">su user01 でユーザ切り替え時に使われる</td>
</tr>

<tr>
<td class="left">/etc/pam.d/su-l</td>
<td class="left">su - user01 でユーザ切り替え時に使われる</td>
</tr>

<tr>
<td class="left">/etc/pam.d/passwd</td>
<td class="left">passwdコマンドでパスワード変更時に使う</td>
</tr>

<tr>
<td class="left">/etc/pam.d/other</td>
<td class="left">PAMデフォルト設定ファイル</td>
</tr>
</tbody>
</table>

<p>
<code>/etc/pam.d/system-auth</code> 設定例
</p>
<pre class="example">
#%PAM-1.0

auth      sufficient pam_ldap.so     ★LDAP連携用
auth      required  pam_env.so
auth      required  pam_unix.so     try_first_pass nullok
auth      optional  pam_permit.so


account   sufficient pam_ldap.so    ★LDAP連携用
account   required  pam_unix.so
account   optional  pam_permit.so
account   required  pam_time.so

password  sufficient pam_ldap.so    ★LDAP連携用
password  required  pam_unix.so     try_first_pass nullok sha512 shadow
password  optional  pam_permit.so

#ユーザ、グループ単位にリソース制限を行う
session   required  pam_limits.so
session   required  pam_env.so

#ログイン時にホームディレクトリが存在していなければ自動で生成する指定
session   required  pam_mkhomedir.so skel=/etc/skel umask=0077

#ログイン、ログアウト情報をauthログに出力する
session   required  pam_unix.so

session   optional  pam_ldap.so   ★LDAP連携用
session   optional  pam_permit.so
</pre>

<p>
<code>/etc/pam.d/su</code> と <code>/etc/pam.d/su-l</code> 設定例
</p>
<pre class="example">
#%PAM-1.0
auth        sufficient  pam_ldap.so   ★LDAP連携
auth		sufficient	pam_rootok.so
# Uncomment the following line to implicitly trust users in the "wheel" group.
#auth		sufficient	pam_wheel.so trust use_uid
# Uncomment the following line to require a user to be in the "wheel" group.
#auth		required	pam_wheel.so use_uid
auth		required	pam_unix.so use_first_pass   ★use_first_pass→ユーザーから取得済みのパスワードを再利用する

account     sufficient  pam_ldap.so  ★LDAP連携
account		required	pam_unix.so

session     required    pam_mkhomedir.so skel=/etc/skel umask=0022  ★ホームディレクトリを自動作成する
session     sufficient  pam_ldap.so                                 ★LDAP連携
session		required	pam_unix.so
</pre>

<p>
<code>/etc/pam.d/passwd</code> 設定例
</p>
<pre class="example">
#%PAM-1.0
password        sufficient      pam_ldap.so          ★LDAPパスワード変更連携
password        required        pam_cracklib.so retry=3 difok=1 minlen=8 dcredit=-1
password        required        pam_unix.so sha512 shadow nullok use_authtok
</pre>

<p>
<code>/etc/pam.d/other</code> 設定例
</p>
<pre class="example">
#%PAM-1.0
auth            sufficient      pam_ldap.so    ★LDAP連携
auth            required        pam_unix.so

account         sufficient      pam_ldap.so    ★LDAP連携
account         required        pam_unix.so

password        sufficient      pam_ldap.so    ★LDAP連携
password        required        pam_unix.so

session         required        pam_unix.so
</pre>

<p>
初回ログイン時にパスワード変更を求める場合、 <code>other</code> の設定は必須です。
つまり、LDAPユーザエントリの <code>shadowLastChange: 0</code> を運用する時に要注意です。
</p>

<p>
設定しない時の挙動
</p>
<pre class="example">
$ su - user02
パスワード:
need a new password
su: 基礎となる認証モジュールを知らないユーザー         ★新パスワードを求める事ができない、ログインできない
$
</pre>
</div>
</div>

<div id="outline-container-sec-8-3" class="outline-3">
<h3 id="sec-8-3"><span class="section-number-3">8.3</span> パスワード変更時の挙動</h3>
<div class="outline-text-3" id="text-8-3">
<p>
LDAPユーザのパスワード変更は次のような方法があります。
</p>
<table border="2" cellspacing="0" cellpadding="6" rules="groups" frame="hsides">


<colgroup>
<col  class="left" />

<col  class="left" />
</colgroup>
<tbody>
<tr>
<td class="left">LDAPユーザ権限でpasswd</td>
<td class="left">LDAPユーザ自身のパスワードを変更する</td>
</tr>

<tr>
<td class="left">root権限でpasswd</td>
<td class="left">任意のユーザのパスワードを変更する</td>
</tr>

<tr>
<td class="left">ldappasswd</td>
<td class="left">バインドユーザによる変更できる範囲が変わる</td>
</tr>

<tr>
<td class="left">ldapmodify</td>
<td class="left">バインドユーザによる変更できる範囲が変わる</td>
</tr>
</tbody>
</table>
</div>
</div>

<div id="outline-container-sec-8-4" class="outline-3">
<h3 id="sec-8-4"><span class="section-number-3">8.4</span> ログイン時の挙動</h3>
<div class="outline-text-3" id="text-8-4">
<ol class="org-ol">
<li>匿名でユーザエントリ情報を取得する
</li>
<li>ユーザエントリを用いてLDAP認証バインドを行う
</li>
<li>何度もユーザエントリの情報を取得する
</li>
</ol>

<p>
ログイン時LDAPサーバ側のログ
</p>
<pre class="example">
★ユーザID入力後、パスワード入力前
2014-08-16T17:34:16+09:00 pipi local4 debug slapd[21557]:  conn=1001 fd=18 ACCEPT from IP=192.168.100.10:53485 (IP=0.0.0.0:389)
2014-08-16T17:34:16+09:00 pipi local4 debug slapd[21557]:  conn=1001 op=0 BIND dn="" method=128
2014-08-16T17:34:16+09:00 pipi local4 debug slapd[21557]:  conn=1001 op=0 RESULT tag=97 err=0 text=
★★１： LDAP検索条件 objectClassとuidが付与された
2014-08-16T17:34:16+09:00 pipi local4 debug slapd[21557]:  conn=1001 op=1 SRCH base="dc=jizai-domain,dc=jp" scope=2 deref=0 filter="(&amp;(objectClass=posixAccount)(uid=user01))"
2014-08-16T17:34:16+09:00 pipi local4 debug slapd[21557]:  conn=1001 op=1 SRCH attr=loginShell cn gidNumber uidNumber objectClass homeDirectory gecos uid
2014-08-16T17:34:16+09:00 pipi local4 debug slapd[21557]:  conn=1001 op=1 SEARCH RESULT tag=101 err=0 nentries=1 text=

★パスワード入力後
2014-08-16T17:34:28+09:00 pipi local4 debug slapd[21557]:  conn=1001 op=2 SRCH base="dc=jizai-domain,dc=jp" scope=2 deref=0 filter="(&amp;(objectClass=posixAccount)(uid=user01))"
2014-08-16T17:34:28+09:00 pipi local4 debug slapd[21557]:  conn=1001 op=2 SRCH attr=uid uidNumber
2014-08-16T17:34:28+09:00 pipi local4 debug slapd[21557]:  conn=1001 op=2 SEARCH RESULT tag=101 err=0 nentries=1 text=
2014-08-16T17:34:28+09:00 pipi local4 debug slapd[21557]:  conn=1002 fd=19 ACCEPT from IP=192.168.100.10:53487 (IP=0.0.0.0:389)
★★２： ユーザエントリでバインドが行われた
2014-08-16T17:34:28+09:00 pipi local4 debug slapd[21557]:  conn=1002 op=0 BIND dn="uid=user01,ou=User,o=Linux Users,dc=jizai-domain,dc=jp" method=128
2014-08-16T17:34:28+09:00 pipi local4 debug slapd[21557]:  conn=1002 op=0 BIND dn="uid=user01,ou=User,o=Linux Users,dc=jizai-domain,dc=jp" mech=SIMPLE ssf=0
2014-08-16T17:34:28+09:00 pipi local4 debug slapd[21557]:  conn=1002 op=0 RESULT tag=97 err=0 text=
2014-08-16T17:34:28+09:00 pipi local4 debug slapd[21557]:  conn=1002 op=1 SRCH base="uid=user01,ou=User,o=Linux Users,dc=jizai-domain,dc=jp" scope=0 deref=0 filter="(objectClass=*)"
2014-08-16T17:34:28+09:00 pipi local4 debug slapd[21557]:  conn=1002 op=1 SRCH attr=dn
2014-08-16T17:34:28+09:00 pipi local4 debug slapd[21557]:  conn=1002 op=1 SEARCH RESULT tag=101 err=0 nentries=1 text=
2014-08-16T17:34:28+09:00 pipi local4 debug slapd[21557]:  conn=1002 op=2 ABANDON msg=2
2014-08-16T17:34:28+09:00 pipi local4 debug slapd[21557]:  conn=1002 op=3 UNBIND

★★３：パスワード期限などの問い合わせる
2014-08-16T17:34:28+09:00 pipi local4 debug slapd[21557]:  conn=1001 op=3 SRCH base="dc=jizai-domain,dc=jp" scope=2 deref=0 filter="(&amp;(objectClass=shadowAccount)(uid=user01))"
2014-08-16T17:34:28+09:00 pipi local4 debug slapd[21557]:  conn=1001 op=3 SRCH attr=shadowExpire shadowInactive shadowFlag shadowWarning shadowLastChange uid shadowMin shadowMax
2014-08-16T17:34:28+09:00 pipi local4 debug slapd[21557]:  conn=1001 op=3 SEARCH RESULT tag=101 err=0 nentries=1 text=
2014-08-16T17:34:28+09:00 pipi local4 debug slapd[21557]:  conn=1002 fd=19 closed
2014-08-16T17:34:28+09:00 pipi local4 debug slapd[21557]:  conn=1001 op=4 ABANDON msg=4
2014-08-16T17:34:28+09:00 pipi local4 debug slapd[21557]:  conn=1000 op=2 SRCH base="dc=jizai-domain,dc=jp" scope=2 deref=0 filter="(&amp;(objectClass=posixAccount)(uid=user01))"
2014-08-16T17:34:28+09:00 pipi local4 debug slapd[21557]:  conn=1000 op=2 SRCH attr=uid uidNumber
2014-08-16T17:34:28+09:00 pipi local4 debug slapd[21557]:  conn=1000 op=2 SEARCH RESULT tag=101 err=0 nentries=1 text=
2014-08-16T17:34:28+09:00 pipi local4 debug slapd[21557]:  conn=1000 op=3 SRCH base="dc=jizai-domain,dc=jp" scope=2 deref=0 filter="(&amp;(objectClass=shadowAccount)(uid=user01))"
2014-08-16T17:34:28+09:00 pipi local4 debug slapd[21557]:  conn=1000 op=3 SRCH attr=shadowExpire shadowInactive shadowFlag shadowWarning shadowLastChange uid shadowMin shadowMax
2014-08-16T17:34:28+09:00 pipi local4 debug slapd[21557]:  conn=1000 op=3 SEARCH RESULT tag=101 err=0 nentries=1 text=
2014-08-16T17:34:28+09:00 pipi local4 debug slapd[21557]:  conn=1000 op=4 ABANDON msg=4
2014-08-16T17:34:28+09:00 pipi local4 debug slapd[21557]:  conn=1000 op=5 SRCH base="dc=jizai-domain,dc=jp" scope=2 deref=0 filter="(&amp;(objectClass=posixAccount)(uid=user01))"
2014-08-16T17:34:29+09:00 pipi local4 debug slapd[21557]:  conn=1000 op=5 SRCH attr=uid uidNumber
2014-08-16T17:34:29+09:00 pipi local4 debug slapd[21557]:  conn=1000 op=5 SEARCH RESULT tag=101 err=0 nentries=1 text=
2014-08-16T17:34:29+09:00 pipi local4 debug slapd[21557]:  conn=1000 op=6 SRCH base="dc=jizai-domain,dc=jp" scope=2 deref=0 filter="(&amp;(objectClass=posixGroup)(|(memberUid=user01)(member=uid=user01,ou=user,o=linux users,dc=jizai-domain,dc=jp)))"
2014-08-16T17:34:29+09:00 pipi local4 debug slapd[21557]:  conn=1000 op=6 SRCH attr=memberUid cn gidNumber member
2014-08-16T17:34:29+09:00 pipi local4 debug slapd[21557]:  &lt;= bdb_equality_candidates: (member) not indexed
2014-08-16T17:34:29+09:00 pipi local4 debug slapd[21557]:  conn=1000 op=6 SEARCH RESULT tag=101 err=0 nentries=0 text=
</pre>

<p>
LDAPからユーザエントリの検索範囲を限定する方法
</p>
<ul class="org-ul">
<li>DITベースで検索範囲を限定する
</li>
<li>pam_filterで検索結果を絞り込む
</li>
</ul>
</div>
</div>
</div>

<div id="outline-container-sec-9" class="outline-2">
<h2 id="sec-9"><span class="section-number-2">9</span> 宿題</h2>
<div class="outline-text-2" id="text-9">
<ul class="org-ul">
<li>shadowLastChange変更ポリシー
</li>
<li>通信暗号化
</li>
</ul>
</div>
</div>
<div id="outline-container-sec-10" class="outline-2">
<h2 id="sec-10"><span class="section-number-2">10</span> 参考情報</h2>
<div class="outline-text-2" id="text-10">
<ul class="org-ul">
<li>プロのためのLinuxシステムネットワーク管理技術
</li>
</ul>
</div>
</div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[メモ]syslog-ngのログ出力形式の変更]]></title>
    <link href="http://luozengbin.github.io/blog/2014-08-12-%5B%E3%83%A1%E3%83%A2%5Dsyslog-ng%E3%81%AE%E3%83%AD%E3%82%B0%E5%87%BA%E5%8A%9B%E5%BD%A2%E5%BC%8F%E3%81%AE%E5%A4%89%E6%9B%B4.html"/>
    <updated>2014-08-12T00:00:00+09:00</updated>
    <id>http://luozengbin.github.io/blog/[メモ]syslog-ngのログ出力形式の変更</id>
    <content type="html"><![CDATA[<div id="table-of-contents">
<h2>Table of Contents</h2>
<div id="text-table-of-contents">
<ul>
<li><a href="#sec-1">1. デフォルトの出力形式</a></li>
<li><a href="#sec-2">2. 出力形式変更手順</a></li>
<li><a href="#sec-3">3. 参考情報</a></li>
</ul>
</div>
</div>
<p>
Archlinuxでsyslog-ngのデフォルト出力形式は以下のようなイメージになります。ちょっと物
足りない気がして、形式の変更方法を調べてみました。
</p>

<p>
<!-- more -->
</p>

<div id="outline-container-sec-1" class="outline-2">
<h2 id="sec-1"><span class="section-number-2">1</span> デフォルトの出力形式</h2>
<div class="outline-text-2" id="text-1">
<p>
デフォルトの出力形式、 <code>時刻 ホスト名 プロセス名[PID] メッセージ</code>
</p>
<pre class="example">
Aug 12 18:01:01 pipi CROND[19011]: (root) CMD (run-parts /etc/cron.hourly)
Aug 12 19:01:02 pipi CROND[21549]: (root) CMD (run-parts /etc/cron.hourly)
Aug 12 20:01:01 pipi CROND[24082]: (root) CMD (run-parts /etc/cron.hourly)
Aug 12 21:01:01 pipi CROND[26609]: (root) CMD (run-parts /etc/cron.hourly)
Aug 12 22:01:01 pipi CROND[29189]: (root) CMD (run-parts /etc/cron.hourly)
Aug 12 22:14:00 pipi slapd[172]: conn=1015 fd=10 ACCEPT from IP=[::1]:58536 (IP=[::]:389)
Aug 12 22:14:00 pipi slapd[172]: conn=1015 op=0 BIND dn="cn=Manager,dc=jizai-domain,dc=jp" method=128
Aug 12 22:14:00 pipi slapd[172]: conn=1015 op=0 BIND dn="cn=Manager,dc=jizai-domain,dc=jp" mech=SIMPLE ssf=0
Aug 12 22:14:00 pipi slapd[172]: conn=1015 op=0 RESULT tag=97 err=0 text=
Aug 12 22:14:00 pipi slapd[172]: conn=1015 op=1 SRCH base="dc=jizai-domain,dc=jp" scope=2 deref=0 filter="(uid=user01)"
Aug 12 22:14:01 pipi slapd[172]: &lt;= bdb_equality_candidates: (uid) not indexed
Aug 12 22:14:01 pipi slapd[172]: conn=1015 op=2 UNBIND
Aug 12 22:14:01 pipi slapd[172]: conn=1015 op=1 SEARCH RESULT tag=101 err=0 nentries=1 text=
Aug 12 22:14:01 pipi slapd[172]: conn=1015 fd=10 closed
Aug 12 11:10:21 pipi systemd[1131]: Reached target Default.
Aug 12 11:10:21 pipi systemd[1131]: Startup finished in 227ms.
Aug 12 11:10:21 pipi systemd[1]: Started User Manager for UID 1000.
Aug 12 11:10:23 pipi systemd[1]: Starting Session c2 of user akira.
Aug 12 11:10:23 pipi systemd[1]: Started Session c2 of user akira.
</pre>
</div>
</div>

<div id="outline-container-sec-2" class="outline-2">
<h2 id="sec-2"><span class="section-number-2">2</span> 出力形式変更手順</h2>
<div class="outline-text-2" id="text-2">
<p>
syslog-ngに <code>template</code> の定義にマクロを用いることができる。このマクロ機能を利用してロ
グ出力形式をカスタマイズすることを実現する。以下は <code>everything.log</code> を例として設定変更
の手順を紹介します。
</p>

<p>
<code>/etc/syslog-ng/syslog-ng.conf</code> 変更前
</p>
<pre class="example">
source src {
  system();
  internal();
};

destination d_everything { file("/var/log/everything.log"); };

filter f_everything { level(debug..emerg) and not facility(auth, authpriv); };

log { source(src); filter(f_everything); destination(d_everything); };
</pre>

<p>
<code>template</code> 定義を追加して、 <code>destination</code> にテンプレートと紐付ける。
</p>
<pre class="example">
source src {
  system();
  internal();
};

template t_1 {
        template("$ISODATE $FULLHOST $FACILITY $PRIORITY $MSGHDR $MSG\n"); templat$
};

destination d_everything { file("/var/log/everything.log" template(t_1)); };

filter f_everything { level(debug..emerg) and not facility(auth, authpriv); };

log { source(src); filter(f_everything); destination(d_everything); };
</pre>

<p>
<code>sudo systemctl restart syslog-ng.service</code> でサービスを再起動して、ログの出力を確認知
すると出力形式が以下のようになります。
</p>

<pre class="example">
2014-08-12T22:34:19+09:00 pipi syslog syslog-ng[31533] notice syslog-ng starting up; version='3.5.5'
2014-08-12T22:34:18+09:00 pipi daemon systemd[1] info Starting System Logger Daemon...
2014-08-12T22:34:19+09:00 pipi daemon systemd[1] info Started System Logger Daemon.
2014-08-12T22:34:32+09:00 pipi local4 slapd[172] debug conn=1019 fd=10 ACCEPT from IP=[::1]:58540 (IP=[::]:389)
2014-08-12T22:34:32+09:00 pipi local4 slapd[172] debug conn=1019 op=0 BIND dn="cn=Manager,dc=jizai-domain,dc=jp" method=128
2014-08-12T22:34:32+09:00 pipi local4 slapd[172] debug conn=1019 op=0 BIND dn="cn=Manager,dc=jizai-domain,dc=jp" mech=SIMPLE ssf=0
2014-08-12T22:34:32+09:00 pipi local4 slapd[172] debug conn=1019 op=0 RESULT tag=97 err=0 text=
2014-08-12T22:34:32+09:00 pipi local4 slapd[172] debug conn=1019 op=1 SRCH base="dc=jizai-domain,dc=jp" scope=2 deref=0 filter="(uid=user01)"
2014-08-12T22:34:32+09:00 pipi local4 slapd[172] debug &lt;= bdb_equality_candidates: (uid) not indexed
2014-08-12T22:34:32+09:00 pipi local4 slapd[172] debug conn=1019 op=2 UNBIND
2014-08-12T22:34:32+09:00 pipi local4 slapd[172] debug conn=1019 op=1 SEARCH RESULT tag=101 err=0 nentries=1 text=
2014-08-12T22:34:32+09:00 pipi local4 slapd[172] debug conn=1019 fd=10 closed
</pre>
</div>
</div>

<div id="outline-container-sec-3" class="outline-2">
<h2 id="sec-3"><span class="section-number-2">3</span> 参考情報</h2>
<div class="outline-text-2" id="text-3">
<ul class="org-ul">
<li><a href="http://www.atmarkit.co.jp/ait/articles/0809/22/news116_2.html">マクロやテンプレでsyslog-ngを使い倒す (2/3)</a>
</li>
<li><a href="http://www.balabit.com/sites/default/files/documents/syslog-ng-ose-3.3-guides/en/syslog-ng-ose-v3.3-guide-admin-en/html/reference_macros.html#macro_priority">The syslog-ng Open Source Edition 3.3 Administrator Guide</a>
</li>
</ul>
</div>
</div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[メモ]findでファイル更新日付順で表示する]]></title>
    <link href="http://luozengbin.github.io/blog/2014-08-07-%5B%E3%83%A1%E3%83%A2%5Dfind%E3%81%A7%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E6%9B%B4%E6%96%B0%E6%97%A5%E4%BB%98%E9%A0%86%E3%81%A7%E8%A1%A8%E7%A4%BA%E3%81%99%E3%82%8B.html"/>
    <updated>2014-08-07T00:00:00+09:00</updated>
    <id>http://luozengbin.github.io/blog/[メモ]findでファイル更新日付順で表示する</id>
    <content type="html"><![CDATA[<p>
PJではメンバたち日々の作業成果物がどこかの共有ディレクトリに格納されているでしょう。
共有ディレクトリに最近更新や追加されたファイルを見たい時がよくあることです。
いちいち作業担当者に聞くのもうざいので。 <code>find</code> 、 <code>xargs</code> コマンドを駆使して実現して
みた。
</p>

<pre class="example">
$ find . -type f -print0 | xargs -0 ls -alt
</pre>

<ul class="org-ul">
<li><code>find -type f</code> はファイルのみを対象とする
</li>
<li><code>find -print0</code> は検出されたファイルのフルパスをNULLキャラクターで分割して出力する
</li>
<li><code>xargs -0</code> もしくは <code>xargs --null</code> 入力ストリームの分割はNULLキャラクターを用いる
</li>
</ul>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[検証]ArchlinuxにJenkins導入]]></title>
    <link href="http://luozengbin.github.io/blog/2014-07-31-%5B%E6%A4%9C%E8%A8%BC%5Darchlinux%E3%81%ABjenkins%E5%B0%8E%E5%85%A5.html"/>
    <updated>2014-07-31T00:00:00+09:00</updated>
    <id>http://luozengbin.github.io/blog/[検証]archlinuxにjenkins導入</id>
    <content type="html"><![CDATA[<div id="table-of-contents">
<h2>Table of Contents</h2>
<div id="text-table-of-contents">
<ul>
<li><a href="#sec-1">1. インストール</a></li>
<li><a href="#sec-2">2. パッケージ構成</a></li>
<li><a href="#sec-3">3. 設定ファイル</a></li>
<li><a href="#sec-4">4. サービス制御ファイル</a></li>
<li><a href="#sec-5">5. サービス実行アカウントの確認</a></li>
<li><a href="#sec-6">6. サービスを起動してみる</a></li>
<li><a href="#sec-7">7. 次やりたいこと</a></li>
</ul>
</div>
</div>
<p>
久々Jenkinsを触っていないので、今回Archlinux入れて検証したいと思います。
</p>

<p>
<!-- more -->
</p>

<div id="outline-container-sec-1" class="outline-2">
<h2 id="sec-1"><span class="section-number-2">1</span> インストール</h2>
<div class="outline-text-2" id="text-1">
<p>
<code>pacman</code> コマンド一発です。
</p>
<pre class="example">
$ sudo pacman -S jenkins
[sudo] password for akira: 
依存関係を解決しています...
相互衝突をチェックしています...

パッケージ (1): jenkins-1.574-1

Total Download Size:    56.23 MiB
Total Installed Size:   64.72 MiB

:: インストールを行いますか？ [Y/n] 
:: パッケージを取得します ...
 jenkins-1.574-1-any                                                                                 56.2 MiB  1149K/s 00:50 [############################################################################] 100%
(1/1) キーリングのキーを確認                                                                                                 [############################################################################] 100%
(1/1) パッケージの整合性をチェック                                                                                           [############################################################################] 100%
(1/1) パッケージファイルのロード                                                                                             [############################################################################] 100%
(1/1) ファイルの衝突をチェック                                                                                               [############################################################################] 100%
(1/1) 空き容量を確認                                                                                                         [############################################################################] 100%
(1/1) インストール jenkins                                                                                                   [############################################################################] 100%
This installation of Jenkins uses port 8090 by default.
</pre>
<p>
デフォルトポートが <code>8090</code> って言っています！
</p>
</div>
</div>

<div id="outline-container-sec-2" class="outline-2">
<h2 id="sec-2"><span class="section-number-2">2</span> パッケージ構成</h2>
<div class="outline-text-2" id="text-2">
<pre class="example">
$ pacman -Ql jenkins
jenkins /etc/
jenkins /etc/conf.d/
jenkins /etc/conf.d/jenkins                     ★Jenkins起動パラメータの設定ファイル
jenkins /usr/
jenkins /usr/lib/
jenkins /usr/lib/systemd/
jenkins /usr/lib/systemd/system/
jenkins /usr/lib/systemd/system/jenkins.service ★サービス実行制御ファイル
jenkins /usr/lib/tmpfiles.d/
jenkins /usr/lib/tmpfiles.d/jenkins.conf        ★謎う？
jenkins /usr/share/
jenkins /usr/share/java/
jenkins /usr/share/java/jenkins/
jenkins /usr/share/java/jenkins/jenkins.war     ★Jenkins本体
jenkins /usr/share/licenses/
jenkins /usr/share/licenses/jenkins/
jenkins /usr/share/licenses/jenkins/LICENSE     ★MITライセンスファイル
</pre>
</div>
</div>

<div id="outline-container-sec-3" class="outline-2">
<h2 id="sec-3"><span class="section-number-2">3</span> 設定ファイル</h2>
<div class="outline-text-2" id="text-3">
<div class="org-src-container">

<pre class="src src-sh"><span style="color: #ff6347;">JAVA</span>=/usr/bin/java
<span style="color: #ff6347;">JAVA_ARGS</span>=-Xmx512m
<span style="color: #ff6347;">JAVA_OPTS</span>=
<span style="color: #ff6347;">JENKINS_USER</span>=jenkins
<span style="color: #ff6347;">JENKINS_HOME</span>=/var/lib/jenkins                   &#9733;Jenkins&#12518;&#12540;&#12470;&#12398;&#12507;&#12540;&#12512;&#12487;&#12451;&#12524;&#12463;&#12488;&#12522;(&#12503;&#12521;&#12464;&#12452;&#12531;&#12289;&#12472;&#12519;&#12502;&#23450;&#32681;&#12394;&#12393;)
<span style="color: #ff6347;">JENKINS_WAR</span>=/usr/share/java/jenkins/jenkins.war
<span style="color: #ff6347;">JENKINS_WEBROOT</span>=--webroot=/var/cache/jenkins    &#9733;&#23455;&#34892;&#26178;&#12395;WAR&#12364;&#12371;&#12371;&#12395;&#23637;&#38283;&#12373;&#12428;&#12427;
<span style="color: #ff6347;">JENKINS_PORT</span>=--httpPort=8090
<span style="color: #ff6347;">JENKINS_AJPPORT</span>=--ajp13Port=-1
<span style="color: #ff6347;">JENKINS_OPTS</span>=
<span style="color: #ff6347;">JENKINS_COMMAND_LINE</span>=<span style="color: #ad7fa8; font-style: italic;">"$JAVA $JAVA_ARGS $JAVA_OPTS -jar $JENKINS_WAR $JENKINS_WEBROOT $JENKINS_PORT $JENKINS_AJPPORT $JENKINS_OPTS"</span>

<span style="color: #888a85;"># </span><span style="color: #888a85;">vim:set ts=2 sw=2 et:</span>
</pre>
</div>
</div>
</div>

<div id="outline-container-sec-4" class="outline-2">
<h2 id="sec-4"><span class="section-number-2">4</span> サービス制御ファイル</h2>
<div class="outline-text-2" id="text-4">
<div class="org-src-container">

<pre class="src src-sh">$ cat /usr/lib/systemd/system/jenkins.service
[Unit]
<span style="color: #ff6347;">Description</span>=Extendable continuous integration server
<span style="color: #ff6347;">After</span>=network.target

[Service]
<span style="color: #ff6347;">User</span>=jenkins                                 &#9733;&#12469;&#12540;&#12499;&#12473;&#12398;&#23455;&#34892;&#12518;&#12540;&#12470;
<span style="color: #ff6347;">Type</span>=simple
<span style="color: #ff6347;">EnvironmentFile</span>=/etc/conf.d/jenkins
<span style="color: #ff6347;">StandardOutput</span>=syslog                        &#9733;&#27161;&#28310;&#12525;&#12464;&#20986;&#21147;&#20808;
<span style="color: #ff6347;">StandardError</span>=syslog                         &#9733;&#27161;&#28310;&#12456;&#12521;&#12540;&#12525;&#12464;&#20986;&#21147;&#20808;
<span style="color: #ff6347;">SyslogIdentifier</span>=jenkins                     &#9733;&#12471;&#12473;&#12486;&#12512;&#12459;&#12486;&#12468;&#12522;&#21517;
<span style="color: #ff6347;">ExecStart</span>=/bin/sh -c <span style="color: #ad7fa8; font-style: italic;">'eval $JENKINS_COMMAND_LINE'</span>
<span style="color: #888a85;">#</span><span style="color: #888a85;">MemoryLimit=768M</span>
<span style="color: #ff6347;">OOMScoreAdjust</span>=-1000
<span style="color: #ff6347;">LimitCPU</span>=infinity
<span style="color: #ff6347;">LimitFSIZE</span>=infinity
<span style="color: #ff6347;">LimitDATA</span>=infinity
<span style="color: #ff6347;">LimitCORE</span>=0
<span style="color: #ff6347;">LimitAS</span>=infinity
<span style="color: #ff6347;">LimitLOCKS</span>=infinity

[Install]
<span style="color: #ff6347;">WantedBy</span>=multi-user.target
</pre>
</div>
</div>
</div>

<div id="outline-container-sec-5" class="outline-2">
<h2 id="sec-5"><span class="section-number-2">5</span> サービス実行アカウントの確認</h2>
<div class="outline-text-2" id="text-5">
<pre class="example">
$ cat /etc/passwd
jenkins:x:997:996::/var/lib/jenkins:/bin/bash
</pre>
</div>
</div>
<div id="outline-container-sec-6" class="outline-2">
<h2 id="sec-6"><span class="section-number-2">6</span> サービスを起動してみる</h2>
<div class="outline-text-2" id="text-6">
<p>
起動コマンド
</p>
<pre class="example">
$ sudo systemctl start jenkins
</pre>

<p>
シスログ
</p>
<pre class="example">
$ sudo tail -f /var/log/everything.log
Jul 31 09:18:00 hakusai systemd[1]: Starting Extendable continuous integration server...
Jul 31 09:18:00 hakusai systemd[1]: Started Extendable continuous integration server.
Jul 31 09:18:02 hakusai jenkins[30946]: Running from: /usr/share/java/jenkins/jenkins.war
Jul 31 09:18:02 hakusai jenkins[30946]: 7 31, 2014 9:18:02 午前 winstone.Logger logInternal
Jul 31 09:18:02 hakusai jenkins[30946]: 情報: Beginning extraction from war file
Jul 31 09:18:03 hakusai jenkins[30946]: 7 31, 2014 9:18:03 午前 org.eclipse.jetty.util.log.JavaUtilLog info
Jul 31 09:18:03 hakusai jenkins[30946]: 情報: jetty-8.y.z-SNAPSHOT
Jul 31 09:18:05 hakusai jenkins[30946]: 7 31, 2014 9:18:05 午前 org.eclipse.jetty.util.log.JavaUtilLog info
Jul 31 09:18:05 hakusai jenkins[30946]: 情報: NO JSP Support for , did not find org.apache.jasper.servlet.JspServlet
Jul 31 09:18:06 hakusai jenkins[30946]: Jenkins home directory: /var/lib/jenkins found at: EnvVars.masterEnvVars.get("JENKINS_HOME")
Jul 31 09:18:06 hakusai jenkins[30946]: 7 31, 2014 9:18:06 午前 org.eclipse.jetty.util.log.JavaUtilLog info
Jul 31 09:18:06 hakusai jenkins[30946]: 情報: Started SelectChannelConnector@0.0.0.0:8090
Jul 31 09:18:06 hakusai jenkins[30946]: 7 31, 2014 9:18:06 午前 winstone.Logger logInternal
Jul 31 09:18:06 hakusai jenkins[30946]: 情報: Winstone Servlet Engine v2.0 running: controlPort=disabled
Jul 31 09:18:07 hakusai jenkins[30946]: 7 31, 2014 9:18:07 午前 jenkins.InitReactorRunner$1 onAttained
Jul 31 09:18:07 hakusai jenkins[30946]: 情報: Started initialization
Jul 31 09:18:14 hakusai jenkins[30946]: 7 31, 2014 9:18:14 午前 jenkins.InitReactorRunner$1 onAttained
Jul 31 09:18:14 hakusai jenkins[30946]: 情報: Listed all plugins
Jul 31 09:18:14 hakusai jenkins[30946]: 7 31, 2014 9:18:14 午前 jenkins.InitReactorRunner$1 onAttained
Jul 31 09:18:14 hakusai jenkins[30946]: 情報: Prepared all plugins
Jul 31 09:18:14 hakusai jenkins[30946]: 7 31, 2014 9:18:14 午前 jenkins.InitReactorRunner$1 onAttained
Jul 31 09:18:14 hakusai jenkins[30946]: 情報: Started all plugins
Jul 31 09:18:14 hakusai jenkins[30946]: 7 31, 2014 9:18:14 午前 jenkins.InitReactorRunner$1 onAttained
Jul 31 09:18:14 hakusai jenkins[30946]: 情報: Augmented all extensions
Jul 31 09:18:14 hakusai jenkins[30946]: 7 31, 2014 9:18:14 午前 jenkins.InitReactorRunner$1 onAttained
Jul 31 09:18:14 hakusai jenkins[30946]: 情報: Loaded all jobs
Jul 31 09:18:17 hakusai jenkins[30946]: 7 31, 2014 9:18:17 午前 org.jenkinsci.main.modules.sshd.SSHD start
Jul 31 09:18:17 hakusai jenkins[30946]: 情報: Started SSHD at port 42690
Jul 31 09:18:17 hakusai jenkins[30946]: 7 31, 2014 9:18:17 午前 jenkins.InitReactorRunner$1 onAttained
Jul 31 09:18:17 hakusai jenkins[30946]: 情報: Completed initialization
Jul 31 09:18:17 hakusai jenkins[30946]: 7 31, 2014 9:18:17 午前 hudson.WebAppMain$3 run
Jul 31 09:18:17 hakusai jenkins[30946]: 情報: Jenkins is fully up and running
</pre>

<p>
起動後 <code>/var/lib/jenkins</code> ディレクトリの様子
</p>
<pre class="example">
/var/lib/jenkins
├── Fingerprint cleanup.log
├── hudson.model.UpdateCenter.xml
├── identity.key.enc
├── jobs
├── nodeMonitors.xml
├── plugins
│   ├── ant
│   │   ├── META-INF
│   │   │   ├── MANIFEST.MF
│   │   │   └── maven
│   │   │       └── org.jenkins-ci.plugins
│   │   │           └── ant
│   │   │               ├── pom.properties
│   │   │               └── pom.xml
│   │   └── WEB-INF
│   │       ├── lib
│   │       │   └── classes.jar
│   │       └── licenses.xml
│   ├── ant.jpi
│   ├── antisamy-markup-formatter
│   │   ├── META-INF
│   │   │   ├── MANIFEST.MF
│   │   │   └── maven
│   │   │       └── org.jenkins-ci.plugins
│   │   │           └── antisamy-markup-formatter
│   │   │               ├── pom.properties
│   │   │               └── pom.xml
│   │   └── WEB-INF
│   │       ├── lib
│   │       │   ├── antisamy-markup-formatter.jar
│   │       │   └── owasp-html-sanitizer-r88.jar
│   │       └── licenses.xml
│   ├── antisamy-markup-formatter.jpi
│   ├── credentials
│   │   ├── META-INF
│   │   │   ├── MANIFEST.MF
│   │   │   └── maven
│   │   │       └── org.jenkins-ci.plugins
│   │   │           └── credentials
│   │   │               ├── pom.properties
│   │   │               └── pom.xml
│   │   ├── WEB-INF
│   │   │   ├── lib
│   │   │   │   ├── classes.jar
│   │   │   │   ├── findbugs-annotations-1.3.9-1.jar
│   │   │   │   ├── jcip-annotations-1.0.jar
│   │   │   │   └── jsr305-1.3.9.jar
│   │   │   └── licenses.xml
│   │   ├── help
│   │   │   └── domain
│   │   │       ├── description.html
│   │   │       ├── description_ja.html
│   │   │       ├── name.html
│   │   │       ├── name_ja.html
│   │   │       ├── specification.html
│   │   │       └── specification_ja.html
│   │   └── images
│   │       ├── 16x16
│   │       │   ├── credential.png
│   │       │   ├── credentials.png
│   │       │   ├── domain.png
│   │       │   ├── new-credential.png
│   │       │   └── new-domain.png
│   │       ├── 24x24
│   │       │   ├── credential.png
│   │       │   ├── credentials.png
│   │       │   ├── domain.png
│   │       │   ├── new-credential.png
│   │       │   └── new-domain.png
│   │       ├── 32x32
│   │       │   ├── credential.png
│   │       │   ├── credentials.png
│   │       │   ├── domain.png
│   │       │   ├── new-credential.png
│   │       │   └── new-domain.png
│   │       └── 48x48
│   │           ├── credential.png
│   │           ├── credentials.png
│   │           ├── domain.png
│   │           ├── new-credential.png
│   │           └── new-domain.png
│   ├── credentials.jpi
│   ├── cvs
│   │   ├── META-INF
│   │   │   ├── MANIFEST.MF
│   │   │   └── maven
│   │   │       └── org.jenkins-ci.plugins
│   │   │           └── cvs
│   │   │               ├── pom.properties
│   │   │               └── pom.xml
│   │   └── WEB-INF
│   │       ├── lib
│   │       │   ├── classes.jar
│   │       │   ├── cvsclient-71-jenkins-11.jar
│   │       │   └── jsch-0.1.50.jar
│   │       └── licenses.xml
│   ├── cvs.jpi
│   ├── external-monitor-job
│   │   ├── META-INF
│   │   │   ├── MANIFEST.MF
│   │   │   └── maven
│   │   │       └── org.jenkins-ci.plugins
│   │   │           └── external-monitor-job
│   │   │               ├── pom.properties
│   │   │               └── pom.xml
│   │   └── WEB-INF
│   │       ├── lib
│   │       │   └── classes.jar
│   │       └── licenses.xml
│   ├── external-monitor-job.jpi
│   ├── javadoc
│   │   ├── META-INF
│   │   │   ├── MANIFEST.MF
│   │   │   └── maven
│   │   │       └── org.jenkins-ci.plugins
│   │   │           └── javadoc
│   │   │               ├── pom.properties
│   │   │               └── pom.xml
│   │   └── WEB-INF
│   │       ├── lib
│   │       │   └── classes.jar
│   │       └── licenses.xml
│   ├── javadoc.jpi
│   ├── ldap
│   │   ├── META-INF
│   │   │   ├── MANIFEST.MF
│   │   │   └── maven
│   │   │       └── org.jenkins-ci.plugins
│   │   │           └── ldap
│   │   │               ├── pom.properties
│   │   │               └── pom.xml
│   │   ├── WEB-INF
│   │   │   ├── lib
│   │   │   │   └── classes.jar
│   │   │   └── licenses.xml
│   │   ├── help-cache.html
│   │   ├── help-groupMembershipFilter.html
│   │   └── help-groupSearchFilter.html
│   ├── ldap.jpi
│   ├── mailer
│   │   ├── META-INF
│   │   │   ├── MANIFEST.MF
│   │   │   └── maven
│   │   │       └── org.jenkins-ci.plugins
│   │   │           └── mailer
│   │   │               ├── pom.properties
│   │   │               └── pom.xml
│   │   └── WEB-INF
│   │       ├── lib
│   │       │   └── classes.jar
│   │       └── licenses.xml
│   ├── mailer.jpi
│   ├── matrix-auth
│   │   ├── META-INF
│   │   │   ├── MANIFEST.MF
│   │   │   └── maven
│   │   │       └── org.jenkins-ci.plugins
│   │   │           └── matrix-auth
│   │   │               ├── pom.properties
│   │   │               └── pom.xml
│   │   └── WEB-INF
│   │       ├── lib
│   │       │   └── classes.jar
│   │       └── licenses.xml
│   ├── matrix-auth.jpi
│   ├── matrix-project
│   │   ├── META-INF
│   │   │   ├── MANIFEST.MF
│   │   │   └── maven
│   │   │       └── org.jenkins-ci.plugins
│   │   │           └── matrix-project
│   │   │               ├── pom.properties
│   │   │               └── pom.xml
│   │   ├── WEB-INF
│   │   │   ├── lib
│   │   │   │   └── matrix-project.jar
│   │   │   └── licenses.xml
│   │   └── help
│   │       └── matrix
│   │           ├── axes.html
│   │           ├── axes_de.html
│   │           ├── axes_fr.html
│   │           ├── axes_ja.html
│   │           ├── axes_nl.html
│   │           ├── axes_pt_BR.html
│   │           ├── axes_ru.html
│   │           ├── axes_tr.html
│   │           ├── axes_zh_TW.html
│   │           ├── combinationfilter.html
│   │           ├── combinationfilter_de.html
│   │           ├── combinationfilter_fr.html
│   │           ├── combinationfilter_ja.html
│   │           ├── combinationfilter_zh_TW.html
│   │           ├── jdk.html
│   │           ├── jdk_de.html
│   │           ├── jdk_fr.html
│   │           ├── jdk_ja.html
│   │           ├── jdk_nl.html
│   │           ├── jdk_pt_BR.html
│   │           ├── jdk_ru.html
│   │           ├── jdk_tr.html
│   │           └── jdk_zh_TW.html
│   ├── matrix-project.jpi
│   ├── maven-plugin
│   │   ├── META-INF
│   │   │   ├── MANIFEST.MF
│   │   │   └── maven
│   │   │       └── org.jenkins-ci.main
│   │   │           └── maven-plugin
│   │   │               ├── pom.properties
│   │   │               └── pom.xml
│   │   ├── WEB-INF
│   │   │   ├── lib
│   │   │   │   ├── aether-api-0.9.0.M3.jar
│   │   │   │   ├── aether-connector-wagon-0.9.0.M2.jar
│   │   │   │   ├── aether-impl-0.9.0.M3.jar
│   │   │   │   ├── aether-spi-0.9.0.M3.jar
│   │   │   │   ├── aether-transport-wagon-0.9.0.M3.jar
│   │   │   │   ├── aether-util-0.9.0.M3.jar
│   │   │   │   ├── ant-1.9.2.jar
│   │   │   │   ├── ant-launcher-1.9.2.jar
│   │   │   │   ├── aopalliance-1.0.jar
│   │   │   │   ├── cdi-api-1.0.jar
│   │   │   │   ├── classes.jar
│   │   │   │   ├── commons-cli-1.2.jar
│   │   │   │   ├── commons-codec-1.6.jar
│   │   │   │   ├── commons-httpclient-3.1.jar
│   │   │   │   ├── commons-io-2.2.jar
│   │   │   │   ├── commons-lang-2.6.jar
│   │   │   │   ├── commons-logging-1.1.1.jar
│   │   │   │   ├── commons-net-3.1.jar
│   │   │   │   ├── doxia-sink-api-1.0.jar
│   │   │   │   ├── guava-11.0.1.jar
│   │   │   │   ├── guice-4.0-beta.jar
│   │   │   │   ├── httpclient-4.2.5.jar
│   │   │   │   ├── httpcore-4.2.4.jar
│   │   │   │   ├── jackrabbit-webdav-2.5.2.jar
│   │   │   │   ├── javax.inject-1.jar
│   │   │   │   ├── jsch-0.1.44-1.jar
│   │   │   │   ├── jsoup-1.7.1.jar
│   │   │   │   ├── jsr250-api-1.0.jar
│   │   │   │   ├── jsr305-1.3.9.jar
│   │   │   │   ├── lib-jenkins-maven-artifact-manager-1.2.jar
│   │   │   │   ├── lib-jenkins-maven-embedder-3.11.jar
│   │   │   │   ├── maven-aether-provider-3.1.0.jar
│   │   │   │   ├── maven-agent-1.5.jar
│   │   │   │   ├── maven-artifact-3.1.0.jar
│   │   │   │   ├── maven-compat-3.1.0.jar
│   │   │   │   ├── maven-core-3.1.0.jar
│   │   │   │   ├── maven-embedder-3.1.0.jar
│   │   │   │   ├── maven-interceptor-1.5.jar
│   │   │   │   ├── maven-model-3.1.0.jar
│   │   │   │   ├── maven-model-builder-3.1.0.jar
│   │   │   │   ├── maven-plugin-api-3.1.0.jar
│   │   │   │   ├── maven-reporting-api-3.0.jar
│   │   │   │   ├── maven-repository-metadata-3.1.0.jar
│   │   │   │   ├── maven-settings-3.1.0.jar
│   │   │   │   ├── maven-settings-builder-3.1.0.jar
│   │   │   │   ├── maven2.1-interceptor-1.2.jar
│   │   │   │   ├── maven3-agent-1.5.jar
│   │   │   │   ├── maven3-interceptor-1.5.jar
│   │   │   │   ├── maven3-interceptor-commons-1.5.jar
│   │   │   │   ├── maven31-agent-1.5.jar
│   │   │   │   ├── maven31-interceptor-1.5.jar
│   │   │   │   ├── org.eclipse.sisu.inject-0.0.0.M5.jar
│   │   │   │   ├── org.eclipse.sisu.plexus-0.0.0.M5.jar
│   │   │   │   ├── plexus-cipher-1.7.jar
│   │   │   │   ├── plexus-classworlds-2.5.1.jar
│   │   │   │   ├── plexus-component-annotations-1.5.5.jar
│   │   │   │   ├── plexus-interactivity-api-1.0-alpha-6.jar
│   │   │   │   ├── plexus-interpolation-1.16.jar
│   │   │   │   ├── plexus-sec-dispatcher-1.3.jar
│   │   │   │   ├── plexus-utils-3.0.10.jar
│   │   │   │   ├── slf4j-api-1.7.4.jar
│   │   │   │   ├── wagon-file-2.4.jar
│   │   │   │   ├── wagon-ftp-2.4.jar
│   │   │   │   ├── wagon-http-2.4.jar
│   │   │   │   ├── wagon-http-shared-2.4.jar
│   │   │   │   ├── wagon-http-shared4-2.4.jar
│   │   │   │   ├── wagon-provider-api-2.4.jar
│   │   │   │   ├── wagon-ssh-2.4.jar
│   │   │   │   ├── wagon-ssh-common-2.4.jar
│   │   │   │   ├── wagon-ssh-external-2.4.jar
│   │   │   │   └── wagon-webdav-jackrabbit-2.4.jar
│   │   │   └── licenses.xml
│   │   ├── aggregator.html
│   │   ├── aggregator_de.html
│   │   ├── aggregator_fr.html
│   │   ├── aggregator_ja.html
│   │   ├── aggregator_pt_BR.html
│   │   ├── aggregator_ru.html
│   │   ├── aggregator_tr.html
│   │   ├── aggregator_zh_TW.html
│   │   ├── archivingDisabled.html
│   │   ├── archivingDisabled_de.html
│   │   ├── archivingDisabled_ja.html
│   │   ├── archivingDisabled_zh_TW.html
│   │   ├── downstreamDisabled.html
│   │   ├── downstreamDisabled_de.html
│   │   ├── downstreamDisabled_ja.html
│   │   ├── downstreamDisabled_zh_TW.html
│   │   ├── fingerprintingDisabled.html
│   │   ├── goals.html
│   │   ├── goals_de.html
│   │   ├── goals_fr.html
│   │   ├── goals_ja.html
│   │   ├── goals_pt_BR.html
│   │   ├── goals_ru.html
│   │   ├── goals_tr.html
│   │   ├── goals_zh_TW.html
│   │   ├── ignore-upstrem-changes.html
│   │   ├── ignore-upstrem-changes_de.html
│   │   ├── ignore-upstrem-changes_fr.html
│   │   ├── ignore-upstrem-changes_ja.html
│   │   ├── ignore-upstrem-changes_zh_TW.html
│   │   ├── incremental.html
│   │   ├── incremental_de.html
│   │   ├── incremental_zh_TW.html
│   │   ├── maven-opts.html
│   │   ├── maven-opts_de.html
│   │   ├── maven-opts_fr.html
│   │   ├── maven-opts_ja.html
│   │   ├── maven-opts_pt_BR.html
│   │   ├── maven-opts_ru.html
│   │   ├── maven-opts_tr.html
│   │   ├── maven-opts_zh_CN.html
│   │   ├── maven-opts_zh_TW.html
│   │   ├── module-goals.html
│   │   ├── module-goals_de.html
│   │   ├── module-goals_fr.html
│   │   ├── module-goals_ja.html
│   │   ├── module-goals_pt_BR.html
│   │   ├── module-goals_ru.html
│   │   ├── module-goals_tr.html
│   │   ├── module-goals_zh_TW.html
│   │   ├── per-module-email.html
│   │   ├── per-module-email_de.html
│   │   ├── per-module-email_ja.html
│   │   ├── per-module-email_zh_TW.html
│   │   ├── private-repository.html
│   │   ├── private-repository_de.html
│   │   ├── private-repository_fr.html
│   │   ├── private-repository_ja.html
│   │   ├── private-repository_tr.html
│   │   ├── private-repository_zh_TW.html
│   │   ├── root-pom.html
│   │   ├── root-pom_de.html
│   │   ├── root-pom_fr.html
│   │   ├── root-pom_ja.html
│   │   ├── root-pom_pt_BR.html
│   │   ├── root-pom_ru.html
│   │   ├── root-pom_tr.html
│   │   ├── root-pom_zh_TW.html
│   │   ├── run-headless.html
│   │   ├── run-headless_de.html
│   │   ├── run-headless_fr.html
│   │   ├── run-headless_ja.html
│   │   ├── run-headless_zh_TW.html
│   │   ├── siteArchivingDisabled.html
│   │   └── siteArchivingDisabled_de.html
│   ├── maven-plugin.jpi
│   ├── pam-auth
│   │   ├── META-INF
│   │   │   ├── MANIFEST.MF
│   │   │   └── maven
│   │   │       └── org.jenkins-ci.plugins
│   │   │           └── pam-auth
│   │   │               ├── pom.properties
│   │   │               └── pom.xml
│   │   └── WEB-INF
│   │       ├── lib
│   │       │   ├── classes.jar
│   │       │   ├── jna-3.4.0.jar
│   │       │   └── libpam4j-1.6.jar
│   │       └── licenses.xml
│   ├── pam-auth.jpi
│   ├── ssh-credentials
│   │   ├── META-INF
│   │   │   ├── MANIFEST.MF
│   │   │   └── maven
│   │   │       └── org.jenkins-ci.plugins
│   │   │           └── ssh-credentials
│   │   │               ├── pom.properties
│   │   │               └── pom.xml
│   │   └── WEB-INF
│   │       ├── lib
│   │       │   └── classes.jar
│   │       └── licenses.xml
│   ├── ssh-credentials.jpi
│   ├── ssh-slaves
│   │   ├── META-INF
│   │   │   ├── MANIFEST.MF
│   │   │   └── maven
│   │   │       └── org.jenkins-ci.plugins
│   │   │           └── ssh-slaves
│   │   │               ├── pom.properties
│   │   │               └── pom.xml
│   │   └── WEB-INF
│   │       ├── lib
│   │       │   └── classes.jar
│   │       └── licenses.xml
│   ├── ssh-slaves.jpi
│   ├── subversion
│   │   ├── META-INF
│   │   │   ├── MANIFEST.MF
│   │   │   └── maven
│   │   │       └── org.jenkins-ci.plugins
│   │   │           └── subversion
│   │   │               ├── pom.properties
│   │   │               └── pom.xml
│   │   ├── WEB-INF
│   │   │   ├── lib
│   │   │   │   ├── antlr-runtime-3.4.jar
│   │   │   │   ├── classes.jar
│   │   │   │   ├── sequence-library-1.0.2.jar
│   │   │   │   ├── sqljet-1.1.7.jar
│   │   │   │   ├── svnkit-1.7.10-jenkins-1.jar
│   │   │   │   └── trilead-ssh2-build217-jenkins-3.jar
│   │   │   └── licenses.xml
│   │   ├── pass-phrase.html
│   │   ├── pass-phrase_de.html
│   │   ├── pass-phrase_fr.html
│   │   ├── pass-phrase_ja.html
│   │   ├── pass-phrase_pt_BR.html
│   │   ├── pass-phrase_ru.html
│   │   ├── pass-phrase_tr.html
│   │   └── pass-phrase_zh_TW.html
│   ├── subversion.jpi
│   ├── translation
│   │   ├── META-INF
│   │   │   ├── MANIFEST.MF
│   │   │   └── maven
│   │   │       └── org.jenkins-ci.plugins
│   │   │           └── translation
│   │   │               ├── pom.properties
│   │   │               └── pom.xml
│   │   ├── WEB-INF
│   │   │   ├── lib
│   │   │   │   └── classes.jar
│   │   │   └── licenses.xml
│   │   ├── dialog.js
│   │   └── flags.png
│   ├── translation.jpi
│   ├── windows-slaves
│   │   ├── META-INF
│   │   │   ├── MANIFEST.MF
│   │   │   └── maven
│   │   │       └── org.jenkins-ci.plugins
│   │   │           └── windows-slaves
│   │   │               ├── pom.properties
│   │   │               └── pom.xml
│   │   └── WEB-INF
│   │       ├── lib
│   │       │   ├── j-interop-2.0.6-kohsuke-1.jar
│   │       │   ├── j-interopdeps-2.0.6-kohsuke-1.jar
│   │       │   ├── jcifs-1.3.17-kohsuke-1.jar
│   │       │   ├── jinterop-proxy-1.1.jar
│   │       │   ├── jinterop-wmi-1.1.jar
│   │       │   ├── tiger-types-1.1.jar
│   │       │   ├── windows-remote-command-1.4.jar
│   │       │   └── windows-slaves.jar
│   │       └── licenses.xml
│   └── windows-slaves.jpi
├── secret.key
├── secret.key.not-so-secret
├── secrets
│   ├── master.key
│   └── org.jenkinsci.main.modules.instance_identity.InstanceIdentity.KEY
└── userContent
    └── readme.txt
</pre>

<p>
起動後 <code>/var/lib/jenkins</code> ディレクトリの様子
</p>
<pre class="example">
/var/cache/jenkins
├── ColorFormatter.class
├── JNLPMain.class
├── LogFileOutputStream$1.class
├── LogFileOutputStream$2.class
├── LogFileOutputStream.class
├── META-INF
│   ├── JENKINS.RSA
│   ├── JENKINS.SF
│   ├── MANIFEST.MF
│   └── maven
│       └── org.jenkins-ci.main
│           └── jenkins-war
│               ├── pom.properties
│               └── pom.xml
├── Main$FileAndDescription.class
├── Main.class
├── MainDialog$1$1.class
├── MainDialog$1.class
├── MainDialog.class
├── WEB-INF
│   ├── classes
│   │   ├── META-INF
│   │   │   ├── licenses.html
│   │   │   └── licenses.xml
│   │   └── dependencies.txt
│   ├── hudson
│   ├── ibm-web-bnd.xmi
│   ├── jenkins-cli.jar
│   ├── jonas-web.xml
│   ├── lib
│   │   ├── access-modifier-annotation-1.4.jar
│   │   ├── acegi-security-1.0.7.jar
│   │   ├── activation-1.1.1-hudson-1.jar
│   │   ├── akuma-1.9.jar
│   │   ├── annotation-indexer-1.7.jar
│   │   ├── ant-1.8.3.jar
│   │   ├── ant-launcher-1.8.3.jar
│   │   ├── antlr-2.7.6.jar
│   │   ├── aopalliance-1.0.jar
│   │   ├── args4j-2.0.23.jar
│   │   ├── asm-4.0.jar
│   │   ├── asm-analysis-4.0.jar
│   │   ├── asm-commons-4.0.jar
│   │   ├── asm-tree-4.0.jar
│   │   ├── asm-util-4.0.jar
│   │   ├── asm5-5.0.1.jar
│   │   ├── bcpkix-jdk15on-1.47.jar
│   │   ├── bcprov-jdk15on-1.47.jar
│   │   ├── bridge-method-annotation-1.9.jar
│   │   ├── bytecode-compatibility-transformer-1.5.jar
│   │   ├── cli-1.574.jar
│   │   ├── commons-beanutils-1.8.3.jar
│   │   ├── commons-codec-1.8.jar
│   │   ├── commons-collections-3.2.1.jar
│   │   ├── commons-digester-2.1.jar
│   │   ├── commons-discovery-0.4.jar
│   │   ├── commons-fileupload-1.2.1.jar
│   │   ├── commons-httpclient-3.1.jar
│   │   ├── commons-io-2.4.jar
│   │   ├── commons-jelly-1.1-jenkins-20120928.jar
│   │   ├── commons-jelly-tags-define-1.0.1-hudson-20071021.jar
│   │   ├── commons-jelly-tags-fmt-1.0.jar
│   │   ├── commons-jelly-tags-xml-1.1.jar
│   │   ├── commons-jexl-1.1-jenkins-20111212.jar
│   │   ├── commons-lang-2.6.jar
│   │   ├── commons-logging-1.1.3.jar
│   │   ├── constant-pool-scanner-1.2.jar
│   │   ├── crypto-util-1.1.jar
│   │   ├── dom4j-1.6.1-hudson-3.jar
│   │   ├── embedded_su4j-1.1.jar
│   │   ├── ezmorph-1.0.6.jar
│   │   ├── groovy-all-1.8.9.jar
│   │   ├── guava-11.0.1.jar
│   │   ├── guice-4.0-beta-no_aop.jar
│   │   ├── hamcrest-core-1.3.jar
│   │   ├── instance-identity-1.4.jar
│   │   ├── j-interop-2.0.6-kohsuke-1.jar
│   │   ├── j-interopdeps-2.0.6-kohsuke-1.jar
│   │   ├── jansi-1.9.jar
│   │   ├── javax.annotation-api-1.2.jar
│   │   ├── javax.inject-1.jar
│   │   ├── jaxen-1.1-beta-11.jar
│   │   ├── jbcrypt-0.3m.jar
│   │   ├── jcifs-1.3.17-kohsuke-1.jar
│   │   ├── jcommon-1.0.12.jar
│   │   ├── jenkins-core-1.574.jar
│   │   ├── jffi-1.2.7-native.jar
│   │   ├── jffi-1.2.7.jar
│   │   ├── jfreechart-1.0.9.jar
│   │   ├── jline-0.9.94.jar
│   │   ├── jmdns-3.4.0-jenkins-3.jar
│   │   ├── jna-3.3.0-jenkins-3.jar
│   │   ├── jna-posix-1.0.3.jar
│   │   ├── jnr-constants-0.8.5.jar
│   │   ├── jnr-ffi-1.0.7.jar
│   │   ├── jnr-posix-3.0.1.jar
│   │   ├── jnr-x86asm-1.0.2.jar
│   │   ├── json-lib-2.4-jenkins-2.jar
│   │   ├── jsr305-1.3.9.jar
│   │   ├── jstl-1.1.0.jar
│   │   ├── jtidy-4aug2000r7-dev-hudson-1.jar
│   │   ├── junit-4.11.jar
│   │   ├── jzlib-1.1.3-kohsuke-1.jar
│   │   ├── launchd-slave-installer-1.2.jar
│   │   ├── libpam4j-1.6.jar
│   │   ├── libzfs-0.5.jar
│   │   ├── localizer-1.10.jar
│   │   ├── log4j-1.2.9.jar
│   │   ├── mail-1.4.4.jar
│   │   ├── memory-monitor-1.8.jar
│   │   ├── mina-core-2.0.5.jar
│   │   ├── oro-2.0.8.jar
│   │   ├── relaxngDatatype-20020414.jar
│   │   ├── remoting-2.43.jar
│   │   ├── robust-http-client-1.2.jar
│   │   ├── sezpoz-1.9.jar
│   │   ├── slave-installer-1.3.jar
│   │   ├── slf4j-api-1.7.7.jar
│   │   ├── slf4j-jdk14-1.7.7.jar
│   │   ├── spring-aop-2.5.6.SEC03.jar
│   │   ├── spring-beans-2.5.6.SEC03.jar
│   │   ├── spring-context-2.5.6.SEC03.jar
│   │   ├── spring-context-support-2.5.6.SEC03.jar
│   │   ├── spring-core-2.5.6.SEC03.jar
│   │   ├── spring-dao-1.2.9.jar
│   │   ├── spring-jdbc-1.2.9.jar
│   │   ├── spring-web-2.5.6.SEC03.jar
│   │   ├── spring-webmvc-2.5.6.SEC03.jar
│   │   ├── ssh-cli-auth-1.2.jar
│   │   ├── sshd-1.6.jar
│   │   ├── sshd-core-0.8.0.jar
│   │   ├── stapler-1.227.jar
│   │   ├── stapler-adjunct-codemirror-1.3.jar
│   │   ├── stapler-adjunct-timeline-1.4.jar
│   │   ├── stapler-adjunct-zeroclipboard-1.1.7-1.jar
│   │   ├── stapler-groovy-1.227.jar
│   │   ├── stapler-jelly-1.227.jar
│   │   ├── stapler-jrebel-1.227.jar
│   │   ├── stax-api-1.0-2.jar
│   │   ├── stax-api-1.0.1.jar
│   │   ├── systemd-slave-installer-1.1.jar
│   │   ├── task-reactor-1.4.jar
│   │   ├── tiger-types-1.3.jar
│   │   ├── trilead-putty-extension-1.2.jar
│   │   ├── trilead-ssh2-build217-jenkins-5.jar
│   │   ├── txw2-20110809.jar
│   │   ├── upstart-slave-installer-1.1.jar
│   │   ├── version-number-1.1.jar
│   │   ├── windows-package-checker-1.0.jar
│   │   ├── windows-slave-installer-1.4.jar
│   │   ├── winp-1.20.jar
│   │   ├── wstx-asl-3.2.9.jar
│   │   ├── xpp3-1.1.4c.jar
│   │   └── xstream-1.4.7-jenkins-1.jar
│   ├── plugins
│   │   ├── ant.hpi
│   │   ├── antisamy-markup-formatter.hpi
│   │   ├── credentials.hpi
│   │   ├── cvs.hpi
│   │   ├── external-monitor-job.hpi
│   │   ├── javadoc.hpi
│   │   ├── ldap.hpi
│   │   ├── mailer.hpi
│   │   ├── matrix-auth.hpi
│   │   ├── matrix-project.hpi
│   │   ├── maven-plugin.hpi
│   │   ├── pam-auth.hpi
│   │   ├── ssh-credentials.hpi
│   │   ├── ssh-slaves.hpi
│   │   ├── subversion.hpi
│   │   ├── translation.hpi
│   │   └── windows-slaves.hpi
│   ├── remoting.jar
│   ├── security
│   │   ├── AbstractPasswordBasedSecurityRealm.groovy
│   │   └── SecurityFilters.groovy
│   ├── slave.jar
│   ├── sun-web.xml
│   ├── update-center-rootCAs
│   │   ├── hudson-community
│   │   ├── hudson-community.txt
│   │   ├── jenkins-update-center-root-ca
│   │   └── jenkins-update-center-root-ca.txt
│   └── web.xml
├── css
│   ├── color.css
│   ├── responsive-grid.css
│   └── style.css
├── dc-license.txt
├── executable
│   └── Executable.class
├── favicon.ico
├── help
│   ├── LogRecorder
│   │   ├── logger.html
│   │   ├── logger_de.html
│   │   ├── logger_fr.html
│   │   ├── logger_ja.html
│   │   ├── logger_zh_TW.html
│   │   ├── name.html
│   │   ├── name_de.html
│   │   ├── name_fr.html
│   │   ├── name_ja.html
│   │   └── name_zh_TW.html
│   ├── parameter
│   │   ├── boolean-default.html
│   │   ├── boolean-default_de.html
│   │   ├── boolean-default_fr.html
│   │   ├── boolean-default_ja.html
│   │   ├── boolean-default_zh_TW.html
│   │   ├── boolean.html
│   │   ├── boolean_de.html
│   │   ├── boolean_fr.html
│   │   ├── boolean_ja.html
│   │   ├── boolean_zh_TW.html
│   │   ├── choice-choices.html
│   │   ├── choice-choices_de.html
│   │   ├── choice-choices_fr.html
│   │   ├── choice-choices_ja.html
│   │   ├── choice-choices_zh_TW.html
│   │   ├── choice.html
│   │   ├── choice_de.html
│   │   ├── choice_fr.html
│   │   ├── choice_ja.html
│   │   ├── choice_zh_TW.html
│   │   ├── description.html
│   │   ├── description_de.html
│   │   ├── description_fr.html
│   │   ├── description_ja.html
│   │   ├── description_zh_TW.html
│   │   ├── file-name.html
│   │   ├── file-name_de.html
│   │   ├── file-name_fr.html
│   │   ├── file-name_ja.html
│   │   ├── file-name_zh_TW.html
│   │   ├── file.html
│   │   ├── file_de.html
│   │   ├── file_fr.html
│   │   ├── file_ja.html
│   │   ├── file_zh_TW.html
│   │   ├── name.html
│   │   ├── name_de.html
│   │   ├── name_fr.html
│   │   ├── name_ja.html
│   │   ├── name_zh_TW.html
│   │   ├── run-filter.html
│   │   ├── run-project.html
│   │   ├── run-project_de.html
│   │   ├── run-project_fr.html
│   │   ├── run-project_ja.html
│   │   ├── run-project_zh_TW.html
│   │   ├── run.html
│   │   ├── run_de.html
│   │   ├── run_fr.html
│   │   ├── run_ja.html
│   │   ├── run_zh_TW.html
│   │   ├── string-default.html
│   │   ├── string-default_de.html
│   │   ├── string-default_fr.html
│   │   ├── string-default_ja.html
│   │   ├── string-default_zh_TW.html
│   │   ├── string.html
│   │   ├── string_de.html
│   │   ├── string_fr.html
│   │   ├── string_ja.html
│   │   └── string_zh_TW.html
│   ├── project-config
│   │   ├── batch.html
│   │   ├── batch_de.html
│   │   ├── batch_fr.html
│   │   ├── batch_ja.html
│   │   ├── batch_pt_BR.html
│   │   ├── batch_ru.html
│   │   ├── batch_tr.html
│   │   ├── batch_zh_TW.html
│   │   ├── block-downstream-building.html
│   │   ├── block-downstream-building_ja.html
│   │   ├── block-downstream-building_zh_TW.html
│   │   ├── block-upstream-building.html
│   │   ├── block-upstream-building_de.html
│   │   ├── block-upstream-building_ja.html
│   │   ├── block-upstream-building_zh_TW.html
│   │   ├── custom-workspace.html
│   │   ├── custom-workspace_de.html
│   │   ├── custom-workspace_fr.html
│   │   ├── custom-workspace_ja.html
│   │   ├── custom-workspace_tr.html
│   │   ├── custom-workspace_zh_TW.html
│   │   ├── defaultView.html
│   │   ├── defaultView_de.html
│   │   ├── defaultView_ja.html
│   │   ├── defaultView_zh_TW.html
│   │   ├── description.html
│   │   ├── description_de.html
│   │   ├── description_fr.html
│   │   ├── description_ja.html
│   │   ├── description_pt_BR.html
│   │   ├── description_ru.html
│   │   ├── description_tr.html
│   │   ├── description_zh_TW.html
│   │   ├── disable.html
│   │   ├── disable_de.html
│   │   ├── disable_fr.html
│   │   ├── disable_ja.html
│   │   ├── disable_pt_BR.html
│   │   ├── disable_ru.html
│   │   ├── disable_tr.html
│   │   ├── disable_zh_TW.html
│   │   ├── downstream.html
│   │   ├── downstream_de.html
│   │   ├── downstream_fr.html
│   │   ├── downstream_ja.html
│   │   ├── downstream_pt_BR.html
│   │   ├── downstream_ru.html
│   │   ├── downstream_tr.html
│   │   ├── downstream_zh_TW.html
│   │   ├── fingerprint.html
│   │   ├── fingerprint_de.html
│   │   ├── fingerprint_fr.html
│   │   ├── fingerprint_ja.html
│   │   ├── fingerprint_pt_BR.html
│   │   ├── fingerprint_ru.html
│   │   ├── fingerprint_tr.html
│   │   ├── fingerprint_zh_TW.html
│   │   ├── javadoc-keep-all.html
│   │   ├── javadoc-keep-all_de.html
│   │   ├── javadoc-keep-all_fr.html
│   │   ├── javadoc-keep-all_ja.html
│   │   ├── javadoc-keep-all_tr.html
│   │   ├── javadoc-keep-all_zh_TW.html
│   │   ├── log-rotation.html
│   │   ├── log-rotation_de.html
│   │   ├── log-rotation_fr.html
│   │   ├── log-rotation_ja.html
│   │   ├── log-rotation_pt_BR.html
│   │   ├── log-rotation_ru.html
│   │   ├── log-rotation_tr.html
│   │   ├── log-rotation_zh_TW.html
│   │   ├── parameterized-build.html
│   │   ├── parameterized-build_de.html
│   │   ├── parameterized-build_fr.html
│   │   ├── parameterized-build_ja.html
│   │   ├── parameterized-build_tr.html
│   │   ├── parameterized-build_zh_TW.html
│   │   ├── scmCheckoutRetryCount.html
│   │   ├── scmCheckoutRetryCount_de.html
│   │   ├── scmCheckoutRetryCount_ja.html
│   │   ├── scmCheckoutRetryCount_zh_CN.html
│   │   ├── scmCheckoutRetryCount_zh_TW.html
│   │   ├── triggerRemotely.html
│   │   ├── triggerRemotely_de.html
│   │   ├── triggerRemotely_fr.html
│   │   ├── triggerRemotely_ja.html
│   │   ├── triggerRemotely_pt_BR.html
│   │   ├── triggerRemotely_ru.html
│   │   ├── triggerRemotely_tr.html
│   │   └── triggerRemotely_zh_TW.html
│   ├── run-config
│   │   ├── description.html
│   │   ├── description_de.html
│   │   ├── description_ja.html
│   │   ├── description_zh_TW.html
│   │   ├── displayName.html
│   │   ├── displayName_de.html
│   │   ├── displayName_ja.html
│   │   └── displayName_zh_TW.html
│   ├── scm-browsers
│   │   ├── list.html
│   │   ├── list_de.html
│   │   ├── list_ja.html
│   │   └── list_zh_TW.html
│   ├── security
│   │   ├── container-realm.html
│   │   ├── container-realm_de.html
│   │   ├── container-realm_fr.html
│   │   ├── container-realm_ja.html
│   │   ├── container-realm_pt_BR.html
│   │   ├── container-realm_ru.html
│   │   ├── container-realm_tr.html
│   │   ├── container-realm_zh_CN.html
│   │   ├── container-realm_zh_TW.html
│   │   ├── full-control-once-logged-in.html
│   │   ├── full-control-once-logged-in_de.html
│   │   ├── full-control-once-logged-in_fr.html
│   │   ├── full-control-once-logged-in_ja.html
│   │   ├── full-control-once-logged-in_pt_BR.html
│   │   ├── full-control-once-logged-in_ru.html
│   │   ├── full-control-once-logged-in_tr.html
│   │   ├── full-control-once-logged-in_zh_CN.html
│   │   ├── full-control-once-logged-in_zh_TW.html
│   │   ├── ldap
│   │   │   ├── groupSearchBase.html
│   │   │   ├── groupSearchBase_de.html
│   │   │   ├── groupSearchBase_fr.html
│   │   │   ├── groupSearchBase_ja.html
│   │   │   ├── groupSearchBase_tr.html
│   │   │   ├── groupSearchBase_zh_TW.html
│   │   │   ├── managerDN.html
│   │   │   ├── managerDN_de.html
│   │   │   ├── managerDN_fr.html
│   │   │   ├── managerDN_ja.html
│   │   │   ├── managerDN_pt_BR.html
│   │   │   ├── managerDN_tr.html
│   │   │   ├── managerDN_zh_TW.html
│   │   │   ├── managerPassword.html
│   │   │   ├── managerPassword_de.html
│   │   │   ├── managerPassword_fr.html
│   │   │   ├── managerPassword_ja.html
│   │   │   ├── managerPassword_pt_BR.html
│   │   │   ├── managerPassword_tr.html
│   │   │   ├── managerPassword_zh_TW.html
│   │   │   ├── rootDN.html
│   │   │   ├── rootDN_de.html
│   │   │   ├── rootDN_fr.html
│   │   │   ├── rootDN_ja.html
│   │   │   ├── rootDN_pt_BR.html
│   │   │   ├── rootDN_ru.html
│   │   │   ├── rootDN_tr.html
│   │   │   ├── rootDN_zh_TW.html
│   │   │   ├── server.html
│   │   │   ├── server_de.html
│   │   │   ├── server_fr.html
│   │   │   ├── server_ja.html
│   │   │   ├── server_pt_BR.html
│   │   │   ├── server_ru.html
│   │   │   ├── server_tr.html
│   │   │   ├── server_zh_TW.html
│   │   │   ├── userSearchBase.html
│   │   │   ├── userSearchBase_de.html
│   │   │   ├── userSearchBase_fr.html
│   │   │   ├── userSearchBase_ja.html
│   │   │   ├── userSearchBase_pt_BR.html
│   │   │   ├── userSearchBase_ru.html
│   │   │   ├── userSearchBase_tr.html
│   │   │   ├── userSearchBase_zh_TW.html
│   │   │   ├── userSearchFilter.html
│   │   │   ├── userSearchFilter_de.html
│   │   │   ├── userSearchFilter_fr.html
│   │   │   ├── userSearchFilter_ja.html
│   │   │   ├── userSearchFilter_pt_BR.html
│   │   │   ├── userSearchFilter_ru.html
│   │   │   ├── userSearchFilter_tr.html
│   │   │   └── userSearchFilter_zh_TW.html
│   │   ├── legacy-auth-strategy.html
│   │   ├── legacy-auth-strategy_de.html
│   │   ├── legacy-auth-strategy_fr.html
│   │   ├── legacy-auth-strategy_ja.html
│   │   ├── legacy-auth-strategy_pt_BR.html
│   │   ├── legacy-auth-strategy_ru.html
│   │   ├── legacy-auth-strategy_tr.html
│   │   ├── legacy-auth-strategy_zh_CN.html
│   │   ├── legacy-auth-strategy_zh_TW.html
│   │   ├── no-authorization.html
│   │   ├── no-authorization_de.html
│   │   ├── no-authorization_fr.html
│   │   ├── no-authorization_ja.html
│   │   ├── no-authorization_pt_BR.html
│   │   ├── no-authorization_ru.html
│   │   ├── no-authorization_tr.html
│   │   ├── no-authorization_zh_CN.html
│   │   ├── no-authorization_zh_TW.html
│   │   ├── private-realm
│   │   │   ├── allow-signup.html
│   │   │   ├── allow-signup_de.html
│   │   │   ├── allow-signup_fr.html
│   │   │   ├── allow-signup_ja.html
│   │   │   ├── allow-signup_tr.html
│   │   │   ├── allow-signup_zh_CN.html
│   │   │   └── allow-signup_zh_TW.html
│   │   ├── private-realm.html
│   │   ├── private-realm_de.html
│   │   ├── private-realm_fr.html
│   │   ├── private-realm_ja.html
│   │   ├── private-realm_pt_BR.html
│   │   ├── private-realm_ru.html
│   │   ├── private-realm_tr.html
│   │   ├── private-realm_zh_CN.html
│   │   └── private-realm_zh_TW.html
│   ├── shell
│   │   ├── shellexe.html
│   │   ├── shellexe_de.html
│   │   ├── shellexe_fr.html
│   │   ├── shellexe_ja.html
│   │   ├── shellexe_nl.html
│   │   ├── shellexe_pt_BR.html
│   │   ├── shellexe_zh_CN.html
│   │   └── shellexe_zh_TW.html
│   ├── system-config
│   │   ├── cvs-browser.html
│   │   ├── cvs-browser_de.html
│   │   ├── cvs-browser_fr.html
│   │   ├── cvs-browser_ja.html
│   │   ├── cvs-browser_pt_BR.html
│   │   ├── cvs-browser_ru.html
│   │   ├── cvs-browser_tr.html
│   │   ├── cvs-browser_zh_TW.html
│   │   ├── defaultJobNamingStrategy.html
│   │   ├── defaultJobNamingStrategy_de.html
│   │   ├── defaultJobNamingStrategy_ja.html
│   │   ├── defaultJobNamingStrategy_zh_TW.html
│   │   ├── globalEnvironmentVariables.html
│   │   ├── globalEnvironmentVariables_de.html
│   │   ├── globalEnvironmentVariables_fr.html
│   │   ├── globalEnvironmentVariables_ja.html
│   │   ├── globalEnvironmentVariables_zh_CN.html
│   │   ├── globalEnvironmentVariables_zh_TW.html
│   │   ├── homeDirectory.html
│   │   ├── homeDirectory_de.html
│   │   ├── homeDirectory_fr.html
│   │   ├── homeDirectory_ja.html
│   │   ├── homeDirectory_pt_BR.html
│   │   ├── homeDirectory_ru.html
│   │   ├── homeDirectory_tr.html
│   │   ├── homeDirectory_zh_CN.html
│   │   ├── homeDirectory_zh_TW.html
│   │   ├── master-slave
│   │   │   ├── availability.html
│   │   │   ├── availability_de.html
│   │   │   ├── availability_fr.html
│   │   │   ├── availability_ja.html
│   │   │   ├── availability_nl.html
│   │   │   ├── availability_tr.html
│   │   │   ├── availability_zh_TW.html
│   │   │   ├── clock.html
│   │   │   ├── clock_de.html
│   │   │   ├── clock_fr.html
│   │   │   ├── clock_ja.html
│   │   │   ├── clock_nl.html
│   │   │   ├── clock_pt_BR.html
│   │   │   ├── clock_ru.html
│   │   │   ├── clock_tr.html
│   │   │   ├── clock_zh_TW.html
│   │   │   ├── demand
│   │   │   │   ├── idleDelay.html
│   │   │   │   ├── idleDelay_de.html
│   │   │   │   ├── idleDelay_fr.html
│   │   │   │   ├── idleDelay_ja.html
│   │   │   │   ├── idleDelay_nl.html
│   │   │   │   ├── idleDelay_tr.html
│   │   │   │   ├── idleDelay_zh_TW.html
│   │   │   │   ├── inDemandDelay.html
│   │   │   │   ├── inDemandDelay_de.html
│   │   │   │   ├── inDemandDelay_fr.html
│   │   │   │   ├── inDemandDelay_ja.html
│   │   │   │   ├── inDemandDelay_nl.html
│   │   │   │   ├── inDemandDelay_tr.html
│   │   │   │   └── inDemandDelay_zh_TW.html
│   │   │   ├── description.html
│   │   │   ├── description_de.html
│   │   │   ├── description_fr.html
│   │   │   ├── description_ja.html
│   │   │   ├── description_pt_BR.html
│   │   │   ├── description_ru.html
│   │   │   ├── description_tr.html
│   │   │   ├── description_zh_TW.html
│   │   │   ├── jnlp-tunnel.html
│   │   │   ├── jnlp-tunnel_de.html
│   │   │   ├── jnlp-tunnel_fr.html
│   │   │   ├── jnlp-tunnel_ja.html
│   │   │   ├── jnlp-tunnel_zh_TW.html
│   │   │   ├── jnlpSecurity.html
│   │   │   ├── jnlpSecurity_de.html
│   │   │   ├── jnlpSecurity_fr.html
│   │   │   ├── jnlpSecurity_ja.html
│   │   │   ├── jnlpSecurity_pt_BR.html
│   │   │   ├── jnlpSecurity_ru.html
│   │   │   ├── jnlpSecurity_tr.html
│   │   │   ├── jnlpSecurity_zh_TW.html
│   │   │   ├── numExecutors.html
│   │   │   ├── numExecutors_de.html
│   │   │   ├── numExecutors_fr.html
│   │   │   ├── numExecutors_ja.html
│   │   │   ├── numExecutors_pt_BR.html
│   │   │   ├── numExecutors_ru.html
│   │   │   ├── numExecutors_tr.html
│   │   │   ├── numExecutors_zh_CN.html
│   │   │   ├── numExecutors_zh_TW.html
│   │   │   ├── usage.html
│   │   │   ├── usage_de.html
│   │   │   ├── usage_fr.html
│   │   │   ├── usage_ja.html
│   │   │   ├── usage_pt_BR.html
│   │   │   ├── usage_ru.html
│   │   │   ├── usage_tr.html
│   │   │   ├── usage_zh_CN.html
│   │   │   └── usage_zh_TW.html
│   │   ├── nodeEnvironmentVariables.html
│   │   ├── nodeEnvironmentVariables_de.html
│   │   ├── nodeEnvironmentVariables_fr.html
│   │   ├── nodeEnvironmentVariables_ja.html
│   │   ├── nodeEnvironmentVariables_zh_TW.html
│   │   ├── patternJobNamingStrategy.html
│   │   ├── patternJobNamingStrategy_de.html
│   │   ├── patternJobNamingStrategy_ja.html
│   │   ├── patternJobNamingStrategy_zh_TW.html
│   │   ├── quietPeriod.html
│   │   ├── quietPeriod_de.html
│   │   ├── quietPeriod_fr.html
│   │   ├── quietPeriod_ja.html
│   │   ├── quietPeriod_pt_BR.html
│   │   ├── quietPeriod_ru.html
│   │   ├── quietPeriod_tr.html
│   │   ├── quietPeriod_zh_TW.html
│   │   ├── systemMessage.html
│   │   ├── systemMessage_de.html
│   │   ├── systemMessage_fr.html
│   │   ├── systemMessage_ja.html
│   │   ├── systemMessage_pt_BR.html
│   │   ├── systemMessage_ru.html
│   │   ├── systemMessage_tr.html
│   │   ├── systemMessage_zh_CN.html
│   │   └── systemMessage_zh_TW.html
│   ├── tasks
│   │   ├── aggregate-test
│   │   │   ├── auto-aggregate.html
│   │   │   ├── auto-aggregate_de.html
│   │   │   ├── auto-aggregate_fr.html
│   │   │   ├── auto-aggregate_ja.html
│   │   │   ├── auto-aggregate_nl.html
│   │   │   ├── auto-aggregate_pt_BR.html
│   │   │   ├── auto-aggregate_tr.html
│   │   │   ├── auto-aggregate_zh_TW.html
│   │   │   ├── help.html
│   │   │   ├── help_de.html
│   │   │   ├── help_fr.html
│   │   │   ├── help_ja.html
│   │   │   ├── help_nl.html
│   │   │   ├── help_pt_BR.html
│   │   │   ├── help_tr.html
│   │   │   ├── help_zh_TW.html
│   │   │   ├── manual-list.html
│   │   │   ├── manual-list_de.html
│   │   │   ├── manual-list_fr.html
│   │   │   ├── manual-list_ja.html
│   │   │   ├── manual-list_nl.html
│   │   │   ├── manual-list_pt_BR.html
│   │   │   ├── manual-list_tr.html
│   │   │   └── manual-list_zh_TW.html
│   │   ├── fingerprint
│   │   │   ├── keepDependencies.html
│   │   │   ├── keepDependencies_de.html
│   │   │   ├── keepDependencies_fr.html
│   │   │   ├── keepDependencies_ja.html
│   │   │   ├── keepDependencies_nl.html
│   │   │   ├── keepDependencies_pt_BR.html
│   │   │   ├── keepDependencies_ru.html
│   │   │   ├── keepDependencies_tr.html
│   │   │   └── keepDependencies_zh_TW.html
│   │   ├── junit
│   │   │   ├── report.html
│   │   │   ├── report_de.html
│   │   │   ├── report_fr.html
│   │   │   ├── report_ja.html
│   │   │   ├── report_nl.html
│   │   │   ├── report_pt_BR.html
│   │   │   ├── report_ru.html
│   │   │   ├── report_tr.html
│   │   │   └── report_zh_TW.html
│   │   └── maven
│   │       ├── properties.html
│   │       ├── properties_de.html
│   │       ├── properties_fr.html
│   │       ├── properties_ja.html
│   │       └── properties_zh_TW.html
│   ├── tools
│   │   ├── help-label.html
│   │   ├── help-label_de.html
│   │   ├── help-label_ja.html
│   │   ├── help-label_zh_CN.html
│   │   ├── help-label_zh_TW.html
│   │   ├── tool-location-node-property.html
│   │   ├── tool-location-node-property_de.html
│   │   ├── tool-location-node-property_fr.html
│   │   ├── tool-location-node-property_ja.html
│   │   ├── tool-location-node-property_zh_CN.html
│   │   └── tool-location-node-property_zh_TW.html
│   ├── user
│   │   ├── description.html
│   │   ├── description_de.html
│   │   ├── description_fr.html
│   │   ├── description_ja.html
│   │   ├── description_nl.html
│   │   ├── description_pt_BR.html
│   │   ├── description_ru.html
│   │   ├── description_tr.html
│   │   ├── description_zh_TW.html
│   │   ├── fullName.html
│   │   ├── fullName_de.html
│   │   ├── fullName_fr.html
│   │   ├── fullName_ja.html
│   │   ├── fullName_nl.html
│   │   ├── fullName_pt_BR.html
│   │   ├── fullName_ru.html
│   │   ├── fullName_tr.html
│   │   └── fullName_zh_TW.html
│   └── view-config
│       ├── description.html
│       ├── description_de.html
│       ├── description_fr.html
│       ├── description_ja.html
│       ├── description_nl.html
│       ├── description_pt_BR.html
│       ├── description_ru.html
│       ├── description_tr.html
│       ├── description_zh_TW.html
│       ├── filter-executors.html
│       ├── filter-executors_de.html
│       ├── filter-executors_ja.html
│       ├── filter-executors_zh_TW.html
│       ├── filter-queue.html
│       ├── filter-queue_de.html
│       ├── filter-queue_ja.html
│       ├── filter-queue_zh_TW.html
│       ├── includeregex.html
│       ├── includeregex_de.html
│       ├── includeregex_fr.html
│       ├── includeregex_ja.html
│       ├── includeregex_nl.html
│       ├── includeregex_pt_BR.html
│       ├── includeregex_ru.html
│       ├── includeregex_tr.html
│       ├── includeregex_zh_TW.html
│       ├── statusFilter.html
│       ├── statusFilter_ja.html
│       └── statusFilter_zh_TW.html
├── images
│   ├── 16x16
│   │   ├── aborted.gif
│   │   ├── aborted.png
│   │   ├── aborted_anime.gif
│   │   ├── accept.png
│   │   ├── attribute.png
│   │   ├── blue.gif
│   │   ├── blue.png
│   │   ├── blue_anime.gif
│   │   ├── clock.gif
│   │   ├── clock.png
│   │   ├── clock_anime.gif
│   │   ├── collapse.png
│   │   ├── computer-flash.gif
│   │   ├── computer-x.gif
│   │   ├── computer-x.png
│   │   ├── computer.gif
│   │   ├── computer.png
│   │   ├── disabled.gif
│   │   ├── disabled.png
│   │   ├── disabled_anime.gif
│   │   ├── document_add.gif
│   │   ├── document_add.png
│   │   ├── document_delete.gif
│   │   ├── document_delete.png
│   │   ├── document_edit.gif
│   │   ├── document_edit.png
│   │   ├── edit-delete.gif
│   │   ├── edit-delete.png
│   │   ├── edit-select-all.gif
│   │   ├── edit-select-all.png
│   │   ├── empty.gif
│   │   ├── empty.png
│   │   ├── error.gif
│   │   ├── error.png
│   │   ├── expand.png
│   │   ├── fingerprint.gif
│   │   ├── fingerprint.png
│   │   ├── folder-error.gif
│   │   ├── folder-error.png
│   │   ├── folder-open.gif
│   │   ├── folder-open.png
│   │   ├── folder.gif
│   │   ├── folder.png
│   │   ├── gear2.gif
│   │   ├── gear2.png
│   │   ├── go-next.gif
│   │   ├── go-next.png
│   │   ├── green.gif
│   │   ├── green_anime.gif
│   │   ├── grey.gif
│   │   ├── grey.png
│   │   ├── grey_anime.gif
│   │   ├── health-00to19.gif
│   │   ├── health-00to19.png
│   │   ├── health-20to39.gif
│   │   ├── health-20to39.png
│   │   ├── health-40to59.gif
│   │   ├── health-40to59.png
│   │   ├── health-60to79.gif
│   │   ├── health-60to79.png
│   │   ├── health-80plus.gif
│   │   ├── health-80plus.png
│   │   ├── help.gif
│   │   ├── help.png
│   │   ├── hourglass.gif
│   │   ├── hourglass.png
│   │   ├── lock.gif
│   │   ├── lock.png
│   │   ├── nobuilt.gif
│   │   ├── nobuilt.png
│   │   ├── nobuilt_anime.gif
│   │   ├── notepad.gif
│   │   ├── notepad.png
│   │   ├── orange-square.png
│   │   ├── package.gif
│   │   ├── package.png
│   │   ├── person.gif
│   │   ├── person.png
│   │   ├── plugin.gif
│   │   ├── plugin.png
│   │   ├── red.gif
│   │   ├── red.png
│   │   ├── red_anime.gif
│   │   ├── redo.gif
│   │   ├── redo.png
│   │   ├── save.gif
│   │   ├── save.png
│   │   ├── search.gif
│   │   ├── search.png
│   │   ├── secure.png
│   │   ├── setting.png
│   │   ├── star-gold.gif
│   │   ├── star-gold.png
│   │   ├── star.gif
│   │   ├── star.png
│   │   ├── stop.gif
│   │   ├── stop.png
│   │   ├── terminal.gif
│   │   ├── terminal.png
│   │   ├── text-error.gif
│   │   ├── text-error.png
│   │   ├── text.gif
│   │   ├── text.png
│   │   ├── user.gif
│   │   ├── user.png
│   │   ├── warning.gif
│   │   ├── warning.png
│   │   ├── yellow.gif
│   │   ├── yellow.png
│   │   └── yellow_anime.gif
│   ├── 24x24
│   │   ├── aborted.gif
│   │   ├── aborted.png
│   │   ├── aborted_anime.gif
│   │   ├── accept.png
│   │   ├── attribute.png
│   │   ├── blue.gif
│   │   ├── blue.png
│   │   ├── blue_anime.gif
│   │   ├── clipboard.gif
│   │   ├── clipboard.png
│   │   ├── clock.gif
│   │   ├── clock.png
│   │   ├── clock_anime.gif
│   │   ├── computer-flash.gif
│   │   ├── computer-x.gif
│   │   ├── computer-x.png
│   │   ├── computer.gif
│   │   ├── computer.png
│   │   ├── delete-document.gif
│   │   ├── delete-document.png
│   │   ├── disabled.gif
│   │   ├── disabled.png
│   │   ├── disabled_anime.gif
│   │   ├── document-properties.gif
│   │   ├── document-properties.png
│   │   ├── document.gif
│   │   ├── document.png
│   │   ├── edit-delete.gif
│   │   ├── edit-delete.png
│   │   ├── empty.gif
│   │   ├── empty.png
│   │   ├── fingerprint.gif
│   │   ├── fingerprint.png
│   │   ├── folder-delete.gif
│   │   ├── folder-delete.png
│   │   ├── folder.gif
│   │   ├── folder.png
│   │   ├── gear.gif
│   │   ├── gear.png
│   │   ├── gear2.gif
│   │   ├── gear2.png
│   │   ├── graph.gif
│   │   ├── graph.png
│   │   ├── green.gif
│   │   ├── green_anime.gif
│   │   ├── grey.gif
│   │   ├── grey.png
│   │   ├── grey_anime.gif
│   │   ├── health-00to19.gif
│   │   ├── health-00to19.png
│   │   ├── health-20to39.gif
│   │   ├── health-20to39.png
│   │   ├── health-40to59.gif
│   │   ├── health-40to59.png
│   │   ├── health-60to79.gif
│   │   ├── health-60to79.png
│   │   ├── health-80plus.gif
│   │   ├── health-80plus.png
│   │   ├── help.gif
│   │   ├── help.png
│   │   ├── installer.gif
│   │   ├── installer.png
│   │   ├── lock.png
│   │   ├── monitor.gif
│   │   ├── monitor.png
│   │   ├── new-computer.gif
│   │   ├── new-computer.png
│   │   ├── new-document.gif
│   │   ├── new-document.png
│   │   ├── new-package.gif
│   │   ├── new-package.png
│   │   ├── new-user.gif
│   │   ├── new-user.png
│   │   ├── next.gif
│   │   ├── next.png
│   │   ├── nobuilt.gif
│   │   ├── nobuilt.png
│   │   ├── nobuilt_anime.gif
│   │   ├── notepad.gif
│   │   ├── notepad.png
│   │   ├── orange-square.gif
│   │   ├── orange-square.png
│   │   ├── package.gif
│   │   ├── package.png
│   │   ├── plugin.png
│   │   ├── previous.gif
│   │   ├── previous.png
│   │   ├── red.gif
│   │   ├── red.png
│   │   ├── red_anime.gif
│   │   ├── redo.gif
│   │   ├── redo.png
│   │   ├── refresh.gif
│   │   ├── refresh.png
│   │   ├── save.gif
│   │   ├── save.png
│   │   ├── search.gif
│   │   ├── search.png
│   │   ├── secure.png
│   │   ├── setting.gif
│   │   ├── setting.png
│   │   ├── star-gold.gif
│   │   ├── star-gold.png
│   │   ├── star.gif
│   │   ├── star.png
│   │   ├── terminal.gif
│   │   ├── terminal.png
│   │   ├── up.gif
│   │   ├── up.png
│   │   ├── user.gif
│   │   ├── user.png
│   │   ├── yellow.gif
│   │   ├── yellow.png
│   │   └── yellow_anime.gif
│   ├── 32x32
│   │   ├── aborted.gif
│   │   ├── aborted.png
│   │   ├── aborted_anime.gif
│   │   ├── accept.png
│   │   ├── attribute.png
│   │   ├── blue.gif
│   │   ├── blue.png
│   │   ├── blue_anime.gif
│   │   ├── clipboard.gif
│   │   ├── clipboard.png
│   │   ├── clock.gif
│   │   ├── clock.png
│   │   ├── clock_anime.gif
│   │   ├── computer-flash.gif
│   │   ├── computer-x.gif
│   │   ├── computer-x.png
│   │   ├── computer.gif
│   │   ├── computer.png
│   │   ├── disabled.gif
│   │   ├── disabled.png
│   │   ├── disabled_anime.gif
│   │   ├── empty.gif
│   │   ├── empty.png
│   │   ├── error.gif
│   │   ├── error.png
│   │   ├── folder.gif
│   │   ├── folder.png
│   │   ├── gear2.png
│   │   ├── graph.gif
│   │   ├── graph.png
│   │   ├── green.gif
│   │   ├── green_anime.gif
│   │   ├── grey.gif
│   │   ├── grey.png
│   │   ├── grey_anime.gif
│   │   ├── health-00to19.gif
│   │   ├── health-00to19.png
│   │   ├── health-20to39.gif
│   │   ├── health-20to39.png
│   │   ├── health-40to59.gif
│   │   ├── health-40to59.png
│   │   ├── health-60to79.gif
│   │   ├── health-60to79.png
│   │   ├── health-80plus.gif
│   │   ├── health-80plus.png
│   │   ├── lock.png
│   │   ├── nobuilt.gif
│   │   ├── nobuilt.png
│   │   ├── nobuilt_anime.gif
│   │   ├── orange-square.png
│   │   ├── package.png
│   │   ├── plugin.gif
│   │   ├── plugin.png
│   │   ├── red.gif
│   │   ├── red.png
│   │   ├── red_anime.gif
│   │   ├── secure.png
│   │   ├── setting.gif
│   │   ├── setting.png
│   │   ├── star-gold.gif
│   │   ├── star-gold.png
│   │   ├── star.gif
│   │   ├── star.png
│   │   ├── user.gif
│   │   ├── user.png
│   │   ├── yellow.gif
│   │   ├── yellow.png
│   │   └── yellow_anime.gif
│   ├── 48x48
│   │   ├── aborted.gif
│   │   ├── aborted.png
│   │   ├── aborted_anime.gif
│   │   ├── accept.png
│   │   ├── attribute.png
│   │   ├── blue.gif
│   │   ├── blue.png
│   │   ├── blue_anime.gif
│   │   ├── clipboard.gif
│   │   ├── clipboard.png
│   │   ├── computer-flash.gif
│   │   ├── computer-x.gif
│   │   ├── computer-x.png
│   │   ├── computer.gif
│   │   ├── computer.png
│   │   ├── disabled.gif
│   │   ├── disabled.png
│   │   ├── disabled_anime.gif
│   │   ├── document.gif
│   │   ├── document.png
│   │   ├── empty.gif
│   │   ├── empty.png
│   │   ├── error.gif
│   │   ├── error.png
│   │   ├── fingerprint.gif
│   │   ├── fingerprint.png
│   │   ├── folder-delete.gif
│   │   ├── folder-delete.png
│   │   ├── folder.gif
│   │   ├── folder.png
│   │   ├── gear2.gif
│   │   ├── gear2.png
│   │   ├── graph.gif
│   │   ├── graph.png
│   │   ├── green.gif
│   │   ├── green_anime.gif
│   │   ├── grey.gif
│   │   ├── grey.png
│   │   ├── grey_anime.gif
│   │   ├── health-00to19.gif
│   │   ├── health-00to19.png
│   │   ├── health-20to39.gif
│   │   ├── health-20to39.png
│   │   ├── health-40to59.gif
│   │   ├── health-40to59.png
│   │   ├── health-60to79.gif
│   │   ├── health-60to79.png
│   │   ├── health-80plus.gif
│   │   ├── health-80plus.png
│   │   ├── help.gif
│   │   ├── help.png
│   │   ├── installer.gif
│   │   ├── installer.png
│   │   ├── lock.png
│   │   ├── monitor.gif
│   │   ├── monitor.png
│   │   ├── network.gif
│   │   ├── network.png
│   │   ├── nobuilt.gif
│   │   ├── nobuilt.png
│   │   ├── nobuilt_anime.gif
│   │   ├── notepad.gif
│   │   ├── notepad.png
│   │   ├── orange-square.gif
│   │   ├── orange-square.png
│   │   ├── package.gif
│   │   ├── package.png
│   │   ├── plugin.gif
│   │   ├── plugin.png
│   │   ├── red.gif
│   │   ├── red.png
│   │   ├── red_anime.gif
│   │   ├── redo.gif
│   │   ├── redo.png
│   │   ├── refresh.gif
│   │   ├── refresh.png
│   │   ├── search.gif
│   │   ├── search.png
│   │   ├── secure.gif
│   │   ├── secure.png
│   │   ├── setting.gif
│   │   ├── setting.png
│   │   ├── star-gold.gif
│   │   ├── star-gold.png
│   │   ├── star.gif
│   │   ├── star.png
│   │   ├── system-log-out.gif
│   │   ├── system-log-out.png
│   │   ├── terminal.gif
│   │   ├── terminal.png
│   │   ├── user.gif
│   │   ├── user.png
│   │   ├── warning.gif
│   │   ├── warning.png
│   │   ├── yellow.gif
│   │   ├── yellow.png
│   │   └── yellow_anime.gif
│   ├── RRZEIconSet-License.url
│   ├── RRZEIconSet.url
│   ├── TangoProject-License.url
│   ├── atom-license.txt
│   ├── atom.gif
│   ├── bottom-sticker-top-edge.png
│   ├── grip.png
│   ├── headless.png
│   ├── jenkins-redbg.png
│   ├── jenkins.png
│   ├── none.gif
│   ├── progress-unknown-red.gif
│   ├── progress-unknown.gif
│   ├── rage.png
│   ├── spinner.gif
│   ├── textarea-handle.gif
│   ├── title.png
│   ├── title.svg
│   ├── title.xcf
│   ├── top-sticker-bottom-edge.png
│   ├── topbar.png
│   ├── topbar.svg
│   └── webstart.gif
├── robots.txt
├── scripts
│   ├── behavior.js
│   ├── combobox-readme.txt
│   ├── combobox.js
│   ├── hudson-behavior.js
│   ├── msie.js
│   ├── prototype.js
│   ├── sortable.js
│   ├── utilities.js
│   └── yui
│       ├── animation
│       │   ├── animation-debug.js
│       │   └── animation-min.js
│       ├── assets
│       │   └── skins
│       │       └── sam
│       │           ├── ajax-loader.gif
│       │           ├── asc.gif
│       │           ├── autocomplete.css
│       │           ├── back-h.png
│       │           ├── back-v.png
│       │           ├── bar-h.png
│       │           ├── bar-v.png
│       │           ├── bg-h.gif
│       │           ├── bg-v.gif
│       │           ├── blankimage.png
│       │           ├── button.css
│       │           ├── calendar.css
│       │           ├── carousel.css
│       │           ├── check0.gif
│       │           ├── check1.gif
│       │           ├── check2.gif
│       │           ├── colorpicker.css
│       │           ├── container.css
│       │           ├── datatable.css
│       │           ├── desc.gif
│       │           ├── dt-arrow-dn.png
│       │           ├── dt-arrow-up.png
│       │           ├── editor-knob.gif
│       │           ├── editor-sprite-active.gif
│       │           ├── editor-sprite.gif
│       │           ├── editor.css
│       │           ├── header_background.png
│       │           ├── hue_bg.png
│       │           ├── imagecropper.css
│       │           ├── layout.css
│       │           ├── layout_sprite.png
│       │           ├── loading.gif
│       │           ├── logger.css
│       │           ├── menu-button-arrow-disabled.png
│       │           ├── menu-button-arrow.png
│       │           ├── menu.css
│       │           ├── menubaritem_submenuindicator.png
│       │           ├── menubaritem_submenuindicator_disabled.png
│       │           ├── menuitem_checkbox.png
│       │           ├── menuitem_checkbox_disabled.png
│       │           ├── menuitem_submenuindicator.png
│       │           ├── menuitem_submenuindicator_disabled.png
│       │           ├── paginator.css
│       │           ├── picker_mask.png
│       │           ├── profilerviewer.css
│       │           ├── progressbar.css
│       │           ├── resize.css
│       │           ├── simpleeditor.css
│       │           ├── skin.css
│       │           ├── slider.css
│       │           ├── split-button-arrow-active.png
│       │           ├── split-button-arrow-disabled.png
│       │           ├── split-button-arrow-focus.png
│       │           ├── split-button-arrow-hover.png
│       │           ├── split-button-arrow.png
│       │           ├── sprite.png
│       │           ├── sprite.psd
│       │           ├── tabview.css
│       │           ├── treeview-loading.gif
│       │           ├── treeview-sprite.gif
│       │           ├── treeview.css
│       │           ├── wait.gif
│       │           └── yuitest.css
│       ├── autocomplete
│       │   ├── assets
│       │   │   ├── autocomplete-core.css
│       │   │   └── skins
│       │   │       └── sam
│       │   │           ├── autocomplete-skin.css
│       │   │           └── autocomplete.css
│       │   ├── autocomplete-debug.js
│       │   └── autocomplete-min.js
│       ├── base
│       │   ├── base-min.css
│       │   └── base.css
│       ├── button
│       │   ├── assets
│       │   │   ├── button-core.css
│       │   │   └── skins
│       │   │       └── sam
│       │   │           ├── button-skin.css
│       │   │           ├── button.css
│       │   │           ├── menu-button-arrow-disabled.png
│       │   │           ├── menu-button-arrow.png
│       │   │           ├── split-button-arrow-active.png
│       │   │           ├── split-button-arrow-disabled.png
│       │   │           ├── split-button-arrow-focus.png
│       │   │           ├── split-button-arrow-hover.png
│       │   │           └── split-button-arrow.png
│       │   ├── button-debug.js
│       │   └── button-min.js
│       ├── connection
│       │   ├── connection-debug.js
│       │   ├── connection-min.js
│       │   ├── connection.swf
│       │   ├── connection_core-debug.js
│       │   └── connection_core-min.js
│       ├── container
│       │   ├── assets
│       │   │   ├── alrt16_1.gif
│       │   │   ├── blck16_1.gif
│       │   │   ├── close12_1.gif
│       │   │   ├── container-core.css
│       │   │   ├── container.css
│       │   │   ├── hlp16_1.gif
│       │   │   ├── info16_1.gif
│       │   │   ├── skins
│       │   │   │   └── sam
│       │   │   │       ├── container-skin.css
│       │   │   │       └── container.css
│       │   │   ├── tip16_1.gif
│       │   │   └── warn16_1.gif
│       │   ├── container-debug.js
│       │   ├── container-min.js
│       │   ├── container_core-debug.js
│       │   └── container_core-min.js
│       ├── cookie
│       │   ├── cookie-debug.js
│       │   └── cookie-min.js
│       ├── cutdown.sh
│       ├── datasource
│       │   ├── datasource-debug.js
│       │   └── datasource-min.js
│       ├── dom
│       │   ├── dom-debug.js
│       │   └── dom-min.js
│       ├── dragdrop
│       │   ├── dragdrop-debug.js
│       │   └── dragdrop-min.js
│       ├── editor
│       │   ├── assets
│       │   │   ├── editor-core.css
│       │   │   ├── simpleeditor-core.css
│       │   │   └── skins
│       │   │       └── sam
│       │   │           ├── blankimage.png
│       │   │           ├── editor-knob.gif
│       │   │           ├── editor-skin.css
│       │   │           ├── editor-sprite-active.gif
│       │   │           ├── editor-sprite.gif
│       │   │           ├── editor.css
│       │   │           ├── simpleeditor-skin.css
│       │   │           └── simpleeditor.css
│       │   ├── editor-debug.js
│       │   ├── editor-min.js
│       │   ├── simpleeditor-debug.js
│       │   └── simpleeditor-min.js
│       ├── element
│       │   ├── element-debug.js
│       │   └── element-min.js
│       ├── event
│       │   ├── event-debug.js
│       │   └── event-min.js
│       ├── fonts
│       │   ├── fonts-min.css
│       │   └── fonts.css
│       ├── logger
│       │   ├── assets
│       │   │   ├── logger-core.css
│       │   │   ├── logger.css
│       │   │   └── skins
│       │   │       └── sam
│       │   │           ├── logger-skin.css
│       │   │           └── logger.css
│       │   ├── logger-debug.js
│       │   └── logger-min.js
│       ├── menu
│       │   ├── assets
│       │   │   ├── menu-core.css
│       │   │   ├── menu.css
│       │   │   ├── menu_down_arrow.png
│       │   │   ├── menu_down_arrow_disabled.png
│       │   │   ├── menu_up_arrow.png
│       │   │   ├── menu_up_arrow_disabled.png
│       │   │   ├── menubaritem_submenuindicator.png
│       │   │   ├── menubaritem_submenuindicator_disabled.png
│       │   │   ├── menubaritem_submenuindicator_selected.png
│       │   │   ├── menuitem_checkbox.png
│       │   │   ├── menuitem_checkbox_disabled.png
│       │   │   ├── menuitem_checkbox_selected.png
│       │   │   ├── menuitem_submenuindicator.png
│       │   │   ├── menuitem_submenuindicator_disabled.png
│       │   │   ├── menuitem_submenuindicator_selected.png
│       │   │   └── skins
│       │   │       └── sam
│       │   │           ├── menu-skin.css
│       │   │           ├── menu.css
│       │   │           ├── menubaritem_submenuindicator.png
│       │   │           ├── menubaritem_submenuindicator_disabled.png
│       │   │           ├── menuitem_checkbox.png
│       │   │           ├── menuitem_checkbox_disabled.png
│       │   │           ├── menuitem_submenuindicator.png
│       │   │           └── menuitem_submenuindicator_disabled.png
│       │   ├── menu-debug.js
│       │   └── menu-min.js
│       ├── resize
│       │   ├── assets
│       │   │   ├── resize-core.css
│       │   │   └── skins
│       │   │       └── sam
│       │   │           ├── layout_sprite.png
│       │   │           ├── resize-skin.css
│       │   │           └── resize.css
│       │   ├── resize-debug.js
│       │   └── resize-min.js
│       ├── storage
│       │   ├── storage-debug.js
│       │   └── storage-min.js
│       ├── tabview
│       │   ├── assets
│       │   │   ├── border_tabs.css
│       │   │   ├── loading.gif
│       │   │   ├── skin-sam.css
│       │   │   ├── skins
│       │   │   │   └── sam
│       │   │   │       ├── tabview-skin.css
│       │   │   │       └── tabview.css
│       │   │   ├── tabview-core.css
│       │   │   └── tabview.css
│       │   ├── tabview-debug.js
│       │   └── tabview-min.js
│       ├── treeview
│       │   ├── assets
│       │   │   ├── skins
│       │   │   │   └── sam
│       │   │   │       ├── check0.gif
│       │   │   │       ├── check1.gif
│       │   │   │       ├── check2.gif
│       │   │   │       ├── loading.gif
│       │   │   │       ├── treeview-loading.gif
│       │   │   │       ├── treeview-skin.css
│       │   │   │       ├── treeview-sprite.gif
│       │   │   │       └── treeview.css
│       │   │   └── treeview-core.css
│       │   ├── treeview-debug.js
│       │   └── treeview-min.js
│       └── yahoo
│           ├── yahoo-debug.js
│           └── yahoo-min.js
└── winstone.jar
</pre>
</div>
</div>

<div id="outline-container-sec-7" class="outline-2">
<h2 id="sec-7"><span class="section-number-2">7</span> 次やりたいこと</h2>
<div class="outline-text-2" id="text-7">
<ul class="org-ul">
<li>Jenkins Master-Slave構成の構築
</li>
<li>音声キャストサービスとの連携（喋るようにする）
</li>
</ul>
</div>
</div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[検証]Weblogicのインスツルメンテーション機能]]></title>
    <link href="http://luozengbin.github.io/blog/2014-07-22-%5B%E6%A4%9C%E8%A8%BC%5Dweblogic%E3%81%AE%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%84%E3%83%AB%E3%83%A1%E3%83%B3%E3%83%86%E3%83%BC%E3%82%B7%E3%83%A7%E3%83%B3%E6%A9%9F%E8%83%BD.html"/>
    <updated>2014-07-22T00:00:00+09:00</updated>
    <id>http://luozengbin.github.io/blog/[検証]weblogicのインスツルメンテーション機能</id>
    <content type="html"><![CDATA[<div id="table-of-contents">
<h2>Table of Contents</h2>
<div id="text-table-of-contents">
<ul>
<li><a href="#sec-1">1. 検証アプリの作成</a></li>
<li><a href="#sec-2">2. インスツルメンテーション設定手順</a>
<ul>
<li><a href="#sec-2-1">2.1. 診断システム・モジュールの作成</a></li>
<li><a href="#sec-2-2">2.2. アプリケーションの設定</a></li>
<li><a href="#sec-2-3">2.3. 採集されたイベントデータの確認</a></li>
</ul>
</li>
<li><a href="#sec-3">3. 参考リンク</a></li>
</ul>
</div>
</div>
<p>
トラブルシューティング時にログでアプリケーションの動作を追うことが常套手段と言えるで
しょう。しかし、アプリケーションにログ出力処理が実装されていないケースもあり得るで
しょう。先日そのようなケースに遭遇してまして、メソッドのエントリとリターンのポイント
ですらログ出力してくれなかった。コード規模が小さいのであれば、すぐログ出力処理を実装
すればいいでしょうけど、大規模の場合それなりに大変でしょう。
</p>

<p>
幸い、Weblogicサーバにはアプリケーションケーションの動作イベントを記録するような機能
が提供されている。それはWebLogic診断フレームワークのインスツルメンテーション機能で
す。以下はインスツルメンテーション機能の使い方を検証します。
</p>

<p>
<!-- more -->
</p>

<div id="outline-container-sec-1" class="outline-2">
<h2 id="sec-1"><span class="section-number-2">1</span> 検証アプリの作成</h2>
<div class="outline-text-2" id="text-1">
<ul class="org-ul">
<li>jspxページ１枚、ボタンとテキストを適当に配置する
</li>
<li>ボタンイベントをハンドリングするためのManagedBeanを作成する
</li>
</ul>
</div>
</div>

<div id="outline-container-sec-2" class="outline-2">
<h2 id="sec-2"><span class="section-number-2">2</span> インスツルメンテーション設定手順</h2>
<div class="outline-text-2" id="text-2">
</div><div id="outline-container-sec-2-1" class="outline-3">
<h3 id="sec-2-1"><span class="section-number-3">2.1</span> 診断システム・モジュールの作成</h3>
<div class="outline-text-3" id="text-2-1">
<p>
診断システム・モジュール一覧にモジュールがあればそれを利用する、なければ適当に新規作成
する。
</p>


<div class="figure">
<p><img src="img/2014-07-12-wls-01.png" alt="2014-07-12-wls-01.png" />
</p>
</div>

<p>
モジュールをインスツルメンテーション画面へ辿って、「有効」チェックボックスがONである
状態を確認する。OFFの状態場合、状態をONへ変更する。
</p>


<div class="figure">
<p><img src="img/2014-07-12-wls-02.png" alt="2014-07-12-wls-02.png" />
</p>
</div>
</div>
</div>

<div id="outline-container-sec-2-2" class="outline-3">
<h3 id="sec-2-2"><span class="section-number-3">2.2</span> アプリケーションの設定</h3>
<div class="outline-text-3" id="text-2-2">
<p>
デプロイメントリストから検証用アプリの「構成→インスツルメンテーション」設定画面へ辿っ
て、「有効」チェックボックスをONにする。
</p>


<div class="figure">
<p><img src="img/2014-07-12-wls-03.png" alt="2014-07-12-wls-03.png" />
</p>
</div>

<p>
同じ画面の下にある「カスタム監視を追加」ボタンから監視ポイントの登録を行う。
</p>


<div class="figure">
<p><img src="img/2014-07-12-wls-04.png" alt="2014-07-12-wls-04.png" />
</p>
</div>

<p>
<code>ポイントカット</code> に監視対象クラスやメソッドを指定することができます。ここの例
<code>execution(public * view.* *(...))</code> ではviewパッケージ下のすべてのクラスのすべての
メソッドにマッチします。
</p>


<div class="figure">
<p><img src="img/2014-07-12-wls-05.png" alt="2014-07-12-wls-05.png" />
</p>
</div>

<p>
続いて診断アクション（ポイントカットでマッチした箇所が実行された時に実行する診断アク
ション）を指定する。
</p>


<div class="figure">
<p><img src="img/2014-07-12-wls-06.png" alt="2014-07-12-wls-06.png" />
</p>
</div>

<p>
ここは <code>TraceAction</code> アクションを選択する。各アクションで取得できる情報は <a href="http://docs.oracle.com/cd/E28389_01/web.1111/b60994/appendix_instrum_library.htm#i1060289">ここ</a> を参照する。
</p>


<div class="figure">
<p><img src="img/2014-07-12-wls-07.png" alt="2014-07-12-wls-07.png" />
</p>
</div>

<p>
これで設定が終わります。サーバを再起動する。
</p>
</div>
</div>

<div id="outline-container-sec-2-3" class="outline-3">
<h3 id="sec-2-3"><span class="section-number-3">2.3</span> 採集されたイベントデータの確認</h3>
<div class="outline-text-3" id="text-2-3">
<p>
採集されたイベントデータは <code>EventsDataArchive</code> ログファイルに保存される。ログファイル
リストの <code>EventsDataArchive</code> から参照することができる。
</p>


<div class="figure">
<p><img src="img/2014-07-12-wls-08.png" alt="2014-07-12-wls-08.png" />
</p>
</div>

<p>
取れた <code>TraceAction</code> イベントレコード
<img src="img/2014-07-12-wls-09.png" alt="2014-07-12-wls-09.png" />
</p>

<p>
<code>TraceAction</code> イベントレコードの詳細イメージ
<img src="img/2014-07-12-wls-10.png" alt="2014-07-12-wls-10.png" />
</p>

<p>
イベントログのファイル実体が <code>domain/servers/DefaultServer/data/store/diagnostics/</code>
の配下に <code>*.DAT</code> バイナリファイルとして保存されている。
</p>
</div>
</div>
</div>

<div id="outline-container-sec-3" class="outline-2">
<h2 id="sec-3"><span class="section-number-2">3</span> 参考リンク</h2>
<div class="outline-text-2" id="text-3">
<ul class="org-ul">
<li><a href="http://docs.oracle.com/cd/E28389_01/web.1111/b60994/config_instrumentation.htm#g1105001">インストゥルメンテーションの構成</a>
</li>
<li><a href="http://docs.oracle.com/cd/E28389_01/web.1111/b60994/appendix_instrum_library.htm#g1082590">WLDFインストゥルメンテーション・ライブラリ</a>
</li>
<li><a href="http://redstack.wordpress.com/2012/06/19/method-run/">How to know that a method was run, when you didn’t write that method</a>
</li>
</ul>
</div>
</div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[メモ]JDeveloper 11g/12c 開発環境の整備]]></title>
    <link href="http://luozengbin.github.io/blog/2014-07-22-%5B%E3%83%A1%E3%83%A2%5Djdeveloper11g%E9%96%8B%E7%99%BA%E7%92%B0%E5%A2%83%E3%81%AE%E6%95%B4%E5%82%99.html"/>
    <updated>2014-07-22T00:00:00+09:00</updated>
    <id>http://luozengbin.github.io/blog/[メモ]jdeveloper11g開発環境の整備</id>
    <content type="html"><![CDATA[<div id="table-of-contents">
<h2>Table of Contents</h2>
<div id="text-table-of-contents">
<ul>
<li><a href="#sec-1">1. 環境</a></li>
<li><a href="#sec-2">2. 12cインストール時のtmp領域足りない問題</a></li>
<li><a href="#sec-3">3. 12c起動時にプロセスクラッシュ問題</a></li>
<li><a href="#sec-4">4. 32bit版起動時のUnsatisfiedLinkError</a></li>
<li><a href="#sec-5">5. 文字化け</a></li>
<li><a href="#sec-6">6. メニューバーの動作不具合</a></li>
<li><a href="#sec-7">7. ランチャーから起動できるようにする</a></li>
<li><a href="#sec-8">8. 未解決問題</a></li>
<li><a href="#sec-9">9. 参考したリンク</a></li>
</ul>
</div>
</div>
<p>
Archlinux環境にJDeveloper 11g/12c 複数バージョンインストール時のメモ。
</p>

<p>
<!-- more -->
</p>

<div id="outline-container-sec-1" class="outline-2">
<h2 id="sec-1"><span class="section-number-2">1</span> 環境</h2>
<div class="outline-text-2" id="text-1">
<ul class="org-ul">
<li>OS: ArchLinux (Linux jizai 3.15.5-2-ARCH #1 SMP PREEMPT Fri Jul 11 07:56:02 CEST 2014 x86_64 GNU/Linux)
</li>
<li>DE: Gnome 3.12.2
</li>
<li>JDeveloper 11g Release 1 (11.1.1.3.0)
</li>
<li>JDeveloper 11g Release 1 (11.1.1.7.0)
</li>
<li>JDeveloper 11g Release 2 (11.1.2.4.0)
</li>
<li>JDeveloper 12c Release 1 (12.1.3.0.0)
</li>
</ul>
</div>
</div>

<div id="outline-container-sec-2" class="outline-2">
<h2 id="sec-2"><span class="section-number-2">2</span> 12cインストール時のtmp領域足りない問題</h2>
<div class="outline-text-2" id="text-2">
<p>
JDeveloper 12cの <code>Linux-Specific Installer</code> でインストール時に以下のエラーが起きた。
<code>/tmp</code> 領域が足りないですね。必要な分は <code>2G</code> のようです。メモリに余裕があれば <code>/tmp</code>
領域を拡大すれば問題解決です。
</p>

<p>
tmp足りないエラー
</p>
<pre class="example">
$ ./jdev_suite_121300_linux64.bin
0%....................................................................................................100%
Not enough disk space in dir /tmp/sfx_6TUHbe, requires at least 2015 MB disk space
Error during execution, error code = -1.
</pre>

<p>
<code>/tmp</code> 領域のサイズを拡大する。
</p>
<pre class="example">
$ sudo mount -o remount,size=2560m /tmp
$ ./jdev_suite_121300_linux64.bin
0%....................................................................................................100%
ランチャのログ・ファイルは/tmp/OraInstall2014-07-23_01-41-50PM/launcher2014-07-23_01-41-50PM.logです。
Oracle Universal Installerを起動中です

CPU速度が300MHzを超えていることを確認してください.   実際1794.296MHz    問題なし
モニターの確認中: 少なくとも256色表示するよう設定されている必要があります.   実際 16777216    問題なし
スワップ領域の確認中: 512MBを超えている必要があります.   実際5238780MB    問題なし
このプラットフォームに64-bit JVMが必要かどうかを確認中.   実際 64    問題なし(64-bitは不要)
一時領域の確認中: 300MBを超えている必要があります.   実際79664MB    問題なし
</pre>

<p>
<code>/tmp</code> を拡大するのが難しい場合、 <code>Generic Installer on Linux</code> jar形式の
インストーラーを使って <code>-Djava.io.tmpdir=$HOME/tmp</code> JAVAオプションにて一時領域
を変えるようする方法もあります。
</p>

<p>
tmp領域のパス変数 <code>TMP</code> <code>TEMP</code> <code>TMP_DIR</code> などを一時変える方法もありますが、実際に検証
してみたところ何れも失敗しました。
</p>
</div>
</div>

<div id="outline-container-sec-3" class="outline-2">
<h2 id="sec-3"><span class="section-number-2">3</span> 12c起動時にプロセスクラッシュ問題</h2>
<div class="outline-text-2" id="text-3">
<p>
12c起動時にプロセスクラッシュします。
</p>
<pre class="example">
$ jdeveloper/jdev/bin/jdev

 Oracle JDeveloper 12c 12.1.3.0.0
 Copyright (c) 1997, 2014, Oracle and/or its affiliates. All rights reserved.

Picked up _JAVA_OPTIONS: -Dawt.useSystemAAFontSettings=on  -Dswing.aatext=true
#
# A fatal error has been detected by the Java Runtime Environment:
#
#  SIGSEGV (0xb) at pc=0x00007f7f30797960, pid=20635, tid=140185120179968
#
# JRE version: Java(TM) SE Runtime Environment (7.0_51-b13) (build 1.7.0_51-b13)
# Java VM: Java HotSpot(TM) 64-Bit Server VM (24.51-b03 mixed mode linux-amd64 compressed oops)
# Problematic frame:
# C  0x00007f7f30797960
#
# Core dump written. Default location: /home/akira/Oracle/Jdev12.1.3.0.0/jdeveloper/jdev/bin/core or core.20635
#
# An error report file with more information is saved as:
# /home/akira/Oracle/Jdev12.1.3.0.0/jdeveloper/jdev/bin/hs_err_pid20635.log
#
# If you would like to submit a bug report, please visit:
#   http://bugreport.sun.com/bugreport/crash.jsp
#
/home/akira/Oracle/Jdev12.1.3.0.0/jdeveloper/jdev/bin/../../ide/bin/launcher.sh: 1207 行: 20635 中止                  (コアダンプ) ${JAVA} "${APP_VM_OPTS[@]}" ${APP_ENV_VARS} -classpath ${APP_CLASSPATH} ${APP_MAIN_CLASS} "${APP_APP_OPTS[@]}"
Error: JDeveloper can't recognize the JDK version
$
</pre>

<p>
<code>GNOME_DESKTOP_SESSION_ID</code> 環境変数が原因でしたので、Jdev起動シェールに
<code>GNOME_DESKTOP_SESSION_ID</code> 環境変数をクリアするようにした。
</p>

<p>
環境変数を確認する
</p>
<pre class="example">
$ env |grep GNOME 
GNOME_DESKTOP_SESSION_ID=this-is-deprecated
XDG_CURRENT_DESKTOP=GNOME
</pre>

<p>
<code>Jdev12.1.3.0.0/jdeveloper/jdev/bin/jdev</code> を編集する
</p>
<div class="org-src-container">

<pre class="src src-sh"><span style="color: #888a85;">#</span><span style="color: #888a85;">!/bin/</span><span style="color: #729fcf; font-weight: bold;">bash</span>

<span style="color: #729fcf;">unset</span> GNOME_DESKTOP_SESSION_ID

<span style="color: #888a85;">#</span><span style="color: #888a85;">=============================================================================</span>
<span style="color: #888a85;">#  </span><span style="color: #888a85;">Launcher for Oracle JDeveloper 11g Release 2 (11.1.2.4.0)</span>
<span style="color: #888a85;"># </span><span style="color: #888a85;">Copyright (c) 2005, 2010, Oracle and/or its affiliates. All rights reserved. </span>
<span style="color: #888a85;">#</span><span style="color: #888a85;">=============================================================================</span>
...........
&#9733;&#30465;&#30053;&#9733;
</pre>
</div>
</div>
</div>

<div id="outline-container-sec-4" class="outline-2">
<h2 id="sec-4"><span class="section-number-2">4</span> 32bit版起動時のUnsatisfiedLinkError</h2>
<div class="outline-text-2" id="text-4">
<p>
Archlinux上で <code>JDeveloper 11g</code> インストール直後起動時に以下のようなエラーが起きて起動
ができない状態でした。後から分かったのですが、12cでエラーが起きない理由は64bit版であ
るためでした。
</p>

<pre class="example">
$ jdeveloper/jdev/bin/jdev

Oracle JDeveloper 11g Release 1 (11.1.1.3.0)
 Copyright (c) 1997, 2010, Oracle and/or its affiliates. All rights reserved.

java.lang.UnsatisfiedLinkError: /home/akira/Oracle/Jdev11.1.1.3.0/jdk160_18/jre/lib/i386/xawt/libmawt.so: libXtst.so.6: cannot open shared object file: No such file or directory
	at java.lang.ClassLoader$NativeLibrary.load(Native Method)
	at java.lang.ClassLoader.loadLibrary0(ClassLoader.java:1803)
	at java.lang.ClassLoader.loadLibrary(ClassLoader.java:1699)
	at java.lang.Runtime.load0(Runtime.java:770)
	at java.lang.System.load(System.java:1003)
	at java.lang.ClassLoader$NativeLibrary.load(Native Method)
	at java.lang.ClassLoader.loadLibrary0(ClassLoader.java:1803)
	at java.lang.ClassLoader.loadLibrary(ClassLoader.java:1720)
	at java.lang.Runtime.loadLibrary0(Runtime.java:823)
	at java.lang.System.loadLibrary(System.java:1028)
	at sun.security.action.LoadLibraryAction.run(LoadLibraryAction.java:50)
	at java.security.AccessController.doPrivileged(Native Method)
	at sun.awt.NativeLibLoader.loadLibraries(NativeLibLoader.java:38)
	at sun.awt.DebugHelper.&lt;clinit&gt;(DebugHelper.java:29)
	at java.awt.Component.&lt;clinit&gt;(Component.java:560)
	at oracle.ide.IdeCore.startupImpl(IdeCore.java:1156)
	at oracle.ide.Ide.startup(Ide.java:703)
	at oracle.ideimpl.DefaultIdeStarter.startIde(DefaultIdeStarter.java:35)
	at oracle.ideimpl.Main.start(Main.java:184)
	at oracle.ideimpl.Main.main(Main.java:146)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at oracle.ide.boot.PCLMain.callMain(PCLMain.java:62)
	at oracle.ide.boot.PCLMain.main(PCLMain.java:54)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at oracle.classloader.util.MainClass.invoke(MainClass.java:128)
	at oracle.ide.boot.IdeLauncher.bootClassLoadersAndMain(IdeLauncher.java:189)
	at oracle.ide.boot.IdeLauncher.launchImpl(IdeLauncher.java:89)
	at oracle.ide.boot.IdeLauncher.launch(IdeLauncher.java:65)
	at oracle.ide.boot.IdeLauncher.main(IdeLauncher.java:54)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at oracle.ide.boot.Launcher.invokeMain(Launcher.java:713)
	at oracle.ide.boot.Launcher.launchImpl(Launcher.java:115)
	at oracle.ide.boot.Launcher.launch(Launcher.java:68)
	at oracle.ide.boot.Launcher.main(Launcher.java:57)
</pre>

<p>
<code>awt</code> から利用している <code>libXtst.so.6</code> シェアードライブラリが見つからないようなので
、 <code>locate</code> で確認したら <code>libxtst</code> パッケージがちゃんと入っている。32bit/64bitの問題だ
ろうなと思って、Archlinuxのパッケージリポジトリを検索したらやはり <code>lib32-libxtst</code> が
存在した、これをインストールしたらエラーが解消されました。
</p>

<p>
<code>libXtst.so.6</code> ライブラリの確認
</p>
<pre class="example">
$ locate libXtst.so
/usr/lib/libXtst.so
/usr/lib/libXtst.so.6
/usr/lib/libXtst.so.6.1.0
$ pacman -Qo /usr/lib/libXtst.so.6
/usr/lib/libXtst.so.6 は libxtst 1.2.2-1 によって保有されています
</pre>

<p>
<code>lib32-libxtst</code> をインストールする
</p>
<pre class="example">
★インストール
$ sudo pacman -S lib32-libxtst
[sudo] password for akira: 
依存関係を解決しています...
相互衝突をチェックしています...

パッケージ (1): lib32-libxtst-1.2.2-1

Total Download Size:    0.01 MiB
Total Installed Size:   0.02 MiB

:: インストールを行いますか？ [Y/n] 
:: パッケージを取得します ...
 lib32-libxtst-1.2.2-1-x86_64                                                                         9.0 KiB  44.4K/s 00:00 [############################################################################] 100%
(1/1) キーリングのキーを確認                                                                                                 [############################################################################] 100%
(1/1) パッケージの整合性をチェック                                                                                           [############################################################################] 100%
(1/1) パッケージファイルのロード                                                                                             [############################################################################] 100%
(1/1) ファイルの衝突をチェック                                                                                               [############################################################################] 100%
(1/1) 空き容量を確認                                                                                                         [############################################################################] 100%
(1/1) インストール lib32-libxtst                                                                                             [############################################################################] 100%

★確認
$ pacman -Ql lib32-libxtst
lib32-libxtst /usr/
lib32-libxtst /usr/lib32/
lib32-libxtst /usr/lib32/libXtst.so
lib32-libxtst /usr/lib32/libXtst.so.6
lib32-libxtst /usr/lib32/libXtst.so.6.1.0
lib32-libxtst /usr/lib32/pkgconfig/
lib32-libxtst /usr/lib32/pkgconfig/xtst.pc
lib32-libxtst /usr/share/
lib32-libxtst /usr/share/licenses/
lib32-libxtst /usr/share/licenses/lib32-libxtst
$
</pre>
</div>
</div>

<div id="outline-container-sec-5" class="outline-2">
<h2 id="sec-5"><span class="section-number-2">5</span> 文字化け</h2>
<div class="outline-text-2" id="text-5">
<p>
11g 起動したら日本語が例の豆腐形状となっていました。JdevにバンドされたJDKの
<code>Jdev11.1.1.3.0/jdk160_18/jre/lib/fonts</code> の配下に <code>fallback</code> ディレクトリを作成し、日
本語フォントへのシンボルリンクを貼っておく。また、起動オプションにフォントのアンチエ
イリアス (anti-aliasing)を有効にしておくとよいでしょう。
</p>

<p>
起動時の豆腐状
</p>


<div class="figure">
<p><img src="img/2014-07-22-jdeveloper-1.png" alt="2014-07-22-jdeveloper-1.png" />
</p>
</div>

<p>
fallbackフォントの設定を実施する
</p>
<pre class="example">
★fallbackフォントの指定
$ cd ~/Oracle/Jdev11.1.1.3.0/jdk160_18/jre/lib/fonts
$ mkdir fallback; cd fallback
$ ln -s /usr/share/fonts/TTF/VL-Gothic-Regular.ttf VL-Gothic-Regular.ttf
$ ln -s /usr/share/fonts/TTF/VL-PGothic-Regular.ttf VL-PGothic-Regular.ttf

★起動オプション設定
$ export _JAVA_OPTIONS="-Dawt.useSystemAAFontSettings=on -Dswing.aatext=true"
$ cd ~/Oracle/Jdev11.1.1.3.0/
$ jdeveloper/jdev/bin/jdev

Oracle JDeveloper 11g Release 1 (11.1.1.3.0)
 Copyright (c) 1997, 2010, Oracle and/or its affiliates. All rights reserved.

Picked up _JAVA_OPTIONS: -Dawt.useSystemAAFontSettings=on -Dswing.aatext=true
</pre>

<p>
<code>_JAVA_OPTIONS</code> をいちいち指定するのは非効率であれば、適当に <code>/etc/profile.d/jdk.sh</code>
や <code>~/.bash_profile</code> にて定義しておけばよいでしょう。
</p>


<div class="figure">
<p><img src="img/2014-07-22-jdeveloper-2.png" alt="2014-07-22-jdeveloper-2.png" />
</p>
</div>

<p>
もう一度起動してみたら、ばっちりだね。
</p>
</div>
</div>

<div id="outline-container-sec-6" class="outline-2">
<h2 id="sec-6"><span class="section-number-2">6</span> メニューバーの動作不具合</h2>
<div class="outline-text-2" id="text-6">
<p>
この問題は <code>11.1.1.3.0</code> だけ起きるようです。
</p>

<p>
JDeveloper起動後、ウィンドウを最大化した状態でメニューバーの操作がうまくできない問題
がある。詳細な原因がよくわからない、GTKウィンドウマネージャとうまく連携出来ていない気
がする。とりあえず、ウィンドウを最大化せずに問題から逃げた。
</p>
</div>
</div>

<div id="outline-container-sec-7" class="outline-2">
<h2 id="sec-7"><span class="section-number-2">7</span> ランチャーから起動できるようにする</h2>
<div class="outline-text-2" id="text-7">
<p>
ランチャー起動できるように <code>~/.local/share/applications/jdev.desktop</code> ファイルを作成
しておく。
</p>
<pre class="example">
[Desktop Entry]
Name=JDeveloper
Exec=/home/akira/Oracle/Jdev11.1.1.3.0/jdeveloper/jdev/bin/jdev
Icon=/home/akira/Oracle/Jdev11.1.1.3.0/jdeveloper/jdev/bin/coffee.png
StartupNotify=true
Terminal=false
Type=Application
Categories=Development;Java;
</pre>
</div>
</div>

<div id="outline-container-sec-8" class="outline-2">
<h2 id="sec-8"><span class="section-number-2">8</span> 未解決問題</h2>
<div class="outline-text-2" id="text-8">
<ul class="org-ul">
<li>フォントが醜い
</li>
<li>GTKLookAndFeelが使えない
</li>
</ul>
</div>
</div>

<div id="outline-container-sec-9" class="outline-2">
<h2 id="sec-9"><span class="section-number-2">9</span> 参考したリンク</h2>
<div class="outline-text-2" id="text-9">
<ul class="org-ul">
<li><a href="http://shebang-beacon.de/2012/05/27/jdeveloper-installation-on-debian-no-space-left-on-device-issue/">JDeveloper Installation on Debian – “no space left on device” Issue</a>
</li>
<li><a href="http://lee3star.blogspot.jp/2013/11/jdeveloper-12c-crashes-at-startup.html">JDeveloper 12c crashes at startup</a>
</li>
<li><a href="http://d.hatena.ne.jp/longingandtears/20121208/1354972484">Linux版のjavaで文字が□になる問題</a>
</li>
</ul>
</div>
</div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[メモ]ffmpegでスクリンキャストを取る]]></title>
    <link href="http://luozengbin.github.io/blog/2014-07-21-%5B%E3%83%A1%E3%83%A2%5Dffmpeg%E3%81%A7%E3%82%B9%E3%82%AF%E3%83%AA%E3%83%B3%E3%82%AD%E3%83%A3%E3%82%B9%E3%83%88%E3%82%92%E5%8F%96%E3%82%8B.html"/>
    <updated>2014-07-21T00:00:00+09:00</updated>
    <id>http://luozengbin.github.io/blog/[メモ]ffmpegでスクリンキャストを取る</id>
    <content type="html"><![CDATA[<div id="table-of-contents">
<h2>Table of Contents</h2>
<div id="text-table-of-contents">
<ul>
<li><a href="#sec-1">1. 特定のウィンドウを録画する</a></li>
<li><a href="#sec-2">2. 全画面を録画する</a></li>
<li><a href="#sec-3">3. 録画サンプル</a></li>
</ul>
</div>
</div>
<p>
<code>ffmpeg</code> と <code>xwininfo</code> コマンドでスクリンキャストを取るシェールスクリプトを作成してみた。
</p>

<p>
<!-- more -->
</p>

<div id="outline-container-sec-1" class="outline-2">
<h2 id="sec-1"><span class="section-number-2">1</span> 特定のウィンドウを録画する</h2>
<div class="outline-text-2" id="text-1">
<p>
第一引数に録画ビデオファイルの保存パスを指定する。
</p>
<div class="org-src-container">

<pre class="src src-sh"><span style="color: #888a85;">#</span><span style="color: #888a85;">!/bin/</span><span style="color: #729fcf; font-weight: bold;">sh</span>

<span style="color: #888a85;">###########################################################################</span>
<span style="color: #888a85;"># </span><span style="color: #888a85;">fsc-window.sh - take screen video cast for selected window</span>
<span style="color: #888a85;">#</span>
<span style="color: #888a85;">#    </span><span style="color: #888a85;">Authors: Luo Zengbin <a href="mailto:jalen.cn%40gmail.com">&lt;jalen.cn@gmail.com&gt;</a></span>
<span style="color: #888a85;">#</span>
<span style="color: #888a85;">#    </span><span style="color: #888a85;">This program is free software: you can redistribute it and/or modify</span>
<span style="color: #888a85;">#    </span><span style="color: #888a85;">it under the terms of the GNU General Public License as published by</span>
<span style="color: #888a85;">#    </span><span style="color: #888a85;">the Free Software Foundation, version 3 of the License.</span>
<span style="color: #888a85;">#</span>
<span style="color: #888a85;">#    </span><span style="color: #888a85;">This program is distributed in the hope that it will be useful,</span>
<span style="color: #888a85;">#    </span><span style="color: #888a85;">but WITHOUT ANY WARRANTY; without even the implied warranty of</span>
<span style="color: #888a85;">#    </span><span style="color: #888a85;">MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span>
<span style="color: #888a85;">#    </span><span style="color: #888a85;">GNU General Public License for more details.</span>
<span style="color: #888a85;">#</span>
<span style="color: #888a85;">#    </span><span style="color: #888a85;">You should have received a copy of the GNU General Public License</span>
<span style="color: #888a85;">#    </span><span style="color: #888a85;">along with this program.  If not, see <a href="http://www.gnu.org/licenses/">&lt;http://www.gnu.org/licenses/&gt;</a>.</span>
<span style="color: #888a85;">#</span>
<span style="color: #888a85;"># </span><span style="color: #888a85;">Usage:</span>
<span style="color: #888a85;">#    </span><span style="color: #888a85;">$fsc-window.sh $1 &#31532;&#19968;&#24341;&#25968;&#12395;&#37682;&#30011;&#12499;&#12487;&#12458;&#12501;&#12449;&#12452;&#12523;&#12398;&#20445;&#23384;&#12497;&#12473;&#12434;&#25351;&#23450;&#12377;&#12427;&#12290;</span>
<span style="color: #888a85;">###########################################################################</span>

<span style="color: #888a85;">####################################</span>
<span style="color: #888a85;"># </span><span style="color: #888a85;">&#22855;&#25968;&#12434;&#20598;&#25968;&#12395;&#22793;&#25563;&#12377;&#12427;&#20966;&#29702;</span>
<span style="color: #888a85;">####################################</span>
<span style="color: #729fcf; font-weight: bold;">function</span> <span style="color: #edd400; font-weight: bold;">even_round</span> {
    <span style="color: #729fcf; font-weight: bold;">if</span> [ <span style="color: #fa8072;">`expr $1 % 2`</span> == 0 ]; <span style="color: #729fcf; font-weight: bold;">then</span>
        <span style="color: #729fcf;">echo</span> $<span style="color: #ff6347;">1</span>
    <span style="color: #729fcf; font-weight: bold;">else</span>
        <span style="color: #729fcf;">echo</span> $(($<span style="color: #ff6347;">1</span> - 1))
    <span style="color: #729fcf; font-weight: bold;">fi</span>
}

<span style="color: #729fcf;">echo</span> <span style="color: #ad7fa8; font-style: italic;">"&#37682;&#30011;&#23550;&#35937;Window&#12434;&#12459;&#12540;&#12477;&#12523;&#12391;&#36984;&#25246;&#12375;&#12390;&#12367;&#12384;&#12373;&#12356;&#12290;"</span>
<span style="color: #ff6347;">VFILE</span>=$<span style="color: #ff6347;">1</span>
<span style="color: #ff6347;">INFO</span>=$(<span style="color: #fa8072;">xwininfo</span> -frame)

<span style="color: #ff6347;">WIN_GEO</span>=$(<span style="color: #fa8072;">echo</span> $<span style="color: #ff6347;">INFO</span> | grep -oEe <span style="color: #ad7fa8; font-style: italic;">'geometry [0-9]+x[0-9]+'</span> | grep -oEe <span style="color: #ad7fa8; font-style: italic;">'[0-9]+x[0-9]+'</span>)
<span style="color: #ff6347;">WIN_XY</span>=$(<span style="color: #fa8072;">echo</span> $<span style="color: #ff6347;">INFO</span> | grep -oEe <span style="color: #ad7fa8; font-style: italic;">'Corners:\s+\+[0-9]+\+[0-9]+'</span> | grep -oEe <span style="color: #ad7fa8; font-style: italic;">'[0-9]+\+[0-9]+'</span> | sed -e <span style="color: #ad7fa8; font-style: italic;">'s/\+/,/'</span> )

<span style="color: #888a85;"># </span><span style="color: #888a85;">Windows&#12398;&#27178;&#12469;&#12452;&#12474;&#12392;&#32294;&#12469;&#12452;&#12474;&#12434;&#20598;&#25968;&#12395;&#12377;&#12427;</span>
<span style="color: #ff6347;">WIN_GEO_X</span>=$(<span style="color: #fa8072;">echo</span> $<span style="color: #ff6347;">WIN_GEO</span> | cut -d <span style="color: #ad7fa8; font-style: italic;">'x'</span> -f 1)
<span style="color: #ff6347;">WIN_GEO_Y</span>=$(<span style="color: #fa8072;">echo</span> $<span style="color: #ff6347;">WIN_GEO</span> | cut -d <span style="color: #ad7fa8; font-style: italic;">'x'</span> -f 2)

<span style="color: #ff6347;">WIN_GEO</span>=<span style="color: #ad7fa8; font-style: italic;">"$(</span><span style="color: #fa8072;">even_round</span><span style="color: #ad7fa8; font-style: italic;"> $WIN_GEO_X)x$(</span><span style="color: #fa8072;">even_round</span><span style="color: #ad7fa8; font-style: italic;"> $WIN_GEO_Y)"</span>

<span style="color: #729fcf;">echo</span> <span style="color: #ad7fa8; font-style: italic;">"&#30011;&#38754;&#12469;&#12452;&#12474;&#65306;$WIN_GEO"</span>
<span style="color: #729fcf;">echo</span> <span style="color: #ad7fa8; font-style: italic;">"&#30011;&#38754;&#20301;&#32622;  &#65306;$WIN_XY"</span>

<span style="color: #888a85;"># </span><span style="color: #888a85;">&#37682;&#30011;&#38283;&#22987;</span>
ffmpeg -show_region 1 -f x11grab -framerate 25 -video_size $<span style="color: #ff6347;">WIN_GEO</span> -i :0.0+$<span style="color: #ff6347;">WIN_XY</span> <span style="color: #ad7fa8; font-style: italic;">\</span>
       -dcodec copy -pix_fmt yuv420p -c:v libx264 -preset veryfast -qscale 1 -y $<span style="color: #ff6347;">VFILE</span>
</pre>
</div>

<p>
ハマッたところ
</p>
<ul class="org-ul">
<li>ビデオの横と縦のサイズを偶数にしないと、iphoneで再生時に真っグリンな画面しか見れない
</li>
<li>shell関数の戻り値は <code>return</code> じゃなくて、 <code>echo</code> を使うべき。 <code>return</code> はプロセスの
実行結果ステータスと同じ使い方、ステータスを示すに使う
</li>
</ul>

<p>
コマンドの便利なオプション
</p>
<ul class="org-ul">
<li><code>xwininfo -frame</code> 対象のウィンドウをカーソルで選択できるオプション
</li>
<li><code>ffmpeg -show_region 1</code> 録画対象範囲を点線で囲んで分かりやすくするオプション、1は点
線の太さを示す
</li>
</ul>
</div>
</div>

<div id="outline-container-sec-2" class="outline-2">
<h2 id="sec-2"><span class="section-number-2">2</span> 全画面を録画する</h2>
<div class="outline-text-2" id="text-2">
<p>
<code>xwininfo -root</code> でフルスクリーンの情報を取得することができます。
</p>

<div class="org-src-container">

<pre class="src src-sh"><span style="color: #888a85;">#</span><span style="color: #888a85;">!/bin/</span><span style="color: #729fcf; font-weight: bold;">sh</span>

<span style="color: #888a85;">###########################################################################</span>
<span style="color: #888a85;"># </span><span style="color: #888a85;">fsc-full.sh - take full screen video cast</span>
<span style="color: #888a85;">#</span>
<span style="color: #888a85;">#    </span><span style="color: #888a85;">Authors: Luo Zengbin <a href="mailto:jalen.cn%40gmail.com">&lt;jalen.cn@gmail.com&gt;</a></span>
<span style="color: #888a85;">#</span>
<span style="color: #888a85;">#    </span><span style="color: #888a85;">This program is free software: you can redistribute it and/or modify</span>
<span style="color: #888a85;">#    </span><span style="color: #888a85;">it under the terms of the GNU General Public License as published by</span>
<span style="color: #888a85;">#    </span><span style="color: #888a85;">the Free Software Foundation, version 3 of the License.</span>
<span style="color: #888a85;">#</span>
<span style="color: #888a85;">#    </span><span style="color: #888a85;">This program is distributed in the hope that it will be useful,</span>
<span style="color: #888a85;">#    </span><span style="color: #888a85;">but WITHOUT ANY WARRANTY; without even the implied warranty of</span>
<span style="color: #888a85;">#    </span><span style="color: #888a85;">MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span>
<span style="color: #888a85;">#    </span><span style="color: #888a85;">GNU General Public License for more details.</span>
<span style="color: #888a85;">#</span>
<span style="color: #888a85;">#    </span><span style="color: #888a85;">You should have received a copy of the GNU General Public License</span>
<span style="color: #888a85;">#    </span><span style="color: #888a85;">along with this program.  If not, see <a href="http://www.gnu.org/licenses/">&lt;http://www.gnu.org/licenses/&gt;</a>.</span>
<span style="color: #888a85;">#</span>
<span style="color: #888a85;"># </span><span style="color: #888a85;">Usage:</span>
<span style="color: #888a85;">#    </span><span style="color: #888a85;">$fsc-full.sh $1 &#31532;&#19968;&#24341;&#25968;&#12395;&#37682;&#30011;&#12499;&#12487;&#12458;&#12501;&#12449;&#12452;&#12523;&#12398;&#20445;&#23384;&#12497;&#12473;&#12434;&#25351;&#23450;&#12377;&#12427;&#12290;</span>
<span style="color: #888a85;">###########################################################################</span>

<span style="color: #ff6347;">WIN_GEO</span>=$(<span style="color: #fa8072;">xwininfo</span> -root | grep <span style="color: #ad7fa8; font-style: italic;">'geometry'</span> | awk <span style="color: #ad7fa8; font-style: italic;">'{print $2;}'</span> | cut -d <span style="color: #ad7fa8; font-style: italic;">'+'</span> -f 1)

<span style="color: #888a85;"># </span><span style="color: #888a85;">&#37682;&#30011;&#38283;&#22987;</span>
ffmpeg -show_region 1 -f x11grab -framerate 25 -video_size $<span style="color: #ff6347;">WIN_GEO</span> -i :0.0 <span style="color: #ad7fa8; font-style: italic;">\</span>
       -dcodec copy -pix_fmt yuv420p -c:v libx264 -preset veryfast -qscale 1 -y $<span style="color: #ff6347;">1</span>
</pre>
</div>
</div>
</div>

<div id="outline-container-sec-3" class="outline-2">
<h2 id="sec-3"><span class="section-number-2">3</span> 録画サンプル</h2>
<div class="outline-text-2" id="text-3">
<p>
録画テストサンプル
</p>
<video controls>
   <source src="video/2014-07-21-ffmpeg-test.mp4">
</video>

<p>
ばっちりだね。 めでたしめでたし。
</p>
</div>
</div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[検証]syncシステムコールの性能について]]></title>
    <link href="http://luozengbin.github.io/blog/2014-07-08-%5B%E6%A4%9C%E8%A8%BC%5Dsync%E3%82%B7%E3%82%B9%E3%83%86%E3%83%A0%E3%82%B3%E3%83%BC%E3%83%AB%E3%81%AE%E6%80%A7%E8%83%BD%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6.html"/>
    <updated>2014-07-08T00:00:00+09:00</updated>
    <id>http://luozengbin.github.io/blog/[検証]syncシステムコールの性能について</id>
    <content type="html"><![CDATA[<div id="table-of-contents">
<h2>Table of Contents</h2>
<div id="text-table-of-contents">
<ul>
<li><a href="#sec-1">1. IOPSとは</a></li>
<li><a href="#sec-2">2. 実機検証</a>
<ul>
<li><a href="#sec-2-1">2.1. 環境確認</a></li>
<li><a href="#sec-2-2">2.2. テスト用プログラム</a></li>
<li><a href="#sec-2-3">2.3. sarコマンドでIOPSを確認する</a></li>
<li><a href="#sec-2-4">2.4. 測定結果</a></li>
</ul>
</li>
<li><a href="#sec-3">3. 参考リンク</a></li>
</ul>
</div>
</div>
<p>
商用（本番運用）にて、なんらかの障害発生時にログがロストしないようにトランザクション
ポイントで <code>sync</code> システムコールを呼び出して汚れたページをディスクへ書き込む方法が
あるのですが、それは普通のHDDに置いては性能的に非現実的です。理由は <code>IOPS</code> です。
</p>

<div id="outline-container-sec-1" class="outline-2">
<h2 id="sec-1"><span class="section-number-2">1</span> IOPSとは</h2>
<div class="outline-text-2" id="text-1">
<p>
ハードディスクなどの記憶装置の性能指標の一つで、ある条件の元で1秒間に読み込み・書き込
みできる回数のこと。<a href="http://en.wikipedia.org/wiki/IOPS">wikipedia</a> から参照するとHDDのIOPS数値は以下のようです。
</p>

<table border="2" cellspacing="0" cellpadding="6" rules="groups" frame="hsides">


<colgroup>
<col  class="left" />

<col  class="left" />

<col  class="left" />

<col  class="left" />
</colgroup>
<thead>
<tr>
<th scope="col" class="left">Device</th>
<th scope="col" class="left">Type</th>
<th scope="col" class="left">IOPS</th>
<th scope="col" class="left">Interface</th>
</tr>
</thead>
<tbody>
<tr>
<td class="left">7,200 rpm SATA drives</td>
<td class="left">HDD</td>
<td class="left">~75-100 IOPS</td>
<td class="left">SATA 3 Gbit/s</td>
</tr>

<tr>
<td class="left">10,000 rpm SATA drives</td>
<td class="left">HDD</td>
<td class="left">~125-150 IOPS</td>
<td class="left">SATA 3 Gbit/s</td>
</tr>

<tr>
<td class="left">10,000 rpm SAS drives</td>
<td class="left">HDD</td>
<td class="left">~140 IOPS</td>
<td class="left">SAS</td>
</tr>

<tr>
<td class="left">15,000 rpm SAS drives</td>
<td class="left">HDD</td>
<td class="left">~175-210 IOPS</td>
<td class="left">SAS</td>
</tr>
</tbody>
</table>

<p>
つまり、HDDに置いて秒間同期書き込み回数の上限はしょせん200回（多めに）ぐらいです。
</p>

<p>
さあ、実際はどうなるでしょうか？実機検証してみましょう。
</p>

<p>
<!-- more -->
</p>
</div>
</div>

<div id="outline-container-sec-2" class="outline-2">
<h2 id="sec-2"><span class="section-number-2">2</span> 実機検証</h2>
<div class="outline-text-2" id="text-2">
</div><div id="outline-container-sec-2-1" class="outline-3">
<h3 id="sec-2-1"><span class="section-number-3">2.1</span> 環境確認</h3>
<div class="outline-text-3" id="text-2-1">
<p>
ディスクデバイスは <code>7,200rpm</code> のものを使用します。
</p>
<pre class="example">
$ sudo hdparm -I /dev/sda

/dev/sda:

ATA device, with non-removable media
	Model Number:       WDC WD2500AAKX-193CA0
	Serial Number:      WD-**********
	Firmware Revision:  15.01H15
	Transport:          Serial, SATA 1.0a, SATA II Extensions, SATA Rev 2.5, SATA Rev 2.6, SATA Rev 3.0
Standards:
	Supported: 8 7 6 5
	Likely used: 8
Configuration:
	Logical		max	current
	cylinders	16383	16383
	heads		16	16
	sectors/track	63	63
	--
	CHS current addressable sectors:   16514064
	LBA    user addressable sectors:  268435455
	LBA48  user addressable sectors:  488397168
	Logical/Physical Sector size:           512 bytes
	device size with M = 1024*1024:      238475 MBytes
	device size with M = 1000*1000:      250059 MBytes (250 GB)
	cache/buffer size  = 16384 KBytes
Capabilities:
	LBA, IORDY(can be disabled)
	Queue depth: 32
	Standby timer values: spec'd by Standard, with device specific minimum
	R/W multiple sector transfer: Max = 16	Current = 16
	DMA: mdma0 mdma1 mdma2 udma0 udma1 udma2 udma3 udma4 udma5 *udma6 
	     Cycle time: min=120ns recommended=120ns
	PIO: pio0 pio1 pio2 pio3 pio4 
	     Cycle time: no flow control=120ns  IORDY flow control=120ns
Commands/features:
	Enabled	Supported:
	   *	SMART feature set
	    	Security Mode feature set
	   *	Power Management feature set
	   *	Write cache                  ★★★キャッシュを有効に
	   *	Look-ahead
	   *	Host Protected Area feature set
	   *	WRITE_BUFFER command
	   *	READ_BUFFER command
	   *	NOP cmd
	   *	DOWNLOAD_MICROCODE
	    	Power-Up In Standby feature set
	   *	SET_FEATURES required to spinup after power up
	    	SET_MAX security extension
	   *	48-bit Address feature set
	   *	Device Configuration Overlay feature set
	   *	Mandatory FLUSH_CACHE
	   *	FLUSH_CACHE_EXT
	   *	SMART error logging
	   *	SMART self-test
	   *	General Purpose Logging feature set
	   *	64-bit World wide name
	   *	{READ,WRITE}_DMA_EXT_GPL commands
	   *	Segmented DOWNLOAD_MICROCODE
	   *	Gen1 signaling speed (1.5Gb/s)
	   *	Gen2 signaling speed (3.0Gb/s)
	   *	Gen3 signaling speed (6.0Gb/s)
	   *	Native Command Queueing (NCQ)
	   *	Host-initiated interface power management
	   *	Phy event counters
	   *	NCQ priority information
	   *	DMA Setup Auto-Activate optimization
	   *	Software settings preservation
	   *	SMART Command Transport (SCT) feature set
	   *	SCT Read/Write Long (AC1), obsolete
	   *	SCT Write Same (AC2)
	   *	SCT Features Control (AC4)
	   *	SCT Data Tables (AC5)
	    	unknown 206[12] (vendor specific)
	    	unknown 206[13] (vendor specific)
Security: 
	Master password revision code = 65534
		supported
	not	enabled
	not	locked
		frozen
	not	expired: security count
		supported: enhanced erase
	40min for SECURITY ERASE UNIT. 40min for ENHANCED SECURITY ERASE UNIT. 
Logical Unit WWN Device Identifier: 50014ee601e91fb5
	NAA		: 5
	IEEE OUI	: 0014ee
	Unique ID	: 601e91fb5
Checksum: correct
$
</pre>

<p>
カーネルパラメータの確認
</p>
<pre class="example">
$ sudo sysctl -a | grep dirty
vm.dirty_background_bytes = 0
vm.dirty_background_ratio = 10
vm.dirty_bytes = 0
vm.dirty_expire_centisecs = 3000
vm.dirty_ratio = 20
vm.dirty_writeback_centisecs = 500
$
</pre>
</div>
</div>

<div id="outline-container-sec-2-2" class="outline-3">
<h3 id="sec-2-2"><span class="section-number-3">2.2</span> テスト用プログラム</h3>
<div class="outline-text-3" id="text-2-2">
<p>
以下のperlスクリプトに無限ループ内で1KBのデータ（ログ１行に相当する？）をファイルへ
の書き込みを行って、=sync= をコールして <code>pdflush</code> を強制的動かさせる。また秒単位で
の書き込み回数（アプリ視点から）を集計して標準出力に出します。
</p>

<div class="org-src-container">

<pre class="src src-perl"><span style="color: #888a85;">#</span><span style="color: #888a85;">!/usr/bin/perl</span>
<span style="color: #729fcf; font-weight: bold;">use</span> <span style="color: #8ae234;">strict</span>;
<span style="color: #729fcf; font-weight: bold;">use</span> <span style="color: #8ae234;">warnings</span>;
<span style="color: #729fcf; font-weight: bold;">use</span> <span style="color: #8ae234;">IO</span>::File;
<span style="color: #729fcf; font-weight: bold;">use</span> <span style="color: #8ae234;">Time</span>::HiRes qw<span style="color: #ad7fa8; font-style: italic;">( usleep gettimeofday tv_interval )</span>;
<span style="color: #729fcf; font-weight: bold;">use</span> <span style="color: #8ae234;">constant</span> DATA =&gt; <span style="color: #ad7fa8; font-style: italic;">"12345678"</span> x 128;   <span style="color: #888a85;"># 1KB&#12398;&#12487;&#12540;&#12479;</span>

<span style="color: #8ae234; font-weight: bold;">my</span> $<span style="color: #ff6347;">io</span> = IO::File-&gt;new(<span style="color: #ad7fa8; font-style: italic;">"test.dat"</span>, <span style="color: #ad7fa8; font-style: italic;">'w'</span>) or <span style="color: #729fcf; font-weight: bold;">die</span> $!;
<span style="color: #8ae234; font-weight: bold;">my</span> $<span style="color: #ff6347;">write_count</span> = 0;
<span style="color: #8ae234; font-weight: bold;">my</span> $<span style="color: #ff6347;">current_second</span> = 0;
<span style="color: #8ae234; font-weight: bold;">my</span> $<span style="color: #ff6347;">last_second</span> = 0;
<span style="color: #8ae234; font-weight: bold;">my</span> $<span style="color: #ff6347;">start_time</span> = Time::HiRes::time;

<span style="color: #729fcf; font-weight: bold;">while</span> (1) {

    $<span style="color: #ff6347;">io</span>-&gt;syswrite(DATA);
    <span style="color: #888a85;"># &#24375;&#21046;&#26360;&#12365;&#36796;&#12415;</span>
    IO::Handle::sync($<span style="color: #ff6347;">io</span>);

    <span style="color: #888a85;"># &#26178;&#21051;&#24773;&#22577;&#12392;&#26360;&#12365;&#36796;&#12415;&#22238;&#25968;&#12398;&#20986;&#21147;&#20966;&#29702;</span>
    $<span style="color: #ff6347;">current_second</span> = sprintf(<span style="color: #ad7fa8; font-style: italic;">"%.0f"</span>, Time::HiRes::time - $<span style="color: #ff6347;">start_time</span>);
    <span style="color: #729fcf; font-weight: bold;">if</span> ($<span style="color: #ff6347;">current_second</span> != $<span style="color: #ff6347;">last_second</span>) {
        print STDOUT <span style="color: #ad7fa8; font-style: italic;">"$last_second \t$write_count\n"</span>;
        $<span style="color: #ff6347;">last_second</span> = $<span style="color: #ff6347;">current_second</span>;
        $<span style="color: #ff6347;">write_count</span> = 0;
    }
    $<span style="color: #ff6347;">write_count</span> += 1;
}
</pre>
</div>
</div>
</div>

<div id="outline-container-sec-2-3" class="outline-3">
<h3 id="sec-2-3"><span class="section-number-3">2.3</span> sarコマンドでIOPSを確認する</h3>
<div class="outline-text-3" id="text-2-3">
<p>
<code>sar</code> コマンドを利用して実測IOPS値を確認することが出来ます。出力結果の４列目の <code>wtps</code>
はIOPSに相当します。
</p>
<pre class="example">
$ sar -b 1 10
Linux 3.15.2-1-ARCH (*******) 	2014年07月08日 	_x86_64_	(4 CPU)

16時47分08秒       tps      rtps      wtps   bread/s   bwrtn/s
16時47分09秒    136.00      1.00    135.00     24.00   1008.00
16時47分10秒    120.00      0.00    120.00      0.00    912.00
16時47分11秒    143.00      0.00    143.00      0.00   1112.00
16時47分12秒    130.00      0.00    130.00      0.00    976.00
16時47分13秒     53.00      0.00     53.00      0.00    400.00
16時47分14秒      0.00      0.00      0.00      0.00      0.00
16時47分15秒      0.00      0.00      0.00      0.00      0.00
16時47分16秒      7.00      7.00      0.00    296.00      0.00
16時47分17秒      0.00      0.00      0.00      0.00      0.00
16時47分18秒      0.00      0.00      0.00      0.00      0.00
平均値:      58.90      0.80     58.10     32.00    440.80
$
</pre>
</div>
</div>

<div id="outline-container-sec-2-4" class="outline-3">
<h3 id="sec-2-4"><span class="section-number-3">2.4</span> 測定結果</h3>
<div class="outline-text-3" id="text-2-4">
<p>
ファイル出力処理スクリプトの出力結果。
</p>
<ul class="org-ul">
<li>１列目： 実行開始からの秒数
</li>
<li>２列目： 秒間 <code>sync</code> コール回数
</li>
</ul>
<pre class="example">
$ ./simple_iops_test.pl
0 	13
1 	25
2 	24
3 	24
4 	30
5 	30
6 	22
7 	13
8 	30
9 	26
10 	25
11 	25
12 	27
13 	28
$
</pre>

<p>
IOPSの実測値
</p>
<pre class="example">
$ sar -b 1 1000
Linux 3.15.2-1-ARCH (******) 	2014年07月08日 	_x86_64_	(4 CPU)

16時49分06秒       tps      rtps      wtps   bread/s   bwrtn/s
16時49分07秒     79.00      0.00     79.00      0.00    624.00
16時49分08秒    124.00      0.00    124.00      0.00    936.00
16時49分09秒    122.00      0.00    122.00      0.00   1824.00
16時49分10秒    125.00      0.00    125.00      0.00    944.00
16時49分11秒    150.00      0.00    150.00      0.00   1128.00
16時49分12秒    148.00      0.00    148.00      0.00   1144.00
16時49分13秒    129.00     30.00     99.00   2488.00    856.00
16時49分14秒    125.00     48.00     77.00   6264.00    960.00
16時49分15秒    150.00      0.00    150.00      0.00   1128.00
16時49分16秒    127.00      0.00    127.00      0.00    952.00
16時49分17秒    128.00      0.00    128.00      0.00    992.00
16時49分18秒    125.00      0.00    125.00      0.00    944.00
16時49分19秒    132.00      0.00    132.00      0.00   1008.00
16時49分20秒    140.00      0.00    140.00      0.00   1064.00
16時49分21秒     66.00      0.00     66.00      0.00    488.00

16時49分21秒      0.00      0.00      0.00      0.00      0.00
平均値:     123.60      5.16    118.44    578.45    990.88
$
</pre>

<p>
無限ループ処理中にほどんどんのIOが <code>write</code> であることが分かります。
また、ディスクへの秒間書き込み回数が120〜150ですが、アプリ側の秒間書き込み回数
が約24〜30程度です。
</p>

<font color="red"><strong>
<p>
つまり１回の <code>sync</code> コールで平均5回のディスクIOが発生したのようです。
IOPSが150ぐらいのHDDなら、平均で秒間ログ30件しか吐けない結果になります。
</p>
</strong></font>

<p>
別途単発のWrite処理を確認したところ、確かに１回の <code>sync</code> コール ５回のIOが起きたこと
が確認されました。（※内部の仕組みはまたわかっていないです。iNodeの更新などメタデータ
ブロックの更新によるものと推測しています。）
</p>

<p>
SSD、Fusion-ioの様なIOPSを稼げるストレージについて、机上で計算した結果は以下になりま
す。
</p>

<table border="2" cellspacing="0" cellpadding="6" rules="groups" frame="hsides">


<colgroup>
<col  class="left" />

<col  class="left" />

<col  class="left" />

<col  class="left" />
</colgroup>
<thead>
<tr>
<th scope="col" class="left">&#xa0;</th>
<th scope="col" class="left">IOPS</th>
<th scope="col" class="left">秒間syncできる回数</th>
<th scope="col" class="left">備考</th>
</tr>
</thead>
<tbody>
<tr>
<td class="left">Fusion-io ioDrive2</td>
<td class="left">9,608,000</td>
<td class="left">1,921,600</td>
<td class="left">&#xa0;</td>
</tr>

<tr>
<td class="left">SSD (SATA 6 Gbit/s)</td>
<td class="left">120,000</td>
<td class="left">24,000</td>
<td class="left">&#xa0;</td>
</tr>

<tr>
<td class="left">SSD (PCIe)</td>
<td class="left">250,000</td>
<td class="left">50,000</td>
<td class="left">&#xa0;</td>
</tr>

<tr>
<td class="left">SSD (SATA 6 Gbit/s)</td>
<td class="left">90,000</td>
<td class="left">18,000</td>
<td class="left">市販のSDD</td>
</tr>
</tbody>
</table>

<p>
秒間１万回以上書けるってホントウ？ SSD持ってないので確認出来ない。
</p>
</div>
</div>
</div>

<div id="outline-container-sec-3" class="outline-2">
<h2 id="sec-3"><span class="section-number-2">3</span> 参考リンク</h2>
<div class="outline-text-2" id="text-3">
<ul class="org-ul">
<li><a href="http://d.hatena.ne.jp/naoya/20070523/1179938637">Linux I/O のお話 write 編</a>
</li>
<li><a href="http://d.hatena.ne.jp/akuwano/20120223/1330016926">iops確認するための1Liner</a>
</li>
</ul>
</div>
</div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[メモ]Otcopressにプラグインを導入する-その１]]></title>
    <link href="http://luozengbin.github.io/blog/2014-07-01-%5B%E3%83%A1%E3%83%A2%5Dotcopress%E3%81%AB%E3%83%97%E3%83%A9%E3%82%B0%E3%82%A4%E3%83%B3%E3%82%92%E5%B0%8E%E5%85%A5%E3%81%99%E3%82%8B-%E3%81%9D%E3%81%AE%EF%BC%91.html"/>
    <updated>2014-07-01T00:00:00+09:00</updated>
    <id>http://luozengbin.github.io/blog/[メモ]otcopressにプラグインを導入する-その１</id>
    <content type="html"><![CDATA[<div id="table-of-contents">
<h2>Table of Contents</h2>
<div id="text-table-of-contents">
<ul>
<li><a href="#sec-1">1. TagCloudとカテゴリリスト</a></li>
<li><a href="#sec-2">2. QRコード</a></li>
<li><a href="#sec-3">3. 月間アーカイブ</a></li>
<li><a href="#sec-4">4. 参考リンク</a></li>
</ul>
</div>
</div>

<div id="outline-container-sec-1" class="outline-2">
<h2 id="sec-1"><span class="section-number-2">1</span> TagCloudとカテゴリリスト</h2>
<div class="outline-text-2" id="text-1">
<p>
<a href="https://github.com/tokkonopapa/octopress-tagcloud">このから</a> ダウンロードする
</p>
<pre class="example">
[akira@jizai tmp]$ git clone https://github.com/tokkonopapa/octopress-tagcloud.git
Cloning into 'octopress-tagcloud'...
remote: Reusing existing pack: 65, done.
remote: Total 65 (delta 0), reused 0 (delta 0)
Unpacking objects: 100% (65/65), done.
Checking connectivity... done.
[akira@jizai tmp]$
</pre>

<p>
<code>octopress-tagcloud/plugin/</code> 配下のファイルを <code>octopress/plugins</code> へコピーする。
<code>octopress-tagcloud/source/</code> 配下のファイルを <code>octopress/source</code> へコピーする。
</p>

<pre class="example">
[akira@jizai tmp]$ cd octopress-tagcloud/
[akira@jizai octopress-tagcloud]$ cp -rfv plugins/* ~/.emacs.d/blogs/octopress/plugins
`plugins/tag_cloud.rb' -&gt; `/home/akira/.emacs.d/blogs/octopress/plugins/tag_cloud.rb'
[akira@jizai octopress-tagcloud]$ cp -rfv source/* ~/.emacs.d/blogs/octopress/source
`source/_includes/custom/asides/tag_cloud.html' -&gt; `/home/akira/.emacs.d/blogs/octopress/source/_includes/custom/asides/tag_cloud.html'
`source/_includes/custom/asides/category_list.html' -&gt; `/home/akira/.emacs.d/blogs/octopress/source/_includes/custom/asides/category_list.html'
[akira@jizai octopress-tagcloud]$
</pre>

<p>
<code>octopress/_config.yml</code> の <code>default_asides</code> 項目に <code>custom/asides/tag_cloud.html</code> と
<code>custom/asides/category_list.html</code> を追加する。
</p>
<pre class="example">
default_asides: [...., custom/asides/tag_cloud.html, custom/asides/category_list.html, ..... ]
</pre>

<p>
このままだとTagCloudカテゴリリストが同じものになったしまうので、<a href="http://komasaru.github.io/blog/2012/12/19/octopress-add-tag-cloud/">ここ</a> と <a href="http://rcmdnk.github.io/blog/2013/04/12/blog-octopress/">ここ</a> の記事を
参考してカテゴライズ機能を流用してTagCloud機能を実装する。以下TagCloud機能を実現する
ためには変更及び追加したファイル一覧です。
</p>

<pre class="example">
[akira@jizai octopress]$ git status
Changes not staged for commit:
  (use "git add &lt;file&gt;..." to update what will be committed)
  (use "git checkout -- &lt;file&gt;..." to discard changes in working directory)
  (commit or discard the untracked or modified content in submodules)

	modified:   _config.yml
	modified:   sass/partials/_archive.scss
	modified:   sass/partials/_blog.scss
	modified:   source/_includes/archive_post.html
	modified:   source/_includes/post/categories.html
	modified:   source/_layouts/page.html
	modified:   source/_layouts/post.html

Untracked files:
  (use "git add &lt;file&gt;..." to include in what will be committed)

	plugins/tag_cloud.old.rb
	plugins/tag_cloud.rb
	plugins/tag_generator.rb
	source/_includes/custom/asides/related.html
	source/_includes/custom/asides/tag_cloud.html
	source/_includes/custom/tag_feed.xml
	source/_includes/post/tags.html
	source/_layouts/tag_index.html
</pre>

<p>
記事書く際にヘッダの属性リストに <code>tags</code> と <code>category</code> を記述するすればOKです。
</p>

<pre class="example">
---
title: "[メモ]Otcopressにプラグインを導入する-その１"
date: 2014-07-01
layout: post
category: misc
tags: Octopress blog
published: true
comments: true
---
</pre>
</div>
</div>

<div id="outline-container-sec-2" class="outline-2">
<h2 id="sec-2"><span class="section-number-2">2</span> QRコード</h2>
<div class="outline-text-2" id="text-2">
<p>
Google Chart APIで記事URLのQRコードイメージを自動的に生成する。
</p>

<p>
<code>octopress/source/_includes/custom/asides/qrcode.html</code>
</p>
<pre class="example">
&lt;section&gt;
  &lt;!-- create at 2017/07/01 
       Google Chart Tools: Infographics
       https://developers.google.com/chart/infographics/docs/qr_codes?csw=1
  --&gt;

  &lt;div style="position: relative; text-align: center"&gt;

    &lt;!-- Google Chart API でQRコード取得 --&gt;
    &lt;img src="http://chart.apis.google.com/chart?chs=180x180&amp;amp;cht=qr&amp;amp;choe=UTF-8&amp;amp;chl=http://luozengbin.github.io/blog/2014-07-01-%5B%E3%83%A1%E3%83%A2%5Dotcopress%E3%81%AB%E3%83%97%E3%83%A9%E3%82%B0%E3%82%A4%E3%83%B3%E3%82%92%E5%B0%8E%E5%85%A5%E3%81%99%E3%82%8B-%E3%81%9D%E3%81%AE%EF%BC%91.html" alt="post-qrcode" height="180" width="180" /&gt;

    &lt;!-- サイトのfaviconを重ねて表示する --&gt;
    &lt;div style="position: absolute; top: 75px; width: 100%; margin: 0 auto; text-align: center"&gt;
      &lt;img style="border: 0.2em solid #FFF;" src="http://luozengbin.github.io/favicon.png" alt="post-qrcode" height="30" width="30" /&gt;
    &lt;/div&gt;
  &lt;/div&gt;

&lt;/section&gt;
</pre>

<p>
<code>octopress/_config.yml</code> の <code>default_asides</code> 項目に <code>custom/asides/qrcode.html</code> を追加
する。
</p>
<pre class="example">
default_asides: [...., custom/asides/qrcode.html, ..... ]
</pre>
</div>
</div>


<div id="outline-container-sec-3" class="outline-2">
<h2 id="sec-3"><span class="section-number-2">3</span> 月間アーカイブ</h2>
<div class="outline-text-2" id="text-3">
<p>
作成中&#x2026;
</p>
</div>
</div>

<div id="outline-container-sec-4" class="outline-2">
<h2 id="sec-4"><span class="section-number-2">4</span> 参考リンク</h2>
<div class="outline-text-2" id="text-4">
<ul class="org-ul">
<li><a href="http://komasaru.github.io/blog/2012/12/19/octopress-add-tag-cloud/">Octopress - タグクラウドの追加</a>
</li>
<li><a href="http://rcmdnk.github.io/blog/2013/04/12/blog-octopress/">Octopressでのタグの運用</a>
</li>
<li><a href="http://komasaru.github.io/blog/2013/02/15/octopress-monthly-archives/">Octopress - 月別アーカイブ！</a>
</li>
<li><a href="http://rcmdnk.github.io/blog/2013/10/01/blog-octopress/">月間アーカイブ for Octopress</a>
</li>
</ul>
</div>
</div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[検証]SSHトンネル機能でVPN環境の構築]]></title>
    <link href="http://luozengbin.github.io/blog/2014-06-30-%5B%E6%A4%9C%E8%A8%BC%5DSSH%E3%83%88%E3%83%B3%E3%83%8D%E3%83%AB%E6%A9%9F%E8%83%BD%E3%81%A7VPN%E7%92%B0%E5%A2%83%E3%81%AE%E6%A7%8B%E7%AF%89.html"/>
    <updated>2014-06-30T00:00:00+09:00</updated>
    <id>http://luozengbin.github.io/blog/[検証]SSHトンネル機能でVPN環境の構築</id>
    <content type="html"><![CDATA[<div id="table-of-contents">
<h2>Table of Contents</h2>
<div id="text-table-of-contents">
<ul>
<li><a href="#sec-1">1. SSHトンネリング</a></li>
<li><a href="#sec-2">2. TUNデバイス利用方式</a>
<ul>
<li><a href="#sec-2-1">2.1. 1.sshdに対してトンネリングを有効化する</a></li>
<li><a href="#sec-2-2">2.2. 2.rootユーザログインできるように公開鍵を登録する</a></li>
<li><a href="#sec-2-3">2.3. 3.SSHトンネルを開設する</a></li>
<li><a href="#sec-2-4">2.4. 4.各TUNデバイスにIPアドレスを付与する</a></li>
<li><a href="#sec-2-5">2.5. 5.区間１トンネルと区間２トンネルを結び付ける</a></li>
</ul>
</li>
<li><a href="#sec-3">3. TAPデバイス利用方式</a>
<ul>
<li><a href="#sec-3-1">3.1. 区間１の設定</a></li>
<li><a href="#sec-3-2">3.2. 区間２の設定</a></li>
</ul>
</li>
<li><a href="#sec-4">4. おまけに</a></li>
<li><a href="#sec-5">5. 参考リンク</a></li>
</ul>
</div>
</div>
<p>
友人に自宅のLAN内のコンテンツを共有するため、VPNについて検証しました。
自宅のルータはYamahaのRTX810です。このルータのVPN機能を使えば簡単に出来てしまうので面
白くないと思って、敢えてSSHのトンネル機能を使って0円VPN環境を構築してみた。
</p>

<p>
更に難易度を上げて、自宅WAN側のグローバルIPを公開せずにAmazonEC2インスタンスをVPN経路
に挟むことにしました。
</p>

<p>
<!-- more -->
</p>

<p>
通信経路イメージは以下のようになります。
</p>
<ul class="org-ul">
<li>区間１、友人PCとAmazonEC2間SSHトンネリングして通信する
</li>
<li>区間２、AmazonEC2間とRaspberry Pi間SSHトンネリングして通信する
</li>
<li>AmazonEC2インスタンスにて２つのSSHトンネルをethernet bridgeかiptablesによる結び付ける
</li>
<li>区間２のRaspberry PiにてProxy ARPかiptablesによるLANとの通信経路を制御する
</li>
</ul>

<pre class="example">
+-------------区間１---------+      +-------------区間２-----------------------+

                                                        ________________________
                                                       /      自宅LAN
                                                      |
                                                     /
                                __                  /
                            ___/  \_               |
+--------------+          _/        \__           / (DNAT)         +---------------+
|              |         /  (sshd)     \          +---------+      |   (sshd)      |
|  Tomodati    +--ssh--- |  Amazon EC2  ---ssh----+ RTX810  +------+ Raspberry Pi  |
|              |         \_           __/         +---------+      |               |
+--------------+           \__     __/            \                +---------------+
                              \___/                |
                                                    \
                                                     \
                                                      |
                                                       \________________________
</pre>

<div id="outline-container-sec-1" class="outline-2">
<h2 id="sec-1"><span class="section-number-2">1</span> SSHトンネリング</h2>
<div class="outline-text-2" id="text-1">
<table border="2" cellspacing="0" cellpadding="6" rules="groups" frame="hsides">


<colgroup>
<col  class="left" />

<col  class="left" />

<col  class="left" />
</colgroup>
<thead>
<tr>
<th scope="col" class="left">方式</th>
<th scope="col" class="left">通信イメージ</th>
<th scope="col" class="left">broadcast</th>
</tr>
</thead>
<tbody>
<tr>
<td class="left">ppp over ssh</td>
<td class="left">トンネルの両端に仮想ダイヤルアップPPPで結び付ける</td>
<td class="left">☓</td>
</tr>

<tr>
<td class="left">TUNデバイス</td>
<td class="left">トンネルの両端に仮想TUNデバイスで結び付ける</td>
<td class="left">△</td>
</tr>

<tr>
<td class="left">TAPデバイス</td>
<td class="left">トンネルの両端に仮想tapデバイスで結び付ける</td>
<td class="left">◯</td>
</tr>
</tbody>
</table>

<ul class="org-ul">
<li>Point-to-Point TUN DeviceTUN
<ul class="org-ul">
<li>TUNデバイスはLayer3をエミュレートし、IPフレームを転送します。
</li>
<li>IP-in-IP トンネリング (Point-to-Point: PPP通信と似ている)
</li>
<li>GRE トンネリング (※未確認)
</li>
</ul>
</li>
<li>Ethernet TAP Device
<ul class="org-ul">
<li>TAPデバイスはLayer2(Ethernet)をエミュレートし、Ethernetフレームを転送します。
</li>
</ul>
</li>
</ul>

<p>
TUNデバイスとTAPデバイス利用するに当たって、 <code>tun</code> というカーネルモジュールが必要とし
ます。 SSHトンネリング時に自動的にロードしてくれます。
</p>

<pre class="example">
[akira@tomodati ~]$ modinfo tun
filename:       /lib/modules/3.15.2-1-ARCH/kernel/drivers/net/tun.ko.gz
alias:          devname:net/tun
alias:          char-major-10-200
license:        GPL
author:         (C) 1999-2004 Max Krasnyansky &lt;maxk@qualcomm.com&gt;
description:    Universal TUN/TAP device driver
depends:
intree:         Y
vermagic:       3.15.2-1-ARCH SMP preempt mod_unload modversions
[akira@tomodati ~]$
</pre>

<p>
<code>tun</code> カーネルモジュールのデバイス初期化処理のコード（カーネルバージョン:3.12）
</p>

<div class="org-src-container">

<pre class="src src-c"><span style="color: #888a85;">/* </span><span style="color: #888a85;">Initialize net device. </span><span style="color: #888a85;">*/</span>
<span style="color: #729fcf; font-weight: bold;">static</span> <span style="color: #8ae234; font-weight: bold;">void</span> <span style="color: #edd400; font-weight: bold;">tun_net_init</span>(<span style="color: #729fcf; font-weight: bold;">struct</span> <span style="color: #8ae234; font-weight: bold;">net_device</span> *<span style="color: #ff6347;">dev</span>)
{
    <span style="color: #729fcf; font-weight: bold;">struct</span> <span style="color: #8ae234; font-weight: bold;">tun_struct</span> *<span style="color: #ff6347;">tun</span> = netdev_priv(dev);

    <span style="color: #729fcf; font-weight: bold;">switch</span> (tun-&gt;flags &amp; TUN_TYPE_MASK) {
    <span style="color: #729fcf; font-weight: bold;">case</span> TUN_TUN_DEV:
        dev-&gt;netdev_ops = &amp;tun_netdev_ops;

        <span style="color: #888a85;">/* </span><span style="color: #888a85;">Point-to-Point TUN Device </span><span style="color: #888a85;">*/</span>
        dev-&gt;hard_header_len = 0;
        dev-&gt;addr_len = 0;
        dev-&gt;mtu = 1500;

        <span style="color: #888a85;">/* </span><span style="color: #888a85;">Zero header length </span><span style="color: #888a85;">*/</span>
        dev-&gt;type = ARPHRD_NONE;
        dev-&gt;flags = IFF_POINTOPOINT | IFF_NOARP | IFF_MULTICAST;
        dev-&gt;tx_queue_len = TUN_READQ_SIZE;  <span style="color: #888a85;">/* </span><span style="color: #888a85;">We prefer our own queue length </span><span style="color: #888a85;">*/</span>
        <span style="color: #729fcf; font-weight: bold;">break</span>;

    <span style="color: #729fcf; font-weight: bold;">case</span> TUN_TAP_DEV:
        dev-&gt;netdev_ops = &amp;tap_netdev_ops;
        <span style="color: #888a85;">/* </span><span style="color: #888a85;">Ethernet TAP Device </span><span style="color: #888a85;">*/</span>
        ether_setup(dev);
        dev-&gt;priv_flags &amp;= ~IFF_TX_SKB_SHARING;
        dev-&gt;priv_flags |= IFF_LIVE_ADDR_CHANGE;

        eth_hw_addr_random(dev);

        dev-&gt;tx_queue_len = TUN_READQ_SIZE;  <span style="color: #888a85;">/* </span><span style="color: #888a85;">We prefer our own queue length </span><span style="color: #888a85;">*/</span>
        <span style="color: #729fcf; font-weight: bold;">break</span>;
    }
}
</pre>
</div>

<p>
TUNデバイスのIP-in-IP方式とppp方式どちらもPPPプロトコルを使ってSSHトンネル両端間で通信
するため、本検証ではppp方式を検証対象外としました。
</p>
</div>
</div>

<div id="outline-container-sec-2" class="outline-2">
<h2 id="sec-2"><span class="section-number-2">2</span> TUNデバイス利用方式</h2>
<div class="outline-text-2" id="text-2">
<p>
TUNデバイスでトンネリングする、iptablesとルーティングテーブルで交通を整理する。
</p>

<ul class="org-ul">
<li>区間１:SSHトンネルでTomodatiとAmazonEC2間Point-To-Pointで通信できるようにする
</li>
<li>区間２:SSHトンネルでAmazonEC2とRaspberryPi間Point-To-Pointで通信できるようにする
</li>
<li>AmazonEC2にて区間１と区間２のパケットをルーティングさせる（★ルータ的な役割）
</li>
</ul>

<p>
以下は通信イメージ図です。区間１と区間２リンク層の物理NICを表していない。
</p>
<pre class="example">
       +-----------区間１---------+                  +----------区間２------+
       |                          |                  |                      |
       |                          |                  |                      |
 &lt;&lt;Tomodati&gt;&gt;              &lt;&lt;AmazonEC2&gt;&gt;                             &lt;&lt;RaspberryPi&gt;&gt;
┏━━━━━━━┓        ┏━━━━━━━━━━━━━━━━┓      ┏━━━━━━━━━━━┓
┃              ┃        ┃[sshd]                          ┃      ┃[sshd]                ┃
┃    ┏━━┓  ┃ &lt;ssh&gt;  ┃  ┏━━┓            ┏━━┓  ┃&lt;ssh&gt; ┃  ┏━━┓   ┏━━┓ ┃
┃    ┃tun0┣━╋━━━━╋━┫tun0┃&gt;&gt;&gt; SNAT &gt;&gt;&gt;┃tun1┣━╋━━━╋━┫tun1┃   ┃eth0┣━━192.168.100.0/24
┃    ┗━━┛  ┃        ┃  ┗━━┛            ┗━━┛  ┃      ┃  ┗━━┛   ┗━━┛ ┃         ^
┃  192.168.3.1 ┃        ┃192.168.3.2          192.168.4.1┃      ┃ 192.168.4.2          ┃         |
┗━━━━━━━┛        ┗━━━━━━━━━━━━━━━━┛      ┗━━━━━━━━━━━┛         |
        |                                                                                              |
        |                      多重VPN経路を通して、192.168.100.0/24へアクセスする                     |
        +----------------------------------------------------------------------------------------------+
</pre>

<p>
構築手順
</p>
<ul class="org-ul">
<li>1. sshdに対してトンネリングを有効化する
</li>
<li>2. rootユーザログインできるように公開鍵を登録する ※1
</li>
<li>3. SSHトンネルを開設する
</li>
<li>4. 各TUNデバイスにIPアドレスを付与する
</li>
<li>5. 区間１トンネルと区間２トンネルを結び付ける
</li>
</ul>

<p>
※1: sshログイン時にtapデバイスファイルを自動生成するためにクライアント側とサーバ側に
     root特権を持つアカウントを利用せざるを得ない。
</p>
</div>

<div id="outline-container-sec-2-1" class="outline-3">
<h3 id="sec-2-1"><span class="section-number-3">2.1</span> 1.sshdに対してトンネリングを有効化する</h3>
<div class="outline-text-3" id="text-2-1">
<p>
AmazonEC2インスタンスとRaspberryPiが設定対象となります。 <code>/etc/ssh/sshd_config</code> ファイ
ルに以下の内容を追加して、 <code>sshd</code> サービスをリロードする。
</p>

<pre class="example">
########################################################################
# トンネリング機能を有効化する
#    point-to-point … Layer 3 のトンネリングのみを許可 (TUNデバイスを使用)
#    ethernet … Layer 2 のトンネリングのみを許可 (tapデバイスを使用)
#    yes … 両方のタイプのトンネリングを許可 (クライアントがトンネリングのタイプを選べる)
#    no … トンネリングを許可しない
########################################################################
PermitTunnel yes
</pre>
</div>
</div>

<div id="outline-container-sec-2-2" class="outline-3">
<h3 id="sec-2-2"><span class="section-number-3">2.2</span> 2.rootユーザログインできるように公開鍵を登録する</h3>
<div class="outline-text-3" id="text-2-2">
<p>
区間１はAmazonEC2へのログインですので、EC2インスタンス作成時に生成された秘密鍵でログ
インできる。
</p>

<p>
区間２のログインは公開鍵方式を使うため、以下の手順で鍵生成と登録を実施する。
</p>
<ul class="org-ul">
<li>Tomodatiにて <code>ssh-keygen</code> で鍵ペアを作成する。
</li>
<li>生成された公開鍵 <code>id_rsa.pub</code> の内容をAmazonEC2の <code>/root/.ssh/authorized_keys</code> に追加する。
</li>
</ul>
</div>
</div>

<div id="outline-container-sec-2-3" class="outline-3">
<h3 id="sec-2-3"><span class="section-number-3">2.3</span> 3.SSHトンネルを開設する</h3>
<div class="outline-text-3" id="text-2-3">
<p>
rootユーザでsshコマンドにオプションを付けてログインすることでSSHトンネルが開設される。
一々オプションを指定するのが面倒なので、 <code>/root/.ssh/config</code> にまとめて書きましょう。
</p>

<p>
区間１のSSHトンネルを開設するための <code>/root/.ssh/config</code>
</p>
<pre class="example">
Host     amazon-vpn
  HostName        xxxxxxxx.compute.amazonaws.com   ★AmazonEC2インスタンスのPublic DNS
  User            root
  IdentityFile    /tmp/private-ec2.pem             ★秘密鍵
  LogLevel        DEBUG
  Tunnel          point-to-point                   ★tun方式
  TunnelDevice    0:0                              ★デバイスペアの番号(tun0 ... tun0)
  RequestTTY      no
  PermitLocalCommand yes
  LocalCommand    /tmp/setup_tun0_client           ★ログイン成功後ローカルで実行するコマンドの定義
</pre>

<p>
区間２のSSHトンネルを開設するための <code>/root/.ssh/config</code>
</p>
<pre class="example">
Host    jitaku-vpn
  HostName        xxxxx.mydns.jp  ★RTX810のWAN側のグローバルIP
  User            root
  Port            22              ★SSHポート
  LogLevel        DEBUG
  Tunnel          point-to-point
  TunnelDevice    1:1
  RequestTTY      no
  PermitLocalCommand yes
  LocalCommand    /tmp/setup_tun1_client
</pre>

<p>
区間１のSSHトンネル起動時のログ
</p>
<pre class="example">
[root@tomodati ~]# ssh amazon-vpn
debug1: permanently_set_uid: 0/0
debug1: permanently_drop_suid: 0
debug1: identity file /tmp/private-ec2.pem type -1
debug1: identity file /tmp/private-ec2.pem-cert type -1
debug1: Enabling compatibility mode for protocol 2.0
debug1: Local version string SSH-2.0-OpenSSH_6.6.1
debug1: Remote protocol version 2.0, remote software version OpenSSH_6.6.1p1 Ubuntu-2ubuntu2
debug1: match: OpenSSH_6.6.1p1 Ubuntu-2ubuntu2 pat OpenSSH_6.6.1* compat 0x04000000
debug1: SSH2_MSG_KEXINIT sent
debug1: SSH2_MSG_KEXINIT received
debug1: kex: server-&gt;client aes128-ctr hmac-md5-etm@openssh.com none
debug1: kex: client-&gt;server aes128-ctr hmac-md5-etm@openssh.com none
debug1: sending SSH2_MSG_KEX_ECDH_INIT
debug1: expecting SSH2_MSG_KEX_ECDH_REPLY
debug1: Server host key: ECDSA d8:71:41:32:08:0d:8a:4c:24:6a:74:45:21:7d:ef:0c
debug1: Host 'xxxxxxxx.compute.amazonaws.com' is known and matches the ECDSA host key.
debug1: Found key in /root/.ssh/known_hosts:3
debug1: ssh_ecdsa_verify: signature correct
debug1: SSH2_MSG_NEWKEYS sent
debug1: expecting SSH2_MSG_NEWKEYS
debug1: SSH2_MSG_NEWKEYS received
debug1: Roaming not allowed by server
debug1: SSH2_MSG_SERVICE_REQUEST sent
debug1: SSH2_MSG_SERVICE_ACCEPT received
debug1: Authentications that can continue: publickey
debug1: Next authentication method: publickey
debug1: Trying private key: /tmp/private-ec2.pem
debug1: key_parse_private2: missing begin marker
debug1: read PEM private key done: type RSA
debug1: Authentication succeeded (publickey).
Authenticated to xxxxxxxx.compute.amazonaws.com.
debug1: Requesting tun unit 0 in mode 1
debug1: sys_tun_open: tun0 mode 1 fd 3
debug1: channel 0: new [tun]
debug1: channel 1: new [client-session]
debug1: Requesting no-more-sessions@openssh.com
debug1: Entering interactive session.
</pre>

<p>
Tomodatiに <code>tun0</code> デバイスが生成されたことを確認する。
</p>
<pre class="example">
[root@tomodati ~]# ip link show | grep tun0
11: tun0: &lt;POINTOPOINT,MULTICAST,NOARP,UP,LOWER_UP&gt; mtu 1500 qdisc pfifo_fast state UNKNOWN mode DEFAULT group default qlen 500
</pre>

<p>
区間２開設後、AmazonEC2に <code>tun1</code> デバイスが生成されたことを確認する。
</p>
<pre class="example">
root@ip-xxxxxxxx:~# ip link show | grep tun
★tun0 は区間１開設時生成されたデバイス
26: tun0: &lt;POINTOPOINT,MULTICAST,NOARP,UP,LOWER_UP&gt; mtu 1500 qdisc pfifo_fast state UNKNOWN mode DEFAULT group default qlen 500

★tun1 は区間２開設時生成されたデバイス
27: tun1: &lt;POINTOPOINT,MULTICAST,NOARP,UP,LOWER_UP&gt; mtu 1500 qdisc pfifo_fast state UNKNOWN mode DEFAULT group default qlen 500
root@ip-xxxxxxxx:~#
</pre>

<p>
RaspberryPiに生成された <code>tun1</code> デバイスを確認する
</p>
<pre class="example">
[root@pipi ~]# ifconfig | grep tun
tun1: flags=4305&lt;UP,POINTOPOINT,RUNNING,NOARP,MULTICAST&gt;  mtu 1500
[root@pipi ~]#
</pre>
</div>
</div>

<div id="outline-container-sec-2-4" class="outline-3">
<h3 id="sec-2-4"><span class="section-number-3">2.4</span> 4.各TUNデバイスにIPアドレスを付与する</h3>
<div class="outline-text-3" id="text-2-4">
<p>
Tomodatiの <code>tun0</code> デバイスに <code>192.168.3.1</code> アドレスを指定する、Point-To-Point通信のた
め、対向側のTUNデバイスのIPアドレスも指定する。
</p>
<pre class="example">
★IPアドレス指定
[root@tomodati ~]# ifconfig tun0 192.168.3.1 pointopoint 192.168.3.2

★IPアドレス確認
[root@tomodati ~]# ifconfig tun0
tun0: flags=4305&lt;UP,POINTOPOINT,RUNNING,NOARP,MULTICAST&gt;  mtu 1500
        inet 192.168.3.1  netmask 255.255.255.255  destination 192.168.3.2
        unspec 00-00-00-00-00-00-00-00-00-00-00-00-00-00-00-00  txqueuelen 500  (UNSPEC)
        RX packets 0  bytes 0 (0.0 B)
        RX errors 0  dropped 0  overruns 0  frame 0
        TX packets 0  bytes 0 (0.0 B)
        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0

★ルーティングテーブルに自動で追加された経路
[root@tomodati ~]# ip route show | grep tun
192.168.3.2 dev tun0  proto kernel  scope link  src 192.168.3.1
[root@tomodati ~]#
</pre>

<p>
AmazonEC2インスタンスのTUNデバイスにアドレスを指定する。
</p>
<pre class="example">
★区間１：tun0デバイスのIP指定
root@ip-xxxxxxxx:~# ifconfig tun0 192.168.3.2 pointopoint 192.168.3.1
root@ip-xxxxxxxx:~# ifconfig tun0
tun0      Link encap:UNSPEC  HWaddr 00-00-00-00-00-00-00-00-00-00-00-00-00-00-00-00
          inet addr:192.168.3.2  P-t-P:192.168.3.1  Mask:255.255.255.255
          UP POINTOPOINT RUNNING NOARP MULTICAST  MTU:1500  Metric:1
          RX packets:0 errors:0 dropped:0 overruns:0 frame:0
          TX packets:0 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:500 
          RX bytes:0 (0.0 B)  TX bytes:0 (0.0 B)

★区間２：tun1デバイスのIP指定
root@ip-xxxxxxxx:~# ifconfig tun1 192.168.4.1 pointopoint 192.168.4.2
root@ip-xxxxxxxx:~# ifconfig tun1
tun1      Link encap:UNSPEC  HWaddr 00-00-00-00-00-00-00-00-00-00-00-00-00-00-00-00
          inet addr:192.168.4.1  P-t-P:192.168.4.2  Mask:255.255.255.255
          UP POINTOPOINT RUNNING NOARP MULTICAST  MTU:1500  Metric:1
          RX packets:0 errors:0 dropped:0 overruns:0 frame:0
          TX packets:0 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:500 
          RX bytes:0 (0.0 B)  TX bytes:0 (0.0 B)

★ルーティングテーブルに自動で追加された経路
root@ip-xxxxxxxx:~# ip route show | grep tun
192.168.3.1 dev tun0  proto kernel  scope link  src 192.168.3.2 
192.168.4.2 dev tun1  proto kernel  scope link  src 192.168.4.1 
root@ip-xxxxxxxx:~#
</pre>

<p>
RaspberryPiのTUNデバイスにアドレスを指定する。
</p>

<pre class="example">
★IPアドレス指定
[root@pipi ~]# ifconfig tun1 192.168.4.2 pointopoint 192.168.4.1
[root@pipi ~]# ifconfig tun1
tun1: flags=4305&lt;UP,POINTOPOINT,RUNNING,NOARP,MULTICAST&gt;  mtu 1500
        inet 192.168.4.2  netmask 255.255.255.255  destination 192.168.4.1
        unspec 00-00-00-00-00-00-00-00-00-00-00-00-00-00-00-00  txqueuelen 500  (UNSPEC)
        RX packets 0  bytes 0 (0.0 B)
        RX errors 0  dropped 0  overruns 0  frame 0
        TX packets 0  bytes 0 (0.0 B)
        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0

★ルーティングテーブルに自動で追加された経路
[root@pipi ~]# ip route show | grep tun
192.168.4.1 dev tun1  proto kernel  scope link  src 192.168.4.2 
[root@pipi ~]#
</pre>
</div>
</div>

<div id="outline-container-sec-2-5" class="outline-3">
<h3 id="sec-2-5"><span class="section-number-3">2.5</span> 5.区間１トンネルと区間２トンネルを結び付ける</h3>
<div class="outline-text-3" id="text-2-5">
<p>
AmazonEC2にてiptablesのSNAT機能を用いて区間１と区間２のパケットをルーティングさせる。
</p>
<pre class="example">
★ パケット転送を許可する
root@ip-xxxxxxxx:~# sysctl -w net.ipv4.ip_forward=1

★ tun0からtun1へ転送時にMASQUERADEを行う
root@ip-xxxxxxxx:~# iptables -t nat -A POSTROUTING -o tun1 -s 192.168.3.0/24 -j MASQUERADE
</pre>

<p>
区間１と区間２の各ノードに <code>192.168.100.0/24</code> への転送ルートを定義する。
</p>

<p>
Tomodatiに <code>192.168.100.0/24</code> への転送ルートを定義する。
</p>
<pre class="example">
[root@tomodati ~]# ip route add 192.168.100.0/24 via 192.168.3.2 dev tun0
[root@tomodati ~]# ip route show
192.168.3.2 dev tun0  proto kernel  scope link  src 192.168.3.1

★ 192.168.100.0/24への通信はすべてtun0を経路する
192.168.100.0/24 via 192.168.3.2 dev tun0
</pre>

<p>
AmazonEC2に <code>192.168.100.0/24</code> への転送ルートを定義する。
</p>
<pre class="example">
★ 区間１から =192.168.100.0/24= へのパケットを転送を許可する
root@ip-xxxxxxxx:~# iptables -A FORWARD -i tun0 -p tcp -d 192.168.100.0/24 -j ACCEPT

★ =192.168.100.0/24= への転送ルートを追加する
root@ip-xxxxxxxx:~# ip route add 192.168.100.0/24 via 192.168.4.2 dev tun1

★ 192.168.100.0/24への通信はすべてtun1を経路する
root@ip-xxxxxxxx:~# ip route show
192.168.3.1 dev tun0  proto kernel  scope link  src 192.168.3.2
192.168.4.2 dev tun1  proto kernel  scope link  src 192.168.4.1
192.168.100.0/24 via 192.168.4.2 dev tun1
</pre>

<p>
RaspberryPiに <code>192.168.100.0/24</code> への転送ルートを定義する。
</p>

<pre class="example">
★ ローカルサブネットへルーティング時のDNAT設定
[root@pipi ~]# sysctl -w net.ipv4.ip_forward=1

★ tun1 から eth0 出て行く時にMASQUERADEする
[root@pipi ~]# iptables -t nat -A POSTROUTING -o eth0 -s 192.168.4.0/24 -j MASQUERADE
</pre>

<p>
ここまで、区間１から <code>192.168.100.0/24</code> への接続ができるようになります。逆方向の接続
は同じ考え方でiptables、ルーティングテーブルを駆使すればできると思います。
</p>
</div>
</div>
</div>

<div id="outline-container-sec-3" class="outline-2">
<h2 id="sec-3"><span class="section-number-2">3</span> TAPデバイス利用方式</h2>
<div class="outline-text-2" id="text-3">
<p>
TAPデバイスはLayer2(Ethernet)をエミュレートできるため <code>bridge</code> カーネルモジュールや
ARP Proxy 機能と組み合わせて柔軟なVPNを構成することが可能になります。
</p>

<p>
VPNネットワーク構成概要
</p>
<ul class="org-ul">
<li>VPN部分を自宅LANのサブネットセグメントとして定義する
</li>
<li>区間１、区間２はTAPデバイスよりSSHトンネリングする
</li>
<li>区間１と区間２はBridgeで繋ぐ (★AmazonEC2はハブ的な役割)
</li>
<li>RaspberryPiノード上のtapとeth0間でARP PROXYし、２つセグメントを繋ぐ
</li>
</ul>

<p>
以下は通信イメージ図です。一部リンク層の物理NICを表していない。
</p>
<pre class="example">
   +---------------------------------------------------------------------------------------------------------------------+
   |                                                                            〜自宅のLANセグメント〜                  |
   |   +-----------------------------------------------------------------+                                               |
   |   |         〜多重VPNによるサブネットセグメント〜                   |                                               |
   |   |           network   : 192.168.100.48/29                         |    network   : 192.168.100.0/24               |
   |   |           netmask   : 255.255.255.248                           |    netmask   : 255.255.255.0                  |
   |   |           broadcast : 192.168.100.55                            |    broadcast : 192.168.100.255                |
   |   |           gateway   : 192.168.100.54                            |    gateway   : 192.168.100.1                  |
   |   |           ip range  : 192.168.100.49〜192.168.100.54            |    ip range  : 192.168.100.1〜192.168.100.254 |
   |   |                                                                 |                                               |
   |   |                                                                 |                                               |
   |   +-----------区間１--------+                  +--------区間２------+                                               |
   |   |                         |                  |                    |                                               |
 &lt;&lt;Tomodati&gt;&gt;              &lt;&lt;AmazonEC2&gt;&gt;                             &lt;&lt;RaspberryPi&gt;&gt;                                     |
┏━━━━━━━┓        ┏━━━━━━━━━━━━━━━┓      ┏━━━━━━━━━━━━━━━━┓                   |
┃              ┃        ┃[sshd]                        ┃      ┃[sshd]                          ┃                   |
┃              ┃        ┃        ┏━━━━━┓        ┃      ┃                                ┃                   |
┃              ┃        ┃      ┏┫    br0   ┣┓      ┃      ┃                                ┃                   |
┃              ┃        ┃      ┃┗━━━━━┛┃      ┃      ┃                                ┃                   |
┃192.168.100.49┃        ┃      ┃192.168.100.50┃      ┃      ┃192.168.100.54                  ┃                   |
┃    ┏━━┓  ┃ &lt;ssh&gt;  ┃  ┏━┻┓          ┏┻━┓  ┃&lt;ssh&gt; ┃  ┏━━┓             ┏━━┓ ┃                   |
┃    ┃tap0┣━╋━━━━╋━┫tap0┃          ┃tap1┣━╋━━━╋━┫tap1┃&lt;&lt;ARP PROXY&gt;&gt;┃eth0┣━━192.168.100.0/24--+
┃    ┗━━┛  ┃        ┃  ┗━━┛          ┗━━┛  ┃      ┃  ┗━━┛             ┗━━┛ ┃         ^
┗━━━━━━━┛        ┗━━━━━━━━━━━━━━━┛      ┗━━━━━━━━━━━━━━━━┛         |
        |                                                                                                      |
        |                      多重VPN経路を通して、192.168.100.0/24へアクセスする                             |
        +------------------------------------------------------------------------------------------------------+
</pre>

<p>
区間２のRaspberryPiノード上のtap1とeth0の繋ぐ方法について、=ARP PROXY= 以外にBridge方
式もできる。Bridge方式だと <code>192.168.100.0/24</code> セグメントのブロードキャストパケットが
全部AamzonEC2に転送されて、AWSの課金が飛んでしまう可能性があるため、 <code>ARP PROXY</code> 方
式のほうが適していると勝手な判断です。
</p>

<p>
構築の詳細手順を割愛します。検証で作成したスクリプトを以下に示します。
</p>
</div>

<div id="outline-container-sec-3-1" class="outline-3">
<h3 id="sec-3-1"><span class="section-number-3">3.1</span> 区間１の設定</h3>
<div class="outline-text-3" id="text-3-1">
<p>
Tomodati <code>/root/.ssh/config</code> ：SSHクライアント設定
</p>
<pre class="example">
Host     amazon-vpn-tap
  HostName        xxxxxxxx.compute.amazonaws.com   ★AmazonEC2インスタンスのPublic DNS
  User            root
  IdentityFile    /tmp/private-ec2.pem             ★秘密鍵
  LogLevel        DEBUG
  Tunnel          ethernet                         ★tap方式
  TunnelDevice    0:0                              ★デバイスペアの番号(tap0 ... tap0)
  RequestTTY      no
  PermitLocalCommand yes
  LocalCommand    /tmp/setup_tap0_client           ★ログイン成功後ローカルで実行するコマンドの定義
</pre>

<p>
Tomodati <code>/tmp/setup_tap0_client</code>
</p>
<pre class="example">
#!/bin/sh

## tap0のIPアドレスアサイン
ifconfig tap0 192.168.100.49/29

## 192.168.100.0/24 セグメントへのルート定義
ip route add 192.168.100.0/24 via 192.168.100.54 dev tap0
</pre>

<p>
AmazonEC2 <code>/root/.ssh/authorized_keys</code>
</p>
<pre class="example">
★rootユーザでログイン後 /root/.ssh/setup_tap0 を実行する定義
no-port-forwarding,no-agent-forwarding,no-X11-forwarding,command="/root/.ssh/setup_tap0" ssh-rsa xxxxxxxxx
                                                         ~~~~~~~ ←rootユーザで実行できるコマンドを限定する
</pre>

<p>
AmazonEC2 <code>/root/.ssh/setup_tap0</code> 、brctlコマンドは <code>bridge-utils</code> パッケージに含まれ
ている。
</p>
<pre class="example">
#!/bin/bash

## br0 ブリッジデバイスを作成
brctl addbr br0

## br0 ブリッジデバイスにIPをアサインする
ifconfig br0 192.168.100.51/29

## tap0デバイスを活性化する
ip link set tap0 up

## tap0デバイスを br0 ブリッジに刺す
brctl addif br0 tap0
</pre>
</div>
</div>

<div id="outline-container-sec-3-2" class="outline-3">
<h3 id="sec-3-2"><span class="section-number-3">3.2</span> 区間２の設定</h3>
<div class="outline-text-3" id="text-3-2">
<p>
AmazonEC2 <code>/root/.ssh/config</code> ：SSHクライアント設定
</p>
<pre class="example">
Host     jitaku-vpn-tap
  HostName        xxxxx.mydns.jp  ★RTX810のWAN側のグローバルIP
  User            root
  Port            22              ★SSHポート
  LogLevel        DEBUG
  Tunnel          ethernet                         ★tap方式
  TunnelDevice    1:1
  RequestTTY      no
  PermitLocalCommand yes
  LocalCommand    /tmp/setup_tap1_client           ★ログイン成功後ローカルで実行するコマンドの定義
</pre>

<p>
AmazonEC2 <code>/tmp/setup_tap1_client</code>
</p>
<pre class="example">
#!/bin/sh

## tap1デバイスを活性化する
ip link set tap1 up

## tap1デバイスを br0 ブリッジに刺す
brctl addif br0 tap1

## 192.168.100.0/24 セグメントへのルート定義
ip route add 192.168.100.0/24 via 192.168.100.54 dev br0
</pre>

<p>
RaspberryPi <code>/root/.ssh/authorized_keys</code>
</p>
<pre class="example">
★rootユーザでログイン後 /root/.ssh/setup_tap1 を実行する定義
no-port-forwarding,no-agent-forwarding,no-X11-forwarding,command="/root/.ssh/setup_tap1" ssh-rsa xxxxxxxxx
</pre>

<p>
RaspberryPi <code>/root/.ssh/setup_tap1</code>
</p>
<pre class="example">
#!/bin/sh

## tap1デバイスにIPをアサインする
ifconfig tap1 192.168.100.54/29

## APR PROXY機能を有効にする
sysctl -w net.ipv4.ip_forward=1
sysctl -w net.ipv4.conf.eth0.proxy_arp=1
</pre>
</div>
</div>
</div>


<div id="outline-container-sec-4" class="outline-2">
<h2 id="sec-4"><span class="section-number-2">4</span> おまけに</h2>
<div class="outline-text-2" id="text-4">
<p>
今後機会があれば、TUNデバイス方式とTAPデバイス方式の性能を比較したいと思います。
TAP の方が Ethernetヘッダが付加されるため、TUNより通信量が多いいのでTUNの方がが
性能がいいかもしれない。但しTUN方式はPoint-To-Point通信であるため、BroadCastや
MultiCastが出来ない部分とネットワークセグメント間のパケット転送の設定（iptabels）
が面倒の部分もあります。
</p>
</div>
</div>

<div id="outline-container-sec-5" class="outline-2">
<h2 id="sec-5"><span class="section-number-2">5</span> 参考リンク</h2>
<div class="outline-text-2" id="text-5">
<ul class="org-ul">
<li><a href="http://www.komoto.org/vpn/index.html">VPN技術について</a>
</li>
<li><a href="http://www.unixuser.org/~euske/doc/openssh/book/chap6.html#real-vpn">入門OpenSSH - 第6章 すすんだ使い方</a>
</li>
<li><a href="http://www.usupi.org/sysad/248.html">SSH でVPNを実現する</a>
</li>
<li><a href="http://www.usupi.org/sysad/066.html">お試しネットワーク環境を作る ～ Proxy ARP 編</a>
</li>
<li><a href="http://web.mit.edu/rhel-doc/4/RH-DOCS/rhel-sg-ja-4/s1-firewall-ipt-fwd.html">Red Hat Enterprise Linux 4: セキュリティガイド</a>
</li>
<li><a href="https://access.redhat.com/site/documentation/ja-JP/Red_Hat_Enterprise_Linux/6/html/Security_Guide/sect-Security_Guide-Firewalls-FORWARD_and_NAT_Rules.html">FORWARD および NAT ルール</a>
</li>
<li><a href="http://sgros.blogspot.jp/2011/11/tunneling-everything-with-ssh-or-how-to.html">Tunneling everything with SSH&#x2026; or how to make VPNs&#x2026;</a>
</li>
<li><a href="http://sgros.blogspot.jp/2011/11/ssh-vpns-bridged-connection-to-lan.html">SSH VPNs: Bridged connection to LAN using tap</a>
</li>
</ul>
</div>
</div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[メモ]Emacsで漢字→かな変換]]></title>
    <link href="http://luozengbin.github.io/blog/2014-06-29-%5B%E3%83%A1%E3%83%A2%5Demacs%E3%81%A7%E6%BC%A2%E5%AD%97%E2%86%92%E3%81%8B%E3%81%AA%E5%A4%89%E6%8F%9B.html"/>
    <updated>2014-06-29T00:00:00+09:00</updated>
    <id>http://luozengbin.github.io/blog/[メモ]emacsで漢字→かな変換</id>
    <content type="html"><![CDATA[<div id="table-of-contents">
<h2>Table of Contents</h2>
<div id="text-table-of-contents">
<ul>
<li><a href="#sec-1">1. 考案</a></li>
<li><a href="#sec-2">2. <code>skk-kakasi.el</code> の導入手順</a>
<ul>
<li><a href="#sec-2-1">2.1. KAKASIのインストール</a></li>
<li><a href="#sec-2-2">2.2. ddskk のインストール</a></li>
<li><a href="#sec-2-3">2.3. 動作確認</a></li>
</ul>
</li>
<li><a href="#sec-3">3. 更に自動化する</a></li>
<li><a href="#sec-4">4. もう一歩</a></li>
</ul>
</div>
</div>
<p>
Emacsをドキュメントビューアとして使っていますが、時々漢字の読み方がわからないことに遭
遇します。漢字から意味を読み取ったとしても、読み方がわからない場合が多いい。いままで
一々ブラウザに切り替えて調べました。せっかくEmacsを使っているので自動化してみました。
</p>

<p>
<!-- more -->
</p>

<div id="outline-container-sec-1" class="outline-2">
<h2 id="sec-1"><span class="section-number-2">1</span> 考案</h2>
<div class="outline-text-2" id="text-1">
<ol class="org-ol">
<li>スクラップ開発：選択テキストを漢字なか変換Webサービスに投げって応答を表示する
</li>
<li>既存のものを使う
</li>
</ol>

<p>
効率を考えて２の近道を選択しました。
</p>

<p>
ひとまず、 <code>list-packages</code> でELPAに登録されたパッケージを検索した、意外に当てはまる
ものもが見つかりませんでした。googleしたら <code>skk-kakasi.el</code> が浮上してきた。
</p>

<p>
例の <code>Meadow/Emacs memo</code> の <a href="http://www.bookshelf.jp/soft/meadow_21.html#SEC197">21.3.2 漢字をひらがなへ変換 ― skk-kakasi</a> セクションに
機能紹介がありました。以下はその内容の引用です。
</p>

<pre class="example">
これは SKK に附属しています。 skk-kakasi.el です。
動作には kakasi が必要です。
例えば,
読み方の分からない文字をリージョンで選択し, skk-gyakubiki-message とすると, ミニバッファ
によみ方が出力されます. ただし, 第 1 候補のみ. C-u M-x skk-gyakubiki-messageとすると,
すべての候補が出力されます. 他にも漢字の混ざった文章にふり仮名をという文章を選択し,
skk-hurigana-regionとすると漢字 [かんじ] の混ざ [まざ] った文章 [ぶんしょう] にふり仮
名 [かな] をとできます. 他にもいろいろと用意されているので, 一度ソースを読んで見てくだ
さい. ちゃんと日本 語で詳しく説明してありますよ．
</pre>

<p>
早速導入してみた、以下はその手順です。
</p>
</div>
</div>

<div id="outline-container-sec-2" class="outline-2">
<h2 id="sec-2"><span class="section-number-2">2</span> <code>skk-kakasi.el</code> の導入手順</h2>
<div class="outline-text-2" id="text-2">
<p>
<code>skk-kakasi.el</code> の導入に必要なもの
</p>
<ul class="org-ul">
<li>KAKASI - 漢字→かな(ローマ字)変換プログラム： <a href="http://kakasi.namazu.org/">http://kakasi.namazu.org/</a>
</li>
<li>ddskk：<a href="http://openlab.ring.gr.jp/skk/ddskk-ja.html">http://openlab.ring.gr.jp/skk/ddskk-ja.html</a>
</li>
</ul>
</div>

<div id="outline-container-sec-2-1" class="outline-3">
<h3 id="sec-2-1"><span class="section-number-3">2.1</span> KAKASIのインストール</h3>
<div class="outline-text-3" id="text-2-1">
<p>
Archlinuxをお使いなので <code>sudo pacman -S kakasi</code> で一発でインストールが出来ました。
</p>

<pre class="example">
[akira@jizai .emacs.d]$ sudo pacman -S kakasi
依存関係を解決しています...
相互衝突をチェックしています...

パッケージ (1): kakasi-2.3.6-1

Total Download Size:    0.69 MiB
Total Installed Size:   2.36 MiB

:: インストールを行いますか？ [Y/n] 
:: パッケージを取得します ...
 kakasi-2.3.6-1-x86_64                                                                                708.8 KiB  3.96M/s 00:00 [#############################################################################] 100%
(1/1) キーリングのキーを確認                                                                                                   [#############################################################################] 100%
(1/1) パッケージの整合性をチェック                                                                                             [#############################################################################] 100%
(1/1) パッケージファイルのロード                                                                                               [#############################################################################] 100%
(1/1) ファイルの衝突をチェック                                                                                                 [#############################################################################] 100%
(1/1) 空き容量を確認                                                                                                           [#############################################################################] 100%
(1/1) インストール kakasi                                                                                                      [#############################################################################] 100%

★インストールされたファイル一式を確認する
[akira@jizai .emacs.d]$ pacman -Ql kakasi
kakasi /usr/
kakasi /usr/bin/
kakasi /usr/bin/atoc_conv
kakasi /usr/bin/kakasi
kakasi /usr/bin/kakasi-config
kakasi /usr/bin/mkkanwa
kakasi /usr/bin/rdic_conv
kakasi /usr/bin/wx2_conv
kakasi /usr/include/
kakasi /usr/include/libkakasi.h
kakasi /usr/lib/
kakasi /usr/lib/libkakasi.so
kakasi /usr/lib/libkakasi.so.2
kakasi /usr/lib/libkakasi.so.2.1.0
kakasi /usr/share/
kakasi /usr/share/kakasi/
kakasi /usr/share/kakasi/itaijidict
kakasi /usr/share/kakasi/kanwadict
kakasi /usr/share/man/
kakasi /usr/share/man/man1/
kakasi /usr/share/man/man1/kakasi-config.1.gz
kakasi /usr/share/man/man1/kakasi.1.gz
[akira@jizai .emacs.d]$
</pre>
</div>
</div>

<div id="outline-container-sec-2-2" class="outline-3">
<h3 id="sec-2-2"><span class="section-number-3">2.2</span> ddskk のインストール</h3>
<div class="outline-text-3" id="text-2-2">
<p>
ddskk のインストール手順はいくつがあります。詳細はddskkのインストールマニュアルへ参照する。
</p>

<p>
本家から最新版のダウンロード
</p>
<pre class="example">
$ wget http://openlab.ring.gr.jp/skk/maintrunk/ddskk-20140622.tar.gz
$ tar xzvf ddskk-20140622.tar.gz
$ cd ddskk-20140622
</pre>

<p>
<code>ddskk-20140622/SKK-CFG</code> ファイルの最後にインストール先を指定する。
</p>
<div class="org-src-container">

<pre class="src src-emacs-lisp"><span style="color: #888a85;">;;; </span><span style="color: #888a85;">&#36766;&#26360;&#12501;&#12449;&#12452;&#12523;&#12398;&#26684;&#32013;&#20808;</span>
(setq SKK_DATADIR <span style="color: #ad7fa8; font-style: italic;">"~/.emacs.d/etc/skk"</span>)

<span style="color: #888a85;">;;; </span><span style="color: #888a85;">&#12489;&#12461;&#12517;&#12513;&#12531;&#12488;</span>
(setq SKK_INFODIR <span style="color: #ad7fa8; font-style: italic;">"~/.emacs.d/share/info-ja/skk"</span>)

<span style="color: #888a85;">;;; </span><span style="color: #888a85;">skk lisp&#26412;&#20307;</span>
(setq SKK_LISPDIR <span style="color: #ad7fa8; font-style: italic;">"~/.emacs.d/lisp/skk"</span>)

<span style="color: #888a85;">;;; </span><span style="color: #888a85;">skk-large-jisyo &#12398;&#20516;&#12434;&#33258;&#21205;&#35373;&#23450;&#12377;&#12427;</span>
(setq SKK_SET_JISYO t)
</pre>
</div>

<p>
DDSKKのインストール
</p>
<pre class="example">
★ インストーラが SKK の各ファイルをどこにインストールしようとしているかを確認する
$ make what-where

★ インストール
$ make install
</pre>
</div>
</div>

<div id="outline-container-sec-2-3" class="outline-3">
<h3 id="sec-2-3"><span class="section-number-3">2.3</span> 動作確認</h3>
<div class="outline-text-3" id="text-2-3">
<p>
<code>(require 'skk-kakasi)</code> でskk-kakasi.elをロードし、適当に漢字を含むテキストを選択し
<code>skk-gyakubiki-message</code> を実行する。
</p>

<video controls>
   <source src="video/2014-06-29-skk-gyakubiki-message.mp4">
   <source src="video/2014-06-29-skk-gyakubiki-message.webm">
</video>
</div>
</div>
</div>

<div id="outline-container-sec-3" class="outline-2">
<h2 id="sec-3"><span class="section-number-2">3</span> 更に自動化する</h2>
<div class="outline-text-2" id="text-3">
<p>
<code>pos-tip.el</code> と連携してtooltip形でカッコ良く表示する。漢字の読み方をチラ見に便利。
</p>

<div class="org-src-container">

<pre class="src src-emacs-lisp">(<span style="color: #729fcf; font-weight: bold;">require</span> '<span style="color: #8ae234;">skk-autoloads</span>)
(<span style="color: #729fcf; font-weight: bold;">require</span> '<span style="color: #8ae234;">skk-kakasi</span>)
(<span style="color: #729fcf; font-weight: bold;">require</span> '<span style="color: #8ae234;">pos-tip</span>)

<span style="color: #888a85;">;;; </span><span style="color: #888a85;">&#12405;&#12426;&#20206;&#21517;&#22793;&#25563;&#32080;&#26524;&#12434;pos-tip&#12391;&#34920;&#31034;&#12377;&#12427;</span>
(<span style="color: #729fcf; font-weight: bold;">defun</span> <span style="color: #edd400; font-weight: bold;">skk-hurigana-tip</span> (start end <span style="color: #8ae234; font-weight: bold;">&amp;optional</span> all)
  <span style="color: #888a85;">"&#38936;&#22495;&#12398;&#28450;&#23383;&#12395;&#20840;&#12390;&#12405;&#12426;&#12364;&#12394;&#12434;&#20184;&#12369;&#12289;&#12509;&#12483;&#12503;&#12450;&#12483;&#12503;&#12377;&#12427;&#12290;"</span>
  (interactive <span style="color: #ad7fa8; font-style: italic;">"r\nP"</span>)
  (pos-tip-show (skk-hurigana-1 start end all)))

<span style="color: #888a85;">;;; </span><span style="color: #888a85;">&#36969;&#24403;&#12395;&#12461;&#12540;&#12434;&#21106;&#12426;&#24403;&#12390;&#12377;&#12427;</span>
(global-set-key (kbd <span style="color: #ad7fa8; font-style: italic;">"C-x x"</span>) 'skk-hurigana-tip)
</pre>
</div>


<p>
<code>popwin.el</code> でpopupバッファーで表示する。変換結果を流用したい場合に便利。
</p>

<div class="org-src-container">

<pre class="src src-emacs-lisp">(<span style="color: #729fcf; font-weight: bold;">require</span> '<span style="color: #8ae234;">skk-autoloads</span>)
(<span style="color: #729fcf; font-weight: bold;">require</span> '<span style="color: #8ae234;">skk-kakasi</span>)
(<span style="color: #729fcf; font-weight: bold;">require</span> '<span style="color: #8ae234;">popwin</span>)

<span style="color: #888a85;">;;; </span><span style="color: #888a85;">&#12405;&#12426;&#20206;&#21517;&#22793;&#25563;&#32080;&#26524;&#12496;&#12483;&#12501;&#12449;&#21517;</span>
(<span style="color: #729fcf; font-weight: bold;">defvar</span> <span style="color: #ff6347;">skk-kakasi-popbuf-name</span> <span style="color: #ad7fa8; font-style: italic;">" *skk-kakasi*"</span> <span style="color: #888a85;">"&#12405;&#12426;&#20206;&#21517;&#22793;&#25563;&#32080;&#26524;&#12496;&#12483;&#12501;&#12449;&#21517;"</span>)

(<span style="color: #729fcf; font-weight: bold;">defun</span> <span style="color: #edd400; font-weight: bold;">skk-hurigana-popup</span> (start end <span style="color: #8ae234; font-weight: bold;">&amp;optional</span> all)
  (interactive <span style="color: #ad7fa8; font-style: italic;">"r\nP"</span>)
  (<span style="color: #729fcf; font-weight: bold;">let</span> ((str0 (buffer-substring-no-properties start end))
        (str1 (skk-hurigana-1 start end all))
        (str2 (skk-gyakubiki-1 start end all)))
    (<span style="color: #729fcf; font-weight: bold;">with-current-buffer</span> (get-buffer-create skk-kakasi-popbuf-name)
      (setq buffer-read-only nil)
      (erase-buffer)
      (insert <span style="color: #ad7fa8; font-style: italic;">"KAKASI - &#28450;&#23383;&#8594;&#12363;&#12394;(&#12525;&#12540;&#12510;&#23383;)&#22793;&#25563;&#32080;&#26524;:\n"</span>)
      (insert <span style="color: #ad7fa8; font-style: italic;">"-------------------------------------\n\n"</span>)
      (insert str0 <span style="color: #ad7fa8; font-style: italic;">"\n\n"</span>)
      (insert str1 <span style="color: #ad7fa8; font-style: italic;">"\n\n"</span>)
      (insert str2 <span style="color: #ad7fa8; font-style: italic;">"\n\n"</span>)
      (setq buffer-read-only t))
    (display-buffer (get-buffer skk-kakasi-popbuf-name))))

<span style="color: #888a85;">;;; </span><span style="color: #888a85;">&#36969;&#24403;&#12395;&#12461;&#12540;&#12434;&#21106;&#12426;&#24403;&#12390;&#12377;&#12427;</span>
(global-set-key (kbd <span style="color: #ad7fa8; font-style: italic;">"C-x X"</span>) 'skk-hurigana-popup)
</pre>
</div>

<video controls>
   <source src="video/2014-06-29-skk-hurigana-popup.mp4">
   <source src="video/2014-06-29-skk-hurigana-popup.webm">
</video>
</div>
</div>

<div id="outline-container-sec-4" class="outline-2">
<h2 id="sec-4"><span class="section-number-2">4</span> もう一歩</h2>
<div class="outline-text-2" id="text-4">
<ul class="org-ul">
<li>オンライン辞書サービスを使って単語の解釈を表示したい
</li>
<li>テキスト読み上げ機能と連携したい
</li>
</ul>
</div>
</div>
]]></content>
  </entry>
  
</feed>
