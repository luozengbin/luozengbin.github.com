<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Akira's Tech Notes]]></title>
  <link href="http://luozengbin.github.io/atom.xml" rel="self"/>
  <link href="http://luozengbin.github.io/"/>
  <updated>2015-05-16T00:22:09+09:00</updated>
  <id>http://luozengbin.github.io/</id>
  <author>
    <name><![CDATA[luozengbin]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[[メモ]デバッグ版OpenJDKのビルド]]></title>
    <link href="http://luozengbin.github.io/blog/2015-05-10-%5B%E3%83%A1%E3%83%A2%5D%E3%83%87%E3%83%90%E3%83%83%E3%82%B0%E7%89%88openjdk%E3%81%AE%E3%83%93%E3%83%AB%E3%83%89.html"/>
    <updated>2015-05-10T00:00:00+09:00</updated>
    <id>http://luozengbin.github.io/blog/[メモ]デバッグ版openjdkのビルド</id>
    <content type="html"><![CDATA[<div id="table-of-contents">
<h2>Table of Contents</h2>
<div id="text-table-of-contents">
<ul>
<li><a href="#sec-1">1. 環境</a></li>
<li><a href="#sec-2">2. ビルド手順</a></li>
<li><a href="#sec-3">3. gdbでデバッグしてみる</a></li>
<li><a href="#sec-4">4. valgrindでコールグラフ出してみる</a></li>
<li><a href="#sec-5">5. 参考</a></li>
</ul>
</div>
</div>
<p>
今まで、JVM中身の調査は <code>SystemTap + java-1.x.x-openjdk-debuginfo.x86_64</code> 利用してい
たが。もう少しJVMの中身を踏み込みたいのでデバッグ版JVMをビルドしてみました。
</p>

<p>
<a href="http://hg.openjdk.java.net/jdk7/jdk7/raw-file/tip/README-builds.html">http://hg.openjdk.java.net/jdk7/jdk7/raw-file/tip/README-builds.html</a> の手順でビルドし
てもいいのですが、トライ・アンド・エラーで時間が取られそうなので、自分が使っている
<code>Arch Linx</code> 環境で一番手取りの早い手順で行いました。
</p>

<p>
<!-- more -->
</p>

<div id="outline-container-sec-1" class="outline-2">
<h2 id="sec-1"><span class="section-number-2">1</span> 環境</h2>
<div class="outline-text-2" id="text-1">
<ul class="org-ul">
<li>Arch Linux
</li>
<li>OpenJDK 7系
</li>
</ul>
</div>
</div>

<div id="outline-container-sec-2" class="outline-2">
<h2 id="sec-2"><span class="section-number-2">2</span> ビルド手順</h2>
<div class="outline-text-2" id="text-2">
<p>
まずはパッケージリポジトリから <a href="https://www.archlinux.org/packages/extra/x86_64/jdk7-openjdk/">jdk7-openjdk</a> のビルドファイルやパッチファイルを入手する。
</p>
<ul class="org-ul">
<li><a href="https://projects.archlinux.org/svntogit/packages.git/tree/trunk?h=packages/java7-openjdk">入手先</a>
</li>
</ul>
<pre class="example">
★ダウンロード
$ wget https://projects.archlinux.org/svntogit/packages.git/plain/trunk/PKGBUILD?h=packages/java7-openjdk -O PKGBUILD
$ wget https://projects.archlinux.org/svntogit/packages.git/plain/trunk/fontconfig-paths.diff?h=packages/java7-openjdk -O fontconfig-paths.diff
$ wget https://projects.archlinux.org/svntogit/packages.git/plain/trunk/jdk7-openjdk.install?h=packages/java7-openjdk -O jdk7-openjdk.install
$ wget https://projects.archlinux.org/svntogit/packages.git/plain/trunk/jre7-openjdk-headless.install?h=packages/java7-openjdk -O jre7-openjdk-headless.install
$ wget https://projects.archlinux.org/svntogit/packages.git/plain/trunk/jre7-openjdk.install?h=packages/java7-openjdk -O jre7-openjdk.install
$ wget https://projects.archlinux.org/svntogit/packages.git/plain/trunk/openjdk7_nonreparenting-wm.diff?h=packages/java7-openjdk -O openjdk7_nonreparenting-wm.diff
★ファイル一覧確認
$ ls -al
合計 52
drwxr-xr-x  2 akira users  4096  5月 10 11:24 .
drwxr-xr-x 21 akira users  4096  5月 10 11:23 ..
-rw-r--r--  1 akira users 12429  5月 10 11:24 PKGBUILD
-rw-r--r--  1 akira users  8302  5月 10 11:24 fontconfig-paths.diff
-rw-r--r--  1 akira users  1053  5月 10 11:24 jdk7-openjdk.install
-rw-r--r--  1 akira users   974  5月 10 11:24 jre7-openjdk-headless.install
-rw-r--r--  1 akira users  1201  5月 10 11:24 jre7-openjdk.install
-rw-r--r--  1 akira users  2324  5月 10 11:24 openjdk7_nonreparenting-wm.diff
</pre>

<p>
<code>PKGBUILD</code> ファイルにデバッグビルドオプションを有効化する。
</p>
<ol class="org-ol">
<li><code>--enable-native-debuginfo=yes</code> build with native code debuginfo [default=yes]
</li>
<li><code>--enable-java-debuginfo=yes</code> build with Java bytecode debuginfo [default=yes]
</li>
<li><code>make icedtea-debug</code> デバッグビルドターゲットに変える
</li>
</ol>

<p>
<code>1</code> と <code>2</code> の規定値は <code>yes</code> なので、指定しなくても問題ありません。 <code>3</code> が肝ですね。
</p>

<div class="org-src-container">

<pre class="src src-sh">  ..........&#30465;&#30053;.........
  |build() {
  |  <span style="color: #b0c4de;">cd</span> <span style="color: #bdb76b;">"${srcdir}/icedtea-${_icedtea_ver}"</span>
  | 
  |  <span style="color: #b0c4de;">export</span> <span style="color: #9acd32;">ALT_PARALLEL_COMPILE_JOBS</span>=<span style="color: #bdb76b;">"${MAKEFLAGS/-j}"</span>
  |  <span style="color: #b0c4de;">export</span> <span style="color: #9acd32;">HOTSPOT_BUILD_JOBS</span>=<span style="color: #bdb76b;">"${ALT_PARALLEL_COMPILE_JOBS}"</span>
  | 
  |  <span style="color: #b0c4de;">.</span> /etc/profile.d/apache-ant.sh
  | 
  |  cp <span style="color: #bdb76b;">"${srcdir}"</span>/*.diff <span style="color: #bdb76b;">"${srcdir}"</span>/icedtea-${<span style="color: #9acd32;">_icedtea_ver</span>}/patches
  |  <span style="color: #b0c4de;">export</span> <span style="color: #9acd32;">DISTRIBUTION_PATCHES</span>=<span style="color: #bdb76b;">"patches/fontconfig-paths.diff \</span>
<span style="color: #bdb76b;">  |                               patches/openjdk7_nonreparenting-wm.diff"</span>
  | 
  |  <span style="color: #ffffff;">if</span> [ <span style="color: #bdb76b;">"$_bootstrap"</span> = <span style="color: #bdb76b;">"1"</span> ]; <span style="color: #ffffff;">then</span>
  |     <span style="color: #9acd32;">BOOTSTRAPOPT</span>=<span style="color: #bdb76b;">"--enable-bootstrap --with-ecj-jar=/usr/share/java/ecj.jar"</span>
  |   <span style="color: #ffffff;">else</span>
  |     <span style="color: #9acd32;">BOOTSTRAPOPT</span>=<span style="color: #bdb76b;">"--disable-bootstrap"</span>
  |  <span style="color: #ffffff;">fi</span>
  | 
  |  ./configure <span style="color: #bdb76b;">\</span>
  |        ${<span style="color: #9acd32;">BOOTSTRAPOPT</span>} <span style="color: #bdb76b;">\</span>
  |        --with-parallel-jobs=<span style="color: #bdb76b;">"${MAKEFLAGS/-j}"</span> <span style="color: #bdb76b;">\</span>
  |        --disable-tests <span style="color: #bdb76b;">\</span>
  |        --disable-downloading --disable-Werror <span style="color: #bdb76b;">\</span>
  |        --with-pkgversion=<span style="color: #bdb76b;">"Arch Linux build ${pkgver}-${pkgrel}-${CARCH}"</span> <span style="color: #bdb76b;">\</span>
  |        --with-jdk-home=${<span style="color: #9acd32;">JAVA_HOME</span>} <span style="color: #bdb76b;">\</span>
  |        --with-openjdk-src-zip=<span style="color: #bdb76b;">"${srcdir}/icedtea_${_icedtea_ver}_openjdk.tar.bz2"</span> <span style="color: #bdb76b;">\</span>
  |        --with-hotspot-src-zip=<span style="color: #bdb76b;">"${srcdir}/icedtea_${_icedtea_ver}_hotspot.tar.bz2"</span> <span style="color: #bdb76b;">\</span>
  |        --with-corba-src-zip=<span style="color: #bdb76b;">"${srcdir}/icedtea_${_icedtea_ver}_corba.tar.bz2"</span> <span style="color: #bdb76b;">\</span>
  |        --with-jaxp-src-zip=<span style="color: #bdb76b;">"${srcdir}/icedtea_${_icedtea_ver}_jaxp.tar.bz2"</span> <span style="color: #bdb76b;">\</span>
  |        --with-jaxws-src-zip=<span style="color: #bdb76b;">"${srcdir}/icedtea_${_icedtea_ver}_jaxws.tar.bz2"</span> <span style="color: #bdb76b;">\</span>
  |        --with-jdk-src-zip=<span style="color: #bdb76b;">"${srcdir}/icedtea_${_icedtea_ver}_jdk.tar.bz2"</span> <span style="color: #bdb76b;">\</span>
  |        --with-langtools-src-zip=<span style="color: #bdb76b;">"${srcdir}/icedtea_${_icedtea_ver}_langtools.tar.bz2"</span> <span style="color: #bdb76b;">\</span>
  |        --enable-nss <span style="color: #bdb76b;">\</span>
  |        --with-rhino <span style="color: #bdb76b;">\</span>
  |        --with-abs-install-dir=${<span style="color: #9acd32;">_jvmdir</span>} <span style="color: #bdb76b;">\</span>
1.|        --enable-native-debuginfo=yes <span style="color: #bdb76b;">\</span>
2.|        --enable-java-debuginfo=yes <span style="color: #bdb76b;">\</span>
  |        --enable-infinality=no
  |        <span style="color: #00cd66;"># </span><span style="color: #00cd66;">TODO latest version of openjdk will disable infinality by default</span>
  |
3.|    make icedtea-debug
  |}
  ..........&#30465;&#30053;.........
</pre>
</div>

<p>
あとは <a href="https://archlinuxjp.kusakata.com/wiki/Makepkg">makepkg</a> でビルドするだけです。コーヒーいっぱい分の時間かかります。
</p>
<pre class="example">
$ makepkg
==&gt; パッケージを作成: java7-openjdk 7.u79_2.5.5-1 (2015年  5月 10日 日曜日 11:43:40 JST)
==&gt; ランタイムの依存関係を確認...
==&gt; ビルドタイムの依存関係を確認...
==&gt; ソースを取得...
..........省略.........

★肝心のhotspotビルド
########################################################################
##### Entering hotspot for target(s) all_debug                     #####
########################################################################
..........省略.........

★ビルド時のオプション
g++ 
-DLINUX
-D_GNU_SOURCE 
-DAMD64 
-DASSERT 
-DDEBUG -I. -I/home/akira/temp/java7-openjdk/src/icedtea-2.5.5/openjdk/hotspot/src/share/vm/prims -I/home/akira/temp/java7-openjdk/src/icedtea-2.5.5/openjdk/hotspot/src/share/vm -I/home/akira/temp/java7-openjdk/src/icedtea-2.5.5/openjdk/hotspot/src/share/vm/precompiled -I/home/akira/temp/java7-openjdk/src/icedtea-2.5.5/openjdk/hotspot/src/cpu/x86/vm -I/home/akira/temp/java7-openjdk/src/icedtea-2.5.5/openjdk/hotspot/src/os_cpu/linux_x86/vm -I/home/akira/temp/java7-openjdk/src/icedtea-2.5.5/openjdk/hotspot/src/os/linux/vm -I/home/akira/temp/java7-openjdk/src/icedtea-2.5.5/openjdk/hotspot/src/os/posix/vm -I../generated 
-DHOTSPOT_RELEASE_VERSION="\"24.79-b02\"" 
-DHOTSPOT_BUILD_TARGET="\"jvmg\"" 
-DHOTSPOT_BUILD_USER="\"akira\"" 
-DHOTSPOT_LIB_ARCH=\"amd64\" 
-DHOTSPOT_VM_DISTRO="\"OpenJDK\"" 
-DDERIVATIVE_ID="\"IcedTea 2.5.5\"" 
-DDISTRIBUTION_ID="\"Arch Linux, package Arch Linux build 7.u79_2.5.5-1-x86_64\""
-march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong --param=ssp-buffer-size=4
-DTARGET_OS_FAMILY_linux 
-DTARGET_ARCH_x86 
-DTARGET_ARCH_MODEL_x86_64 
-DTARGET_OS_ARCH_linux_x86 
-DTARGET_OS_ARCH_MODEL_linux_x86_64 
-DTARGET_COMPILER_gcc 
-DCOMPILER2 
-DCOMPILER1  -fno-rtti -fno-exceptions 
-D_REENTRANT -fcheck-new -fvisibility=hidden -m64 -pipe -g 
-DTARGET_OS_FAMILY_linux 
-DTARGET_ARCH_x86 
-DTARGET_ARCH_MODEL_x86_64 
-DTARGET_OS_ARCH_linux_x86 
-DTARGET_OS_ARCH_MODEL_linux_x86_64 
-DTARGET_COMPILER_gcc 
-DCOMPILER2 
-DCOMPILER1 -fpic -fno-rtti -fno-exceptions 
-D_REENTRANT -fcheck-new -fvisibility=hidden -m64 -pipe 
★カスタマイズdebugビルドフラグ
-g -finstrument-functions -fvar-tracking-assignments -rdynamic
-D_NMT_NOINLINE_ 
-DVM_LITTLE_ENDIAN 
-D_LP64=1 -fno-omit-frame-pointer 
-DINCLUDE_TRACE=1  -Wpointer-arith -Wsign-compare    -c -fpch
-Deps -MMD -MP -MF ../generated/dependencies/osThread_linux.o.d -o osThread_linux.o /home/akira/temp/java7-openjdk/src/icedtea-2.5.5/openjdk/hotspot/src/os/linux/vm/osThread_linux.cpp

Compiling /home/akira/temp/java7-openjdk/src/icedtea-2.5.5/openjdk/hotspot/src/os/linux/vm/os_linux.cpp

..........省略.........

-- Build times ----------
Target all_product_build
Start 2015-05-10 11:43:19
End   2015-05-10 12:41:39
00:09:54 corba
00:11:03 hotspot
00:01:15 jaxp
00:01:25 jaxws
00:31:45 jdk
00:02:58 langtools
00:58:20 TOTAL
-------------------------
..........省略.........
</pre>

<p>
僕の環境では約1時間ぐらいかかりました。
</p>
<ul class="org-ul">
<li>CPU: Intel(R) Core(TM) i5-2557M CPU @ 1.70GHz
</li>
<li>Memory: 4G
</li>
<li>SSD
</li>
</ul>


<p>
ビルド成果物はワークディレクトリの下記場所に出力される。
</p>
<table border="2" cellspacing="0" cellpadding="6" rules="groups" frame="hsides">


<colgroup>
<col  class="left" />

<col  class="left" />
</colgroup>
<tbody>
<tr>
<td class="left">デバッグ版OpenJDK</td>
<td class="left">src/icedtea-2.5.5/openjdk.build-debug</td>
</tr>

<tr>
<td class="left">hotspot単体</td>
<td class="left">src/icedtea-2.5.5/openjdk.build-debug/hotspot/outputdir/linux_amd64_compiler2/jvmg</td>
</tr>
</tbody>
</table>
</div>
</div>

<div id="outline-container-sec-3" class="outline-2">
<h2 id="sec-3"><span class="section-number-2">3</span> gdbでデバッグしてみる</h2>
<div class="outline-text-2" id="text-3">
<ol class="org-ol">
<li>hotspot単体の出力先へ移動する
</li>
<li><code>-gdb</code> オプションを付けて <code>./hotspot</code> を起動する
</li>
<li>デバッグ版のJVMランチャーに既にBreakpointが設定されている
</li>
<li><code>p</code> で変数の値を確認する
</li>
<li><code>next</code> でステップオーバーでデバッグする
</li>
<li><code>step</code> でステップインでデバッグする
</li>
<li><code>backtrace</code> でスタックトレースを確認する
</li>
<li><code>continue</code> で最後まで実行される
</li>
</ol>

<pre class="example">
1.|$ cd src/icedtea-2.5.5/openjdk.build-debug/hotspot/outputdir/linux_amd64_compiler2/jvmg
2.|$ ./hotspot -gdb -version
  |GNU gdb (GDB) 7.9
  |Copyright (C) 2015 Free Software Foundation, Inc.
  |License GPLv3+: GNU GPL version 3 or later &lt;http://gnu.org/licenses/gpl.html&gt;
  |This is free software: you are free to change and redistribute it.
  |There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
  |and "show warranty" for details.
  |This GDB was configured as "x86_64-unknown-linux-gnu".
  |Type "show configuration" for configuration details.
  |For bug reporting instructions, please see:
  |&lt;http://www.gnu.org/software/gdb/bugs/&gt;.
  |Find the GDB manual and other documentation resources online at:
  |&lt;http://www.gnu.org/software/gdb/documentation/&gt;.
  |For help, type "help".
  |Type "apropos word" to search for commands related to "word".
  |Breakpoint 1 at 0x4042f7: file /home/akira/temp/java7-openjdk/src/icedtea-2.5.5/openjdk/hotspot/src/share/tools/launcher/java.c, line 1270.
  |[Thread debugging using libthread_db enabled]
  |Using host libthread_db library "/usr/lib/libthread_db.so.1".
  |Using java runtime at: /home/akira/temp/java7-openjdk/src/icedtea-2.5.5/bootstrap/jdk1.6.0/jre
  |[New Thread 0x7ffff7fa6700 (LWP 15629)]
  |[Switching to Thread 0x7ffff7fa6700 (LWP 15629)]
  | 
3.|Breakpoint 1, InitializeJVM (pvm=0x7ffff7fa5e38, penv=0x7ffff7fa5e30, ifn=0x7ffff7fa5e40)
  |    at /home/akira/temp/java7-openjdk/src/icedtea-2.5.5/openjdk/hotspot/src/share/tools/launcher/java.c:1270
  |1270	    memset(&amp;args, 0, sizeof(args));
4.|(gdb) p args
  |$1 = {version = 0, nOptions = 0, options = 0x0, ignoreUnrecognized = 0 '\000'}
5.|(gdb) next
  |1271	    args.version  = JNI_VERSION_1_2;
  |(gdb) next
  |1272	    args.nOptions = numOptions;
  |(gdb) next
  |1273	    args.options  = options;
  |(gdb) next
  |1274	    args.ignoreUnrecognized = JNI_FALSE;
  |(gdb) next
  |1276	    if (_launcher_debug) {
  |(gdb) next
  |1288	    r = ifn-&gt;CreateJavaVM(pvm, (void **)penv, &amp;args);
6.|(gdb) step
  |JNI_CreateJavaVM (vm=0x7ffff7fa5e38, penv=0x7ffff7fa5e30, args=0x7ffff7fa5df0)
  |    at /home/akira/temp/java7-openjdk/src/icedtea-2.5.5/openjdk/hotspot/src/share/vm/prims/jni.cpp:5121
  |5121	  if (Atomic::xchg(1, &amp;vm_created) == 1) {
7.|(gdb) backtrace 
  |#0  JNI_CreateJavaVM (vm=0x7ffff7fa5e38, penv=0x7ffff7fa5e30, args=0x7ffff7fa5df0)
  |    at /home/akira/temp/java7-openjdk/src/icedtea-2.5.5/openjdk/hotspot/src/share/vm/prims/jni.cpp:5121
  |#1  0x00000000004043fd in InitializeJVM (pvm=0x7ffff7fa5e38, penv=0x7ffff7fa5e30, ifn=0x7ffff7fa5e40)
  |    at /home/akira/temp/java7-openjdk/src/icedtea-2.5.5/openjdk/hotspot/src/share/tools/launcher/java.c:1288
  |#2  0x00000000004031ea in JavaMain (_args=0x7fffffffc080)
  |    at /home/akira/temp/java7-openjdk/src/icedtea-2.5.5/openjdk/hotspot/src/share/tools/launcher/java.c:423
  |#3  0x00007ffff5c17374 in start_thread () from /usr/lib/libpthread.so.0
  |#4  0x00007ffff595527d in clone () from /usr/lib/libc.so.6
8.|(gdb) continue
  |Continuing.
  |java version "1.7.0_79"
  |OpenJDK Runtime Environment (IcedTea 2.5.5) (Arch Linux build 7.u79_2.5.5-1-x86_64)
  |OpenJDK 64-Bit Server VM (build 24.79-b02-jvmg, mixed mode)
  |[Thread 0x7ffff7fa6700 (LWP 16481) exited]
  [Thread 0x7ffff7fa8740 (LWP 16477) exited]
  [Inferior 1 (process 16477) exited normally]
  (gdb) q
  $
</pre>
</div>
</div>

<div id="outline-container-sec-4" class="outline-2">
<h2 id="sec-4"><span class="section-number-2">4</span> valgrindでコールグラフ出してみる</h2>
<div class="outline-text-2" id="text-4">
<p>
valgrindでコールグラフを出してみました。
</p>

<p>
必要なパッケージを入れておく。
</p>
<pre class="example">
$ sudo pacman -S valgrind
$ sudo pacman -S kdesdk-kcachegrind
</pre>

<ol class="org-ol">
<li>デバッグ版OpenJDKの出力先へ移動する
</li>
<li><code>valgrind</code> カーバーして <code>java -version</code> を実行する
</li>
<li><code>kcachegrind</code> で出力結果を解析する
</li>
</ol>

<pre class="example">
1.|$ cd src/icedtea-2.5.5/openjdk.build-debug
2.|$ valgrind --tool=callgrind bin/java -version
  |==18306== Callgrind, a call-graph generating cache profiler
  |==18306== Copyright (C) 2002-2013, and GNU GPL'd, by Josef Weidendorfer et al.
  |==18306== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info
  |==18306== Command: bin/java -version
  |==18306== 
  |==18306== For interactive control, run 'callgrind_control -h'.
  |java version "1.7.0_79-debug"
  |OpenJDK Runtime Environment (IcedTea 2.5.5) (Arch Linux build 7.u79_2.5.5-1-x86_64)
  |OpenJDK 64-Bit Server VM (build 24.79-b02-jvmg, mixed mode)
  |==18306== 
  |==18306== Events    : Ir
  |==18306== Collected : 1610140735
  |==18306== 
  |==18306== I   refs:      1,610,140,735
  |$ ls -al callgrind.out.*
  |-rw------- 1 akira users 5003407  5月 10 12:50 callgrind.out.18306
3.|$ kcachegrind callgrind.out.18306
</pre>

<p>
コールグラフ
</p>


<div class="figure">
<p><img src="img/20150510125343_callgrind.png" alt="20150510125343_callgrind.png" />
</p>
</div>

<p>
バッチリですね！
</p>
</div>
</div>

<div id="outline-container-sec-5" class="outline-2">
<h2 id="sec-5"><span class="section-number-2">5</span> 参考</h2>
<div class="outline-text-2" id="text-5">
<ul class="org-ul">
<li><a href="https://sourceware.org/gdb/onlinedocs/gdb/Variables.html">Variables - Debugging with GDB</a>
</li>
</ul>
</div>
</div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[調査]JVMのスタックサイズについて]]></title>
    <link href="http://luozengbin.github.io/blog/2015-04-22-%5B%E8%AA%BF%E6%9F%BB%5Djvm%E3%81%AE%E3%82%B9%E3%82%BF%E3%83%83%E3%82%AF%E3%82%B5%E3%82%A4%E3%82%BA%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6.html"/>
    <updated>2015-04-22T00:00:00+09:00</updated>
    <id>http://luozengbin.github.io/blog/[調査]jvmのスタックサイズについて</id>
    <content type="html"><![CDATA[<div id="table-of-contents">
<h2>Table of Contents</h2>
<div id="text-table-of-contents">
<ul>
<li><a href="#sec-1">1. 環境</a></li>
<li><a href="#sec-2">2. JVMのスタック領域について</a></li>
<li><a href="#sec-3">3. Javaスレッドのスタックページ構成</a></li>
<li><a href="#sec-4">4. HotSpotの実装</a>
<ul>
<li><a href="#sec-4-1">4.1. glibc guard page</a></li>
<li><a href="#sec-4-2">4.2. HotSpot Guard Pages</a></li>
<li><a href="#sec-4-3">4.3. Normal Stack</a></li>
</ul>
</li>
<li><a href="#sec-5">5. スタックサイズの制御</a></li>
<li><a href="#sec-6">6. ulimit -sの影響範囲</a></li>
<li><a href="#sec-7">7. -Xssと-XX:ThreadStackSizeの違い</a></li>
<li><a href="#sec-8">8. 参考</a></li>
</ul>
</div>
</div>

<div id="outline-container-sec-1" class="outline-2">
<h2 id="sec-1"><span class="section-number-2">1</span> 環境</h2>
<div class="outline-text-2" id="text-1">
<p>
本記事の内容は以下環境を前提としています。
</p>
<ul class="org-ul">
<li>GNU/Linux x86_64
</li>
<li>OpenJDK 64-Bit 1.7.0_xx
</li>
</ul>
</div>
</div>

<div id="outline-container-sec-2" class="outline-2">
<h2 id="sec-2"><span class="section-number-2">2</span> JVMのスタック領域について</h2>
<div class="outline-text-2" id="text-2">
<p>
<code>-Xss</code> 、 <code>-XX:ThreadStackSize</code> パラメータ値と <code>ulimit -s</code> リソースリミット制限値を混
乱している記事を見受けたため、HotSpotの中身を調べることにしました。
</p>

<p>
結論を先に、
</p>
<ul class="org-ul">
<li><code>ulimit -s</code> のスタック最大サイズ制限値は親プロセスであるJVMランチャーのみ適用される。
</li>
<li>JVMランチャーやJavaAPIから起動されたJavaスレッドのスタックサイズは  <code>-Xss</code> もしくは
<code>-XX:ThreadStackSize</code> パラメータ値が適用される。
</li>
<li>JVMランチャーから起動されたイニシャルスレッドのスタックサイズは <code>-Xss</code> パラメータの
み制御できる。
</li>
<li>JNI経由で外部からJVMにアタッチしたスレッドのスタックサイズはJVMの管理対象外である。
</li>
</ul>

<p>
<!-- more -->
</p>

<p>
JVMスタックに関して、公式のJVMスペックドキュメント (<a href="https://docs.oracle.com/javase/specs/jvms/se7/html/">Java SE 7 Virtual Machine
Specification</a>) は次のように記載されています。
</p>

<ul class="org-ul">
<li><a href="http://docs.oracle.com/javase/specs/jvms/se7/html/jvms-2.html#jvms-2.5.2">2.5.2. Java Virtual Machine Stacks</a>
<pre class="example">
Each Java Virtual Machine thread has a private Java Virtual Machine stack, created at
the same time as the thread. A Java Virtual Machine stack stores frames (§2.6). A
Java Virtual Machine stack is analogous to the stack of a conventional language such
as C: it holds local variables and partial results, and plays a part in method
invocation and return. Because the Java Virtual Machine stack is never manipulated
directly except to push and pop frames, frames may be heap allocated. The memory for
a Java Virtual Machine stack does not need to be contiguous.
</pre>
<p>
※メモ： VMスタック内のFrameはヒープ上に配置されるかも知れない。
</p>
</li>
<li><a href="http://docs.oracle.com/javase/specs/jvms/se7/html/jvms-2.html#jvms-2.5.6">2.5.6. Native Method Stacks</a>
<pre class="example">
An implementation of the Java Virtual Machine may use conventional stacks,
colloquially called "C stacks," to support native methods (methods written in a
language other than the Java programming language). Native method stacks may also be
used by the implementation of an interpreter for the Java Virtual Machine's
instruction set in a language such as C. Java Virtual Machine implementations that
cannot load native methods and that do not themselves rely on conventional stacks
need not supply native method stacks. If supplied, native method stacks are typically
allocated per thread when each thread is created.
</pre>
</li>
</ul>

<p>
仕様上ではJVMに <code>Java Stack</code> と <code>Native Stack</code> ２種類のスタックメモリが定義されています。
</p>

<ul class="org-ul">
<li><code>Java Stack</code> ：Javaコード部分実行時に使われる領域
</li>
<li><code>Native Stack</code> ：はJNIライブラリを利用時に使われる領域
</li>
</ul>

<p>
以下は、JVMのメモリ論理構成イメージです。
</p>
<pre class="example">
+----------------+--------------+-------------+------------------------------------------------------+
|                |              |             |  +-----------------+  +----------+  +-------------+  |
|     Heap       |   PermGen    | Code Cache  |  | Program Counter |  |JavaStack |  |Native Stack |  |
|                |              |             |  +-----------------+  |          |  |             |  |
+----------------+--------------+-------------+                       +----------+  +-------------+  |
                                              |                       | Frame #2 |  |             |  |
                                              |                       +----------+  +-------------+  |
                                              |  &lt;&lt; Thread &gt;&gt;         | Frame #1 |  |             |  |
                                              |                       +----------+  +-------------+  |
                                              +------------------------------------------------------+
</pre>
<p>
<code>図1</code>
</p>

<p>
理論上は <code>Java Stack</code> と <code>Native Stack</code> がスレッド毎に領域が確保されいます。ただし、
実際のメモリページ構成はJDKの実装に依存するものです。
</p>

<p>
次の情報によると、HotSpotの実装は <code>Java Stack</code> と <code>Native Stack</code> が同じメモリ領域を共
有してる。
</p>

<ul class="org-ul">
<li><a href="http://docs.oracle.com/javase/7/docs/webnotes/tsg/TSG-VM/html/toc.html">Troubleshooting Guide for HotSpot VM</a> の <a href="https://docs.oracle.com/javase/7/docs/webnotes/tsg/TSG-VM/html/crashes.html#gbyzz">4.1.3 Crash due to Stack Overflow</a>
<pre class="example">
In the HotSpot implementation, Java methods share stack frames with C/C++ native
★~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
code, namely user native code and the virtual machine itself. Java methods generate
code that checks that stack space is available a fixed distance towards the end of
the stack so that the native code can be called without exceeding the stack
space. This distance towards the end of the stack is called “Shadow Pages.” The
size of the shadow pages is between 3 and 20 pages, depending on the platform. This
distance is tunable, so that applications with native code needing more than the
default distance can increase the shadow page size. The option to increase shadow
pages is -XX:StackShadowPages=n, where n is greater than the default stack shadow
pages for the platform.
</pre>
</li>

<li>OpenJDKの開発メーリングリストから拾った内容
<pre class="example">
The stock HotSpot VM (the one in Oracle's Java SE JDK and OpenJDK) uses the
same stack for Java and native methods for a Java thread; Java frames and
native frames can be mixed together in such a stack.
-Xss/-XX:ThreadStackSize controls the whole stack's size for Java threads.
</pre>
<p>
情報源： <a href="http://mail.openjdk.java.net/pipermail/hotspot-dev/2011-June/004272.html">What the difference between -Xss and -XX:ThreadStackSize is?</a>
</p>
</li>
</ul>
</div>
</div>

<div id="outline-container-sec-3" class="outline-2">
<h2 id="sec-3"><span class="section-number-2">3</span> Javaスレッドのスタックページ構成</h2>
<div class="outline-text-2" id="text-3">
<p>
HotSpotの実装から見るとJVMから起動されたJavaスレッドのスタックページは次の形で構成さ
れると思います。VM内部スレッドやJITコンパイルスレッドのページ構成はまだ別です。
</p>
<pre class="example">
   --+--                         +------------------------+
     |                          /|                        |\
     |                         / |    StackRedPages       | -XX:StackRedPages=1(4Kb)
     |                        /  |                        |/
     |   HotSpot Guard Pages--   +------------------------+
     |                        \  |                        |\
     |                         \ |    StackYellowPages    | -XX:StackYellowPages=2(8Kb)
     |                          \|                        |/
     |                           +------------------------+
     |                          /|                        |\ ★Native Stackはここです★
     |                         / |    StackShadowPages    | -XX:StackShadowPages=20(80Kb)
-XX:ThreadStackSize           /  |                        |/
     |                       /   +------------------------+
     |                      /    |                        |\
     |                     /     |   +----------------+   | \
     |       Normal Stack--      |   |     Frame      |   |  \
     |                     \     |   +----------------+   |   \
     |                      \    |   |     Frame      |   |    ★Java Stackはここです★
     |                       \   |   +----------------+   |   /
     |                        \  |   |     Frame      |   |  /
     |                         \ |   +----------------+   | /
     |                          \|                        |/
   --+--                         +------------------------+
</pre>
<p>
<code>図2</code>
</p>
</div>
</div>

<div id="outline-container-sec-4" class="outline-2">
<h2 id="sec-4"><span class="section-number-2">4</span> HotSpotの実装</h2>
<div class="outline-text-2" id="text-4">
<p>
以下はHotSpotのソースコードのコメントに書かれたスタックページ構成図です。
</p>

<p>
<a href="http://hg.openjdk.java.net/jdk7/jdk7/hotspot/file/9b0ca45cd756/src/os_cpu/linux_x86/vm/os_linux_x86.cpp#l668">jdk7:hotspot/src/os_cpu/linux_x86/vm/os_linux_x86.cpp</a>
</p>
<pre class="example">
// Java thread:
//
//   Low memory addresses
//    +------------------------+
//    |                        |\  JavaThread created by VM does not have glibc
//    |    glibc guard page    | - guard, attached Java thread usually has
//    |                        |/  1 page glibc guard.
// P1 +------------------------+ Thread::stack_base() - Thread::stack_size()
//    |                        |\
//    |  HotSpot Guard Pages   | - red and yellow pages
//    |                        |/
//    +------------------------+ JavaThread::stack_yellow_zone_base()
//    |                        |\
//    |      Normal Stack      | -
//    |                        |/
// P2 +------------------------+ Thread::stack_base()
//
// Non-Java thread:
//
//   Low memory addresses
//    +------------------------+
//    |                        |\
//    |  glibc guard page      | - usually 1 page
//    |                        |/
// P1 +------------------------+ Thread::stack_base() - Thread::stack_size()
//    |                        |\
//    |      Normal Stack      | -
//    |                        |/
// P2 +------------------------+ Thread::stack_base()
//
// ** P1 (aka bottom) and size ( P2 = P1 - size) are the address and stack size returned from
//    pthread_attr_getstack()
</pre>
<p>
<code>図3</code>
</p>

<p>
図の内容によるとJavaスレッドと非Javaスレッドのスタックページ構成が異なる。
以下はJVMの非Javaスレッドのリストです。
</p>

<table border="2" cellspacing="0" cellpadding="6" rules="groups" frame="hsides">


<colgroup>
<col  class="left" />

<col  class="left" />
</colgroup>
<thead>
<tr>
<th scope="col" class="left">スレッド名</th>
<th scope="col" class="left">説明</th>
</tr>
</thead>
<tbody>
<tr>
<td class="left">VM thread</td>
<td class="left">JVM自身のコアスレッド</td>
</tr>

<tr>
<td class="left">Periodic task thread</td>
<td class="left">WatcherThreadのシングルトンインスタンス、定義的なVMタスクを実行する</td>
</tr>

<tr>
<td class="left">GC threads</td>
<td class="left">その名の通りです、メモリ管理自動化役を務める</td>
</tr>

<tr>
<td class="left">Compiler threads</td>
<td class="left">ByteCodeからアセンブラにコンパイルするスレッド</td>
</tr>

<tr>
<td class="left">Signal dispatcher thread</td>
<td class="left">外部からシグナルをハンドリングする役を務める</td>
</tr>
</tbody>
</table>

<p>
図3の各領域についてソースコードを見ながら解説していきます。
</p>
</div>

<div id="outline-container-sec-4-1" class="outline-3">
<h3 id="sec-4-1"><span class="section-number-3">4.1</span> glibc guard page</h3>
<div class="outline-text-3" id="text-4-1">
<p>
<code>glibc guard page</code> はスタックポインタのオーバーフローを防ぐための－ガードページ。Java
スレッドには <code>HotSpot Guard Pages</code> が別途用意されているため、この領域のサイズが0であ
る。非Javaスレッドはスタック頂上位置に1ページ分のガードページが割り当てられる。以下は
その実装内容です。
</p>

<ul class="org-ul">
<li>スレッド作成時にglibcの <a href="http://linuxjm.sourceforge.jp/html/LDP_man-pages/man3/pthread_attr_setguardsize.3.html">pthread_attr_setguardsize</a> 関数にてガードページを作成してい
る

<p>
<a href="http://hg.openjdk.java.net/jdk7/jdk7/hotspot/file/9b0ca45cd756/src/os/linux/vm/os_linux.cpp#l923">jdk7/hotspot/src/os/linux/vm/os_linux.cpp#l923</a>
</p>
<div class="org-src-container">

<pre class="src src-c++"><span style="color: #00cd66;">// </span><span style="color: #00cd66;">Thread start routine for all newly created threads</span>
<span style="color: #ffffff;">static</span> <span style="color: #7fffd4;">void</span> *<span style="color: #98fb98;">java_start</span>(<span style="color: #7fffd4;">Thread</span> *<span style="color: #9acd32;">thread</span>) {
    ..............
    <span style="color: #00cd66;">// </span><span style="color: #00cd66;">glibc guard page</span>
    pthread_attr_setguardsize(&amp;attr, <span style="color: #40e0d0;">os</span>::<span style="color: #40e0d0;">Linux</span>::default_guard_size(thr_type));
    ..............
}
</pre>
</div>
</li>
<li>スレッド種別によってガードページのサイズを決める

<p>
<a href="http://hg.openjdk.java.net/jdk7/jdk7/hotspot/file/9b0ca45cd756/src/os_cpu/linux_x86/vm/os_linux_x86.cpp#l662">jdk7/hotspot/src/os_cpu/linux_x86/vm/os_linux_x86.cpp#l662</a>
</p>
<div class="org-src-container">

<pre class="src src-c++"><span style="color: #7fffd4;">size_t</span> <span style="color: #40e0d0;">os</span>::<span style="color: #40e0d0;">Linux</span>::<span style="color: #98fb98;">default_guard_size</span>(<span style="color: #40e0d0;">os</span>::<span style="color: #7fffd4;">ThreadType</span> <span style="color: #9acd32;">thr_type</span>) {
  <span style="color: #00cd66;">// </span><span style="color: #00cd66;">Creating guard page is very expensive. Java thread has HotSpot</span>
  <span style="color: #00cd66;">// </span><span style="color: #00cd66;">guard page, only enable glibc guard page for non-Java threads.</span>
  <span style="color: #ffffff;">return</span> (thr_type == java_thread ? 0 : page_size());
}
</pre>
</div>
</li>
</ul>

<p>
<code>glibc guard page</code> の詳細について以下の情報が参考になると思います。
</p>
<ul class="org-ul">
<li><a href="http://docs.oracle.com/cd/E19455-01/806-2732/attrib-22/index.html">スタックガードの大きさの設定</a>
</li>
<li><a href="http://linuxjm.sourceforge.jp/html/LDP_man-pages/man3/pthread_attr_setguardsize.3.html">PTHREAD_ATTR_SETGUARDSIZE</a>
</li>
<li><a href="http://codezine.jp/article/detail/1970">pthreadについて（スタックサイズ）</a>
</li>
<li><a href="http://www.nminoru.jp/~nminoru/programming/stackoverflow_handling.html#get-stack-region">スタックオーバーフローのハンドリング (Stack Overflow Handling)</a>
</li>
</ul>
</div>
</div>

<div id="outline-container-sec-4-2" class="outline-3">
<h3 id="sec-4-2"><span class="section-number-3">4.2</span> HotSpot Guard Pages</h3>
<div class="outline-text-3" id="text-4-2">
<p>
Javaスレッドスタックオーバーフローを検出するために書き込み不可の <code>HotSpot Guard
Pages</code> 領域がスタック領域のトップ位置に設けている。また <code>HotSpot Guard Pages</code> は
<code>StackYellowPages</code> と <code>StackRedPages</code> から構成されている。
</p>

<p>
<code>StackYellowPages</code> はスタックオーバーフローの緩衝域として、余分のメモリーを割り当てま
す。 スタックポインターが <code>StackRedPages</code> まで行くとStackOverflowErrorが起きる。
</p>

<p>
以下はページの構成イメージです。
</p>
<pre class="example">
          +------------------------+
         /|                        |\
HotSpot / |    StackRedPages       | - 1ページ (4Kb)
Guard  /  |                        |/
Pages     +------------------------+
       \  |                        |\
        \ |    StackYellowPages    | - 2ページ (8Kb)
         \|                        |/
          +------------------------+
          |                        |
          |      Normal Stack      |
          |                        |
          +------------------------+
</pre>
<p>
<code>図4</code>
</p>

<p>
Linux/x86_64環境に置いて、 <code>StackYellowPages</code> と <code>StackRedPages</code> の初期値が2と1である。
それぞれの値は <code>-XX:StackYellowPages</code> と <code>-XX:StackRedPages</code> パラメータにて変更するこ
とが可能です。
</p>

<p>
下記は <code>HotSpot Guard Pages</code> の割当処理ロジックです。
</p>

<ul class="org-ul">
<li>Javaスレッド起動時のガードページ割当位置やサイズの計算処理

<p>
<a href="http://hg.openjdk.java.net/jdk7/jdk7/hotspot/file/9b0ca45cd756/src/share/vm/runtime/thread.cpp#l2257">jdk7:openjdk/hotspot/src/share/vm/runtime/thread.cpp</a>
</p>
<div class="org-src-container">

<pre class="src src-c++"><span style="color: #7fffd4;">void</span> <span style="color: #40e0d0;">JavaThread</span>::<span style="color: #98fb98;">create_stack_guard_pages</span>() {
  <span style="color: #ffffff;">if</span> (! <span style="color: #40e0d0;">os</span>::uses_stack_guard_pages() || _stack_guard_state != stack_guard_unused) <span style="color: #ffffff;">return</span>;

  <span style="color: #00cd66;">// </span><span style="color: #00cd66;">&#9733; &#12460;&#12540;&#12489;&#12506;&#12540;&#12472;&#12398;&#20301;&#32622;&#12392;&#12469;&#12452;&#12474;&#12398;&#35336;&#31639;</span>
  <span style="color: #7fffd4;">address</span> <span style="color: #9acd32;">low_addr</span> = stack_base() - stack_size();
  <span style="color: #7fffd4;">size_t</span> <span style="color: #9acd32;">len</span> = (StackYellowPages + StackRedPages) * <span style="color: #40e0d0;">os</span>::vm_page_size();

  <span style="color: #00cd66;">// </span><span style="color: #00cd66;">&#9733; &#12460;&#12540;&#12489;&#12506;&#12540;&#12472;&#21106;&#24403;&#20966;&#29702;&#12399;&#12503;&#12521;&#12483;&#12488;&#12501;&#12457;&#12540;&#12512;&#20381;&#23384;&#12398;&#12383;&#12417;&#12289;&#21029;&#38306;&#25968;&#12434;&#12467;&#12540;&#12523;</span>
  <span style="color: #7fffd4;">int</span> <span style="color: #9acd32;">allocate</span> = <span style="color: #40e0d0;">os</span>::allocate_stack_guard_pages();
  <span style="color: #00cd66;">// </span><span style="color: #00cd66;">warning("Guarding at " PTR_FORMAT " for len " SIZE_FORMAT "\n", low_addr, len);</span>

  <span style="color: #ffffff;">if</span> (allocate &amp;&amp; !<span style="color: #40e0d0;">os</span>::create_stack_guard_pages((<span style="color: #7fffd4;">char</span> *) low_addr, len)) {
    warning(<span style="color: #bdb76b;">"Attempt to allocate stack guard pages failed."</span>);
    <span style="color: #ffffff;">return</span>;
  }

  <span style="color: #ffffff;">if</span> (<span style="color: #40e0d0;">os</span>::guard_memory((<span style="color: #7fffd4;">char</span> *) low_addr, len)) {
    _stack_guard_state = stack_guard_enabled;
  } <span style="color: #ffffff;">else</span> {
    warning(<span style="color: #bdb76b;">"Attempt to protect stack guard pages failed."</span>);
    <span style="color: #ffffff;">if</span> (<span style="color: #40e0d0;">os</span>::uncommit_memory((<span style="color: #7fffd4;">char</span> *) low_addr, len)) {
      warning(<span style="color: #bdb76b;">"Attempt to deallocate stack guard pages failed."</span>);
    }
  }
}
</pre>
</div>
</li>

<li>ガードページ割当処理

<p>
<a href="http://hg.openjdk.java.net/jdk7u/jdk7u60/hotspot/file/ba66650acf63/src/os/linux/vm/os_linux.cpp#l3062">jdk7u60:openjdk/hotspot/src/os/linux/vm/os_linux.cpp</a>
</p>
<div class="org-src-container">

<pre class="src src-c++"><span style="color: #7fffd4;">bool</span> <span style="color: #40e0d0;">os</span>::<span style="color: #98fb98;">pd_create_stack_guard_pages</span>(<span style="color: #7fffd4;">char</span>* <span style="color: #9acd32;">addr</span>, <span style="color: #7fffd4;">size_t</span> <span style="color: #9acd32;">size</span>) {

  <span style="color: #ffffff;">if</span> (<span style="color: #40e0d0;">os</span>::<span style="color: #40e0d0;">Linux</span>::is_initial_thread()) {
    <span style="color: #00cd66;">// </span><span style="color: #00cd66;">As we manually grow stack up to bottom inside create_attached_thread(),</span>
    <span style="color: #00cd66;">// </span><span style="color: #00cd66;">it's likely that os::Linux::initial_thread_stack_bottom is mapped and</span>
    <span style="color: #00cd66;">// </span><span style="color: #00cd66;">we don't need to do anything special.</span>
    <span style="color: #00cd66;">// </span><span style="color: #00cd66;">Check it first, before calling heavy function.</span>
    <span style="color: #7fffd4;">uintptr_t</span> <span style="color: #9acd32;">stack_extent</span> = (<span style="color: #7fffd4;">uintptr_t</span>) <span style="color: #40e0d0;">os</span>::<span style="color: #40e0d0;">Linux</span>::initial_thread_stack_bottom();
    <span style="color: #7fffd4;">unsigned</span> <span style="color: #7fffd4;">char</span> <span style="color: #9acd32;">vec</span>[1];

    <span style="color: #ffffff;">if</span> (mincore((<span style="color: #7fffd4;">address</span>)stack_extent, <span style="color: #40e0d0;">os</span>::vm_page_size(), vec) == -1) {
      <span style="color: #00cd66;">// </span><span style="color: #00cd66;">Fallback to slow path on all errors, including EAGAIN</span>
      stack_extent = (<span style="color: #7fffd4;">uintptr_t</span>) get_stack_commited_bottom(
                                    <span style="color: #40e0d0;">os</span>::<span style="color: #40e0d0;">Linux</span>::initial_thread_stack_bottom(),
                                    (<span style="color: #7fffd4;">size_t</span>)addr - stack_extent);
    }

    <span style="color: #ffffff;">if</span> (stack_extent &lt; (<span style="color: #7fffd4;">uintptr_t</span>)addr) {
      ::munmap((<span style="color: #7fffd4;">void</span>*)stack_extent, (<span style="color: #7fffd4;">uintptr_t</span>)(addr - stack_extent));
    }
  }

  <span style="color: #00cd66;">// </span><span style="color: #00cd66;">&#9733;&#12371;&#12371;&#12363;&#12425; mmap&#12471;&#12473;&#12486;&#12512;&#12467;&#12540;&#12523;&#12364;&#30330;&#34892;&#12373;&#12428;&#12427;&#12290;</span>
  <span style="color: #00cd66;">//  </span><span style="color: #00cd66;">&#26368;&#24460;&#12398;&#24341;&#25968;&#12395;&#26360;&#12365;&#36796;&#12415;&#19981;&#21487;&#12398;&#12501;&#12521;&#12464;&#12364;&#20184;&#19982;&#12373;&#12428;&#12383;</span>
  <span style="color: #ffffff;">return</span> <span style="color: #40e0d0;">os</span>::commit_memory(addr, size, !ExecMem);
}
</pre>
</div>
</li>
</ul>

<p>
以下は <code>JBoss AS7</code> アプリケーションサーバ実行時にワーカスレッドのスタック仮想メモリ割
当状況です。
</p>

<pre class="example">
$ cat /proc/`ps -ef | grep [j]boss.modules.system | awk '{print $2}'`/smaps
...省略...
7ff751076000-7ff751079000 ---p 00000000 00:00 0
Size:                 12 kB    ★説明: StackRedPages(4Kb) + StackYellowPages(8Kb) = 12Kb
Rss:                   0 kB
Pss:                   0 kB
Shared_Clean:          0 kB
Shared_Dirty:          0 kB
Private_Clean:         0 kB
Private_Dirty:         0 kB
Referenced:            0 kB
Anonymous:             0 kB
AnonHugePages:         0 kB
Swap:                  0 kB
KernelPageSize:        4 kB
MMUPageSize:           4 kB
Locked:                0 kB
VmFlags: mr mw me ac          ★説明:書き込み不可
7ff751079000-7ff751177000 rw-p 00000000 00:00 0                          [stack:21275]
Size:               1016 kB   ★説明: ここからNormal Stackページ
Rss:                 108 kB
Pss:                 108 kB
Shared_Clean:          0 kB
Shared_Dirty:          0 kB
Private_Clean:         0 kB
Private_Dirty:       108 kB
Referenced:          108 kB
Anonymous:           108 kB
AnonHugePages:         0 kB
Swap:                  0 kB
KernelPageSize:        4 kB
MMUPageSize:           4 kB
Locked:                0 kB
VmFlags: rd wr mr mw me ac
...省略...
</pre>

<p>
次のSystemTapスクリプトで <code>HotSpot Guard Pages</code> の割当処理をトレースしてみた。
</p>

<p>
<code>jvm_memory_trace.stp</code>
</p>
<pre class="example">
#!/usr/bin/stap -p4
probe process("/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.75-2.5.4.7.el7_1.x86_64/jre/lib/amd64/server/libjvm.so").function("commit_memory_impl")
{
   printf("---------------------------------------------------------\n")
   printf("%d\t%s\n", tid(), $$parms)
   print_ustack(ubacktrace())
}
</pre>

<p>
出力結果
</p>
<pre class="example">
  |$ stap jvm_memory_trace.stp -c "java  -version"
  |Using a compile server.
  |WARNING: Missing unwind data for module, rerun with 'stap -d ...dk-1.7.0.75-2.5.4.7.el7_1.x86_64/jre/lib/amd64/jli/libjli.so'
  |WARNING: Missing unwind data for module, rerun with 'stap -d /usr/lib64/libpthread-2.17.so'
  |java version "1.7.0_75"
  |OpenJDK Runtime Environment (rhel-2.5.4.7.el7_1-x86_64 u75-b13)
  |OpenJDK 64-Bit Server VM (build 24.75-b04, mixed mode)
  |
  |★省略★
  |--------------------------------------------------------------------------------------------------------------
①|12179	exec=0x0 size=0x3000 addr=0x7f1d05b57000  ★commit_memory_impl関数実行時の引数情報
  | 0x7f1d04808371 : _ZN2os16pd_commit_memoryEPcmb+0x1/0xf0 [...1.7.0.75-2.5.4.7.el7_1.x86_64/jre/lib/amd64/server/libjvm.so]
  | 0x7f1d04802dee : _ZN2os13commit_memoryEPcmb+0x2e/0xd0 [...1.7.0.75-2.5.4.7.el7_1.x86_64/jre/lib/amd64/server/libjvm.so]
②| 0x7f1d048092df : _ZN2os27pd_create_stack_guard_pagesEPcm+0x7f/0x180 [...1.7.0.75-2.5.4.7.el7_1.x86_64/jre/lib/amd64/server/libjvm.so]
  | 0x7f1d04945519 : _ZN7Threads9create_vmEP14JavaVMInitArgsPb+0x339/0x1550 [...1.7.0.75-2.5.4.7.el7_1.x86_64/jre/lib/amd64/server/libjvm.so]
  | 0x7f1d0463fca7 : JNI_CreateJavaVM+0x67/0x2a0 [...1.7.0.75-2.5.4.7.el7_1.x86_64/jre/lib/amd64/server/libjvm.so]
  | 0x7f1d0562aa68 : 0x7f1d0562aa68 [...dk-1.7.0.75-2.5.4.7.el7_1.x86_64/jre/lib/amd64/jli/libjli.so+0x2a68/0x20e000]
  |--------------------------------------------------------------------------------------------------------------
  |★以降省略★
</pre>

<p>
出力結果に①の <a href="http://hg.openjdk.java.net/jdk7u/jdk7u60/hotspot/file/ba66650acf63/src/os/linux/vm/os_linux.cpp#l2728">commit_memory_impl</a> 仮想メモリ割当処理の第２引数にメモリサイズを指定し
ています。 <code>size=0x3000</code> の値が16進数ですので、10進数に変換すると12Kbです。予測通りで
すね。
</p>

<p>
gdbを用いて上記出力結果から②のソースコード位置を特定する方法を以下に示す。
</p>
<pre class="example">
$ gdb /usr/lib/jvm/java-1.7.0-openjdk-1.7.0.75-2.5.4.7.el7_1.x86_64/jre/lib/amd64/server/libjvm.so
GNU gdb (GDB) Red Hat Enterprise Linux 7.6.1-64.el7
★一部内容省略★
Reading symbols from /usr/lib/jvm/java-1.7.0-openjdk-1.7.0.75-2.5.4.7.el7_1.x86_64/jre/lib/amd64/server/libjvm.so...Reading symbols from /usr/lib/debug/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.75-2.5.4.7.el7_1.x86_64/jre/lib/amd64/server/libjvm.so.debug...done.
done.
★出力結果から関数名ぽいの文字列で関数を探す
(gdb) info functions pd_create_stack_guard_pages
All functions matching regular expression "pd_create_stack_guard_pages":

★検索結果
File /usr/src/debug/java-1.7.0-openjdk-1.7.0.75-2.5.4.7.el7_1.x86_64/openjdk/hotspot/src/os/linux/vm/os_linux.cpp:
bool os::pd_create_stack_guard_pages(char*, unsigned long);
(gdb)
</pre>
</div>
</div>

<div id="outline-container-sec-4-3" class="outline-3">
<h3 id="sec-4-3"><span class="section-number-3">4.3</span> Normal Stack</h3>
<div class="outline-text-3" id="text-4-3">
<p>
Javaスレッドを前提に置いて、 <code>Normal Stack</code> には通常Javaメソッド実行時のフレーム情報
が格納される。ただし、スレッドからC/C++メソッドを実行する時も <code>Normal Stack</code> が利用さ
れる。スタックのトップ位置にC/C++メソッド実行用の <code>StackShadowPages</code> が設けられている。
Linux/x86_64環境に置いて <code>StackShadowPages</code> の初期値が20である。
</p>

<pre class="example">
              +------------------------+
             /|                        |\
            / |    StackShadowPages    | -XX:StackShadowPages=20(80Kb)
           /  |                        |/ ★Native Stackはここです!
          /   +------------------------+
         /    |                        |\
        /     |   +----------------+   | \ 
Normal Stack  |   |     Frame      |   |  \
        \     |   +----------------+   |   \
         \    |   |     Frame      |   |    - ★Java Stackはここです！
          \   |   +----------------+   |   /
           \  |   |     Frame      |   |  /
            \ |   +----------------+   | /
             \|                        |/
              +------------------------+
</pre>
<p>
<code>図5</code>
</p>

<p>
以下は <code>StackShadowPages</code> 初期値の代入処理ロジックです。
</p>

<p>
<a href="http://hg.openjdk.java.net/jdk7u/jdk7u60/hotspot/file/ba66650acf63/src/cpu/x86/vm/globals_x86.hpp#l60">jdk7:hotspot/src/cpu/x86/vm/globals_x86.hpp#l60</a>
</p>
<div class="org-src-container">

<pre class="src src-c++"><span style="color: #b0c4de;">#ifdef</span> AMD64
<span style="color: #00cd66;">// </span><span style="color: #00cd66;">Very large C++ stack frames using solaris-amd64 optimized builds</span>
<span style="color: #00cd66;">// </span><span style="color: #00cd66;">due to lack of optimization caused by C++ compiler bugs</span>
define_pd_global(intx, StackShadowPages, NOT_WIN64(20) WIN64_ONLY(6) DEBUG_ONLY(+2));
<span style="color: #b0c4de;">#else</span>
define_pd_global(intx, StackShadowPages, 6 DEBUG_ONLY(+5));
<span style="color: #b0c4de;">#endif</span> <span style="color: #00cd66;">// </span><span style="color: #00cd66;">AMD64</span>
</pre>
</div>

<p>
<code>StackShadowPages</code> に関して以下の情報が参考になると思います。
</p>
<ul class="org-ul">
<li><a href="https://docs.oracle.com/javase/7/docs/webnotes/tsg/TSG-VM/html/crashes.html#gbyzz">Troubleshooting Guide for HotSpot VM 4.1.3 Crash due to Stack Overflow</a>
</li>
<li><a href="http://bugs.java.com/bugdatabase/view_bug.do?bug_id=7059899a">JDK-7059899 : Stack overflows in Java code cause 64-bit JVMs to exit due to SIGSEGV</a>
</li>
<li><a href="https://access.redhat.com/solutions/698483">What does the StackShadowPages JVM setting do?</a>
<pre class="example">
StackShadowPages reserves a portion of the thread stack for native layer
allocations. The page size usually is 4096b, which mean that 20 pages would occupy
80Kb. The thread stack is sized through -Xss.

Consider some config examples:

   -Xss1024k -XX:StackShadowPages=10

   [       984kb java stack    | 40kb native stack]

   -Xss1024k -XX:StackShadowPages=20

   [       944kb java stack    |   80kb native stack]

   -Xss512k -XX:StackShadowPages=10

   [ 472kb java stack | 40kb native stack]

If you decrease just -Xss, the overall stack is decreased, but the StackShadowPages
native reservation is not; only the java portion would lose space. Likewise if you
only increase -Xss, only the java portion gains space with the increased stack.

If you increase StackShadowPages, the java portion becomes smaller so that the native
portion can be larger. If the native portion of a stack is exhausted, the JVM can
fatally crash so sometimes StackShadowPages needs to be increased.
</pre>
</li>
</ul>
</div>
</div>
</div>

<div id="outline-container-sec-5" class="outline-2">
<h2 id="sec-5"><span class="section-number-2">5</span> スタックサイズの制御</h2>
<div class="outline-text-2" id="text-5">
<p>
従いましてJava Methodに使えるスタック領域(Java Stack)のサイズは次の式で計算出来る。
</p>
<font color="red"><strong>
<p>
Java Satck Size = Thread::stack_size() - ((StackRedPages + StackYellowPages + StackShadowPages) * PageSize)
</p>
</strong></font>

<p>
<code>Thread::stack_size()</code> の値はスレッド起動時にglibcの <a href="http://linuxjm.sourceforge.jp/html/LDP_man-pages/man3/pthread_attr_setstacksize.3.html">pthread_attr_setstacksize</a> 関数を
用いて設定される。以下はHotSpotの実装です。
</p>

<ul class="org-ul">
<li>JVM起動時に実行される処理
<a href="http://hg.openjdk.java.net/jdk7u/jdk7u60/hotspot/file/ba66650acf63/src/os/linux/vm/os_linux.cpp#l4820">jdk7/hotspot/src/os/linux/vm/os_linux.cpp#4820</a>
<div class="org-src-container">

<pre class="src src-c++"><span style="color: #00cd66;">// </span><span style="color: #00cd66;">this is called _after_ the global arguments have been parsed</span>
<span style="color: #7fffd4;">jint</span> <span style="color: #40e0d0;">os</span>::<span style="color: #98fb98;">init_2</span>(<span style="color: #7fffd4;">void</span>)
{
  <span style="color: #00cd66;">// </span><span style="color: #00cd66;">&#9733;&#19968;&#37096;&#30465;&#30053;&#9733;</span>


  <span style="color: #00cd66;">// </span><span style="color: #00cd66;">&#9733;&#12473;&#12524;&#12483;&#12489;&#12395;&#21106;&#24403;&#12427;&#12473;&#12479;&#12483;&#12463;&#12469;&#12452;&#12474;&#12398;&#26368;&#23567;&#35377;&#23481;&#20516;&#12398;&#35336;&#31639;</span>

  <span style="color: #00cd66;">// </span><span style="color: #00cd66;">Check minimum allowable stack size for thread creation and to initialize</span>
  <span style="color: #00cd66;">// </span><span style="color: #00cd66;">the java system classes, including StackOverflowError - depends on page</span>
  <span style="color: #00cd66;">// </span><span style="color: #00cd66;">size.  Add a page for compiler2 recursion in main thread.</span>
  <span style="color: #00cd66;">// </span><span style="color: #00cd66;">Add in 2*BytesPerWord times page size to account for VM stack during</span>
  <span style="color: #00cd66;">// </span><span style="color: #00cd66;">class initialization depending on 32 or 64 bit VM.</span>
  <span style="color: #40e0d0;">os</span>::<span style="color: #40e0d0;">Linux</span>::min_stack_allowed = MAX2(<span style="color: #40e0d0;">os</span>::<span style="color: #40e0d0;">Linux</span>::min_stack_allowed,
            (<span style="color: #7fffd4;">size_t</span>)(StackYellowPages+StackRedPages+StackShadowPages) * <span style="color: #40e0d0;">Linux</span>::page_size() +
                    (2*BytesPerWord COMPILER2_PRESENT(+1)) * <span style="color: #40e0d0;">Linux</span>::vm_default_page_size());

<span style="color: #b0c4de;">#ifdef</span> ZERO
  <span style="color: #00cd66;">// </span><span style="color: #00cd66;">If this is Zero, allow at the very minimum one page each for the</span>
  <span style="color: #00cd66;">// </span><span style="color: #00cd66;">Zero stack and the native stack.  This won't make any difference</span>
  <span style="color: #00cd66;">// </span><span style="color: #00cd66;">for 4k pages, but is significant for large pages.</span>
  <span style="color: #40e0d0;">os</span>::<span style="color: #40e0d0;">Linux</span>::min_stack_allowed = MAX2(<span style="color: #40e0d0;">os</span>::<span style="color: #40e0d0;">Linux</span>::min_stack_allowed,
             (<span style="color: #7fffd4;">size_t</span>)(StackYellowPages+StackRedPages+StackShadowPages+2) * <span style="color: #40e0d0;">Linux</span>::page_size());
<span style="color: #b0c4de;">#endif</span>

  <span style="color: #7fffd4;">size_t</span> <span style="color: #9acd32;">threadStackSizeInBytes</span> = ThreadStackSize * K;
  <span style="color: #ffffff;">if</span> (threadStackSizeInBytes != 0 &amp;&amp;
      threadStackSizeInBytes &lt; <span style="color: #40e0d0;">os</span>::<span style="color: #40e0d0;">Linux</span>::min_stack_allowed) {
        tty-&gt;print_cr(<span style="color: #bdb76b;">"\nThe stack size specified is too small, "</span>
                      <span style="color: #bdb76b;">"Specify at least %dk"</span>,
                      <span style="color: #40e0d0;">os</span>::<span style="color: #40e0d0;">Linux</span>::min_stack_allowed/ K);
        <span style="color: #ffffff;">return</span> JNI_ERR;
  }

  <span style="color: #00cd66;">// </span><span style="color: #00cd66;">&#9733;-XX:ThreadStackSize&#12398;&#20516;&#12434;&#38745;&#30340;_stack_size_at_create&#22793;&#25968;&#12395;&#20195;&#20837;&#12377;&#12427;</span>
  <span style="color: #00cd66;">// </span><span style="color: #00cd66;">Make the stack size a multiple of the page size so that</span>
  <span style="color: #00cd66;">// </span><span style="color: #00cd66;">the yellow/red zones can be guarded.</span>
  <span style="color: #40e0d0;">JavaThread</span>::set_stack_size_at_create(round_to(threadStackSizeInBytes,
        vm_page_size()));

  <span style="color: #00cd66;">// </span><span style="color: #00cd66;">&#9733;&#12452;&#12491;&#12471;&#12515;&#12523;&#12473;&#12524;&#12483;&#12489;&#12398;&#12473;&#12479;&#12483;&#12463;&#12469;&#12452;&#12474;&#35373;&#23450;&#20966;&#29702;&#65288;&#9733;TODO: &#21029;&#36884;&#35519;&#26619;&#12377;&#12427;&#65289;</span>
  <span style="color: #40e0d0;">Linux</span>::capture_initial_stack(<span style="color: #40e0d0;">JavaThread</span>::stack_size_at_create());

  <span style="color: #00cd66;">// </span><span style="color: #00cd66;">&#9733;&#20197;&#38477;&#30465;&#30053;&#9733;</span>
</pre>
</div>
</li>
<li>新規スレッド起動時の処理
<a href="http://hg.openjdk.java.net/jdk7u/jdk7u60/hotspot/file/ba66650acf63/src/os/linux/vm/os_linux.cpp#l901">jdk7:hotspot/src/os/linux/vm/os_linux.cpp#901</a>
<div class="org-src-container">

<pre class="src src-c++"><span style="color: #7fffd4;">bool</span> <span style="color: #40e0d0;">os</span>::<span style="color: #98fb98;">create_thread</span>(<span style="color: #7fffd4;">Thread</span>* <span style="color: #9acd32;">thread</span>, <span style="color: #7fffd4;">ThreadType</span> <span style="color: #9acd32;">thr_type</span>, <span style="color: #7fffd4;">size_t</span> <span style="color: #9acd32;">stack_size</span>) {

  <span style="color: #00cd66;">// </span><span style="color: #00cd66;">&#9733;&#19968;&#37096;&#30465;&#30053;&#9733;</span>

  <span style="color: #00cd66;">// </span><span style="color: #00cd66;">&#9733;&#12473;&#12524;&#12483;&#12489;&#31278;&#21029;&#27598;&#12395;&#12473;&#12479;&#12483;&#12463;&#12469;&#12452;&#12474;&#12434;&#27770;&#12417;&#12427;</span>
  <span style="color: #ffffff;">if</span> (<span style="color: #40e0d0;">os</span>::<span style="color: #40e0d0;">Linux</span>::supports_variable_stack_size()) {
    <span style="color: #00cd66;">// </span><span style="color: #00cd66;">calculate stack size if it's not specified by caller</span>
    <span style="color: #ffffff;">if</span> (stack_size == 0) {
      stack_size = <span style="color: #40e0d0;">os</span>::<span style="color: #40e0d0;">Linux</span>::default_stack_size(thr_type);

      <span style="color: #ffffff;">switch</span> (thr_type) {

      <span style="color: #00cd66;">//</span><span style="color: #00cd66;">&#9733;Java&#12527;&#12540;&#12459;&#12473;&#12524;&#12483;&#12489;&#12398;&#22580;&#21512;</span>
      <span style="color: #ffffff;">case</span> <span style="color: #40e0d0;">os</span>::java_thread:
        <span style="color: #00cd66;">// </span><span style="color: #00cd66;">Java threads use ThreadStackSize which default value can be</span>
        <span style="color: #00cd66;">// </span><span style="color: #00cd66;">changed with the flag -Xss</span>
        assert (<span style="color: #40e0d0;">JavaThread</span>::stack_size_at_create() &gt; 0, <span style="color: #bdb76b;">"this should be set"</span>);
        stack_size = <span style="color: #40e0d0;">JavaThread</span>::stack_size_at_create();
        <span style="color: #ffffff;">break</span>;

      <span style="color: #00cd66;">//</span><span style="color: #00cd66;">&#9733;JIT&#12467;&#12531;&#12497;&#12452;&#12521;&#12473;&#12524;&#12483;&#12489;&#12398;&#22580;&#21512;</span>
      <span style="color: #ffffff;">case</span> <span style="color: #40e0d0;">os</span>::compiler_thread:
        <span style="color: #ffffff;">if</span> (CompilerThreadStackSize &gt; 0) {
          stack_size = (<span style="color: #7fffd4;">size_t</span>)(CompilerThreadStackSize * K);
          <span style="color: #ffffff;">break</span>;
        } <span style="color: #00cd66;">// </span><span style="color: #00cd66;">else fall through:</span>
          <span style="color: #00cd66;">// </span><span style="color: #00cd66;">use VMThreadStackSize if CompilerThreadStackSize is not defined</span>

      <span style="color: #00cd66;">//</span><span style="color: #00cd66;">&#9733;VM&#12473;&#12524;&#12483;&#12489;&#12289;GC&#12473;&#12524;&#12483;&#12489;&#12289;&#12454;&#12457;&#12483;&#12481;&#12515;&#12540;&#12473;&#12524;&#12483;&#12489;&#12398;&#22580;&#21512;</span>
      <span style="color: #ffffff;">case</span> <span style="color: #40e0d0;">os</span>::vm_thread:
      <span style="color: #ffffff;">case</span> <span style="color: #40e0d0;">os</span>::pgc_thread:
      <span style="color: #ffffff;">case</span> <span style="color: #40e0d0;">os</span>::cgc_thread:
      <span style="color: #ffffff;">case</span> <span style="color: #40e0d0;">os</span>::watcher_thread:
        <span style="color: #ffffff;">if</span> (VMThreadStackSize &gt; 0) stack_size = (<span style="color: #7fffd4;">size_t</span>)(VMThreadStackSize * K);
        <span style="color: #ffffff;">break</span>;
      }
    }

    stack_size = MAX2(stack_size, <span style="color: #40e0d0;">os</span>::<span style="color: #40e0d0;">Linux</span>::min_stack_allowed);
    <span style="color: #00cd66;">// </span><span style="color: #00cd66;">&#9733;glic&#38306;&#25968;&#29992;&#12356;&#12390;stack&#38936;&#22495;&#12434;&#30906;&#20445;&#12377;&#12427;</span>
    pthread_attr_setstacksize(&amp;attr, stack_size);

    <span style="color: #00cd66;">// </span><span style="color: #00cd66;">&#9733;&#20197;&#38477;&#30465;&#30053;&#9733;</span>
</pre>
</div>
</li>
</ul>

<p>
以上コードの通り、JVMから起動されたスレッドの種別毎のスタックサイズが下記XXパラメータ値が適用されてい
る。
</p>

<table border="2" cellspacing="0" cellpadding="6" rules="groups" frame="hsides">


<colgroup>
<col  class="left" />

<col  class="left" />

<col  class="left" />
</colgroup>
<thead>
<tr>
<th scope="col" class="left">引数</th>
<th scope="col" class="left">Linux/x86_64環境初期値</th>
<th scope="col" class="left">適用範囲</th>
</tr>
</thead>
<tbody>
<tr>
<td class="left">-XX:ThreadStackSize</td>
<td class="left">1M</td>
<td class="left">Javaスレッド</td>
</tr>

<tr>
<td class="left">-XX:VMThreadStackSize</td>
<td class="left">1M</td>
<td class="left">VM thread、GC threads、VM Periodic Task Threadなど</td>
</tr>

<tr>
<td class="left">-XX:CompilerThreadStackSize</td>
<td class="left">4M</td>
<td class="left">C1 C2 CompilerThread</td>
</tr>
</tbody>
</table>

<p>
以下は実機にて確認された各パラメータの初期値です。
</p>
<pre class="example">
$ java -XX:+PrintFlagsFinal -version | grep -e "CompilerThreadStackSize\|ThreadStackSize\|VMThreadStackSize"
     intx CompilerThreadStackSize                   = 0               {pd product}
     intx ThreadStackSize                           = 1024            {pd product}
     intx VMThreadStackSize                         = 1024            {pd product}
java version "1.7.0_75"
OpenJDK Runtime Environment (rhel-2.5.4.7.el7_1-x86_64 u75-b13)
OpenJDK 64-Bit Server VM (build 24.75-b04, mixed mode)
</pre>

<p>
<code>CompilerThreadStackSize</code> が指定しない場合下記コードにて初期値が代入される。
</p>

<p>
<a href="http://hg.openjdk.java.net/jdk7/jdk7/hotspot/file/9b0ca45cd756/src/os_cpu/linux_x86/vm/os_linux_x86.cpp#l652">jdk7:hotspot/src/os_cpu/linux_x86/vm/os_linux_x86.cpp#652</a>
</p>
<div class="org-src-container">

<pre class="src src-c++"><span style="color: #00cd66;">// </span><span style="color: #00cd66;">return default stack size for thr_type</span>
<span style="color: #7fffd4;">size_t</span> <span style="color: #40e0d0;">os</span>::<span style="color: #40e0d0;">Linux</span>::<span style="color: #98fb98;">default_stack_size</span>(<span style="color: #40e0d0;">os</span>::<span style="color: #7fffd4;">ThreadType</span> <span style="color: #9acd32;">thr_type</span>) {
  <span style="color: #00cd66;">// </span><span style="color: #00cd66;">default stack size (compiler thread needs larger stack)</span>
<span style="color: #b0c4de;">#ifdef</span> AMD64
  <span style="color: #7fffd4;">size_t</span> <span style="color: #9acd32;">s</span> = (thr_type == <span style="color: #40e0d0;">os</span>::compiler_thread ? 4 * M : 1 * M);
<span style="color: #b0c4de;">#else</span>
  <span style="color: #7fffd4;">size_t</span> <span style="color: #9acd32;">s</span> = (thr_type == <span style="color: #40e0d0;">os</span>::compiler_thread ? 2 * M : 512 * K);
<span style="color: #b0c4de;">#endif</span> <span style="color: #00cd66;">// </span><span style="color: #00cd66;">AMD64</span>
  <span style="color: #ffffff;">return</span> s;
}
</pre>
</div>

<p>
次のサンプルプログラムを実行して、各スレッドのスタックサイズ値を実測してみる。
</p>

<p>
<code>HelloWorld.java</code>
</p>
<div class="org-src-container">

<pre class="src src-java"><span style="color: #ffffff;">public</span> <span style="color: #ffffff;">class</span> <span style="color: #7fffd4;">HelloWorld</span> <span style="color: #ffffff;">implements</span> <span style="color: #7fffd4;">Runnable</span> {

    <span style="color: #ffffff;">public</span> <span style="color: #7fffd4;">void</span> <span style="color: #98fb98;">run</span>(){
        <span style="color: #ffffff;">while</span>(<span style="color: #40e0d0;">true</span>) {
            <span style="color: #ffffff;">try</span> {
                Thread.sleep(1 * 1000L);
                System.out.println(Thread.currentThread().toString() + <span style="color: #bdb76b;">": Hello World"</span>);
            } <span style="color: #ffffff;">catch</span> (<span style="color: #7fffd4;">Exception</span> <span style="color: #9acd32;">e</span>) {
            }
        }
    }

    <span style="color: #ffffff;">public</span> <span style="color: #ffffff;">static</span> <span style="color: #7fffd4;">void</span> <span style="color: #98fb98;">main</span>(<span style="color: #7fffd4;">String</span>[] <span style="color: #9acd32;">args</span>) <span style="color: #ffffff;">throws</span> <span style="color: #7fffd4;">Exception</span> {
        <span style="color: #7fffd4;">Thread</span>[] <span style="color: #9acd32;">t_arry</span> =  <span style="color: #ffffff;">new</span> <span style="color: #7fffd4;">Thread</span>[5];
        <span style="color: #ffffff;">for</span> (<span style="color: #7fffd4;">int</span> <span style="color: #9acd32;">i</span> = 0; i &lt; t_arry.<span style="color: #7fffd4;">length</span>; i++) {
            t_arry[i]  =  <span style="color: #ffffff;">new</span> <span style="color: #7fffd4;">Thread</span>(<span style="color: #ffffff;">new</span> <span style="color: #7fffd4;">HelloWorld</span>());
            t_arry[i].start();
        }
        <span style="color: #ffffff;">for</span> (<span style="color: #7fffd4;">int</span> <span style="color: #9acd32;">i</span> = 0; i &lt; t_arry.<span style="color: #7fffd4;">length</span>; i++) {
            t_arry[i].join();
        }

    }
}
</pre>
</div>

<p>
スタックサイズの実測値は次のスクリプトで取得しています。
</p>

<p>
<code>jvm_stacksize.sh</code>
</p>
<div class="org-src-container">

<pre class="src src-sh"><span style="color: #00cd66;">#</span><span style="color: #00cd66;">!/bin/</span><span style="color: #ffffff;">sh</span>

<span style="color: #ffffff;">if</span> [ ! $<span style="color: #9acd32;">#</span> -eq 1 ]; <span style="color: #ffffff;">then</span>
    <span style="color: #b0c4de;">echo</span> <span style="color: #bdb76b;">"Usage ${0} &lt;JVM PID&gt;"</span>
    <span style="color: #ffffff;">exit</span> 1
<span style="color: #ffffff;">fi</span>

<span style="color: #b0c4de;">printf</span> <span style="color: #bdb76b;">"[ PID ]\t[StackSize]\t[GuardPages]\t[Thread Name]\n"</span>

<span style="color: #00cd66;"># </span><span style="color: #00cd66;">jstack&#12398;&#20986;&#21147;&#32080;&#26524;&#12363;&#12425;&#12473;&#12524;&#12483;&#12489;ID&#12392;&#21517;&#21069;&#12434;&#25277;&#20986;&#12377;&#12427;</span>
jstack $<span style="color: #9acd32;">1</span> | grep nid | sed -e <span style="color: #bdb76b;">"s/^\"\(.*\)\".*nid=\(0x[0-9|a-z]*\).*$/\2,\1/"</span> | sort | <span style="color: #ffffff;">while </span><span style="color: #b0c4de;">read</span> line
<span style="color: #ffffff;">do</span>
    <span style="color: #00cd66;"># </span><span style="color: #00cd66;">&#12473;&#12524;&#12483;&#12489;ID&#12434;&#20999;&#12426;&#20986;&#12377;</span>
    <span style="color: #9acd32;">pid_hex</span>=<span style="color: #fa8072;">`echo "${line}" | awk -F"," '{print $1}'`</span>

    <span style="color: #00cd66;"># </span><span style="color: #00cd66;">&#12473;&#12524;&#12483;&#12489;&#21517;&#12434;&#20999;&#12426;&#20986;&#12377;</span>
    <span style="color: #9acd32;">thread_name</span>=<span style="color: #fa8072;">`echo "${line}" | awk -F"," '{print $2}'`</span>

    <span style="color: #00cd66;"># </span><span style="color: #00cd66;">&#12473;&#12524;&#12483;&#12489;ID&#12434;10&#36914;&#25968;&#12395;&#22793;&#25563;</span>
    <span style="color: #9acd32;">pid</span>=<span style="color: #fa8072;">`printf '%d\n' ${pid_hex}`</span>

    <span style="color: #00cd66;"># </span><span style="color: #00cd66;">/proc/&lt;pid&gt;/smaps &#12501;&#12449;&#12452;&#12523;&#12363;&#12425;&#12473;&#12479;&#12483;&#12463;&#12469;&#12452;&#12474;&#12289;&#12460;&#12540;&#12489;&#12506;&#12540;&#12472;&#12469;&#12452;&#12474;&#12434;&#21462;&#24471;&#12377;&#12427;</span>
    <span style="color: #9acd32;">guard_page</span>=<span style="color: #fa8072;">`cat /proc/$1/smaps | grep -B15 "stack:${pid}"| head -1 | awk '{print $2}'`</span>
    <span style="color: #9acd32;">stack_page</span>=<span style="color: #fa8072;">`cat /proc/$1/smaps | grep -A1 "stack:${pid}" | tail -1 | awk '{print $2}'`</span>
    <span style="color: #9acd32;">stack_size</span>=<span style="color: #fa8072;">`expr ${guard_page} + ${stack_page}`</span>
    <span style="color: #b0c4de;">printf</span> <span style="color: #bdb76b;">"%7d\t%11s\t%12s\t%s\n"</span> <span style="color: #bdb76b;">"${pid}"</span> <span style="color: #bdb76b;">"${stack_size}Kb"</span> <span style="color: #bdb76b;">"${guard_page}Kb"</span> <span style="color: #bdb76b;">"${thread_name}"</span>
<span style="color: #ffffff;">done</span>
</pre>
</div>

<p>
スタックサイズを明示的に指定して、サンプルを実行する。
</p>
<ul class="org-ul">
<li>-XX:ThreadStackSize=512
</li>
<li>-XX:VMThreadStackSize: 2048
</li>
<li>-XX:CompilerThreadStackSize=3072
</li>
</ul>
<pre class="example">
java -XX:VMThreadStackSize=2048 -XX:CompilerThreadStackSize=3072 -XX:ThreadStackSize=512 HelloWorld
Thread[Thread-0,5,main]: Hello World
Thread[Thread-4,5,main]: Hello World
Thread[Thread-1,5,main]: Hello World
Thread[Thread-3,5,main]: Hello World
Thread[Thread-2,5,main]: Hello World
★以降は省略
</pre>

<p>
測定結果
</p>
<pre class="example">
$ ./jvm_stacksize.sh `ps -ef | grep "[j]ava.*HelloWorld" | awk '{print $2}'`
[ PID ]	[StackSize]	[GuardPages]	[Thread Name]
  17285	     1048Kb	        12Kb	main
  17286	     2096Kb	         4Kb	GC task thread#0 (ParallelGC)
  17287	     2052Kb	         4Kb	GC task thread#1 (ParallelGC)
  17288	     2052Kb	         4Kb	GC task thread#2 (ParallelGC)
  17289	     2052Kb	         4Kb	GC task thread#3 (ParallelGC)
  17290	     2052Kb	         4Kb	VM Thread
  17291	    64584Kb	        12Kb	Reference Handler
  17292	      516Kb	        12Kb	Finalizer
  17293	      516Kb	        12Kb	Signal Dispatcher
  17294	     3076Kb	        12Kb	C2 CompilerThread0
  17295	     3076Kb	        12Kb	C2 CompilerThread1
  17296	      516Kb	        12Kb	Service Thread
  17297	     2052Kb	         4Kb	VM Periodic Task Thread
  17298	      516Kb	        12Kb	Thread-0
  17299	      516Kb	        12Kb	Thread-1
  17300	      516Kb	        12Kb	Thread-2
  17301	      516Kb	        12Kb	Thread-3
  17302	      516Kb	        12Kb	Thread-4
  17342	      516Kb	        12Kb	Attach Listener
</pre>

<p>
実測値はXXパラメータで指定した値より１ページ分多い。これは <code>glibc</code> 内部の
<a href="https://www.sourceware.org/git/gitweb.cgi?p=glibc.git;a=blob;f=nptl/allocatestack.c;h=8e620c46e9523092a5cf141e77f35c94dcfd9810;hb=HEAD#l349">allocate_stack</a> 処理で追加されているものです。
</p>
</div>
</div>

<div id="outline-container-sec-6" class="outline-2">
<h2 id="sec-6"><span class="section-number-2">6</span> ulimit -sの影響範囲</h2>
<div class="outline-text-2" id="text-6">
<p>
Linux環境に置いて、JVM内のスレッドは全てglibcの <code>pthread_create</code> 関数経由で起動される。
スレッド起動時にスタックサイズ明示的に指定していない場合、 <code>ulimit -s</code> で設定された値
がスタックのデフォルトサイズとして適用される。前文に書いた通りJVMはスレッド起動時に明
示的 <code>pthread_attr_setstacksize</code> 関数でXXパラメータ値の元にスタックサイズを指定してい
るため、これらのスレッドのスタックサイズは <code>ulimit -s</code> の値に影響されないだ。
</p>

<p>
ただし、JVMランチャー自身は <code>ulimit -s</code> の制限値が適用される。
</p>

<p>
<code>ulimit</code> コマンドでスタックの上限値 <code>RLIMIT_STACK</code> を64Kbを設定し、サンプルプログラム
グライムを実行すると、ランチャーのスタックサイズが60Kbで収まった。
</p>
<pre class="example">
$ ulimit -s 64
$ java -Xss1024K -XX:VMThreadStackSize=2048 -XX:CompilerThreadStackSize=3072 -XX:ThreadStackSize=512 HelloWorld
Thread[Thread-1,5,main]: Hello World
Thread[Thread-3,5,main]: Hello World
Thread[Thread-0,5,main]: Hello World
Thread[Thread-2,5,main]: Hello World
Thread[Thread-4,5,main]: Hello World
★省略
</pre>

<p>
<code>pmap</code> コマンドで仮想メモリマップの最上位アドレス近くにランチャーのスタックサイズを確
認することができる。
</p>
<pre class="example">
$ pmap `ps -ef | grep "[j]ava.*HelloWorld" | awk '{print $2}'`
★省略
00007f39d068d000      4K r---- ld-2.17.so
00007f39d068e000      4K rw--- ld-2.17.so
00007f39d068f000      4K rw---   [ anon ]
00007fff7cf79000     60K rw---   [ stack ] ★ランチャーのスタックサイズ
00007fff7cffe000      8K r-x--   [ anon ]
ffffffffff600000      4K r-x--   [ anon ]
 total          3513684K
</pre>

<p>
JVM内の各スレッドのスタックサイズは下記の通りです、 <code>RLIMIT_STACK</code> に影響されていない
ことが分かります。
</p>
<pre class="example">
]$ ./jvm_stacksize.sh `ps -ef | grep "[j]ava.*HelloWorld" | awk '{print $2}'`
[ PID ]	[StackSize]	[GuardPages]	[Thread Name]
  10770	     1048Kb	        12Kb	main
  10771	     2096Kb	         4Kb	GC task thread#0 (ParallelGC)
  10772	     2052Kb	         4Kb	GC task thread#1 (ParallelGC)
  10773	     2052Kb	         4Kb	GC task thread#2 (ParallelGC)
  10774	     2052Kb	         4Kb	GC task thread#3 (ParallelGC)
  10775	    15812Kb	         4Kb	VM Thread
  10776	      516Kb	        12Kb	Reference Handler
  10777	    63556Kb	        12Kb	Finalizer
  10778	      516Kb	        12Kb	Signal Dispatcher
  10779	     3076Kb	        12Kb	C2 CompilerThread0
  10780	     3076Kb	        12Kb	C2 CompilerThread1
  10781	      516Kb	        12Kb	Service Thread
  10782	     2052Kb	         4Kb	VM Periodic Task Thread
  10783	      516Kb	        12Kb	Thread-0
  10784	      516Kb	        12Kb	Thread-1
  10785	      516Kb	        12Kb	Thread-2
  10786	      516Kb	        12Kb	Thread-3
  10787	      516Kb	        12Kb	Thread-4
  11203	      516Kb	        12Kb	Attach Listener
</pre>
</div>
</div>

<div id="outline-container-sec-7" class="outline-2">
<h2 id="sec-7"><span class="section-number-2">7</span> -Xssと-XX:ThreadStackSizeの違い</h2>
<div class="outline-text-2" id="text-7">
<p>
<code>-Xss</code> と <code>-XX:ThreadStackSize</code> 両方ともJavaスレッドのスタックを指定するパラメータで
ある。 ただし、JVMランチャーから起動されたイニシャルスレッドのスタックサイズの制御は
<code>-Xss</code> パラメータのみできる。
</p>

<p>
以下はJVMランチャーからイニシャルスレッド起動するまでの流れ
</p>
<pre class="example">
行
 | ★ランチャーの実行
1| openjdk/jdk/src/share/bin/main.c:93           ==&gt; int main(int, char **);
2| openjdk/jdk/src/share/bin/java.c:170            ==&gt; int JLI_Launch(int, char **, int, const char **, int, const char **, const char *, const char *, const char *, const char *, jboolean, jboolean, jboolean, jint);
3| openjdk/jdk/src/share/bin/java.c:1835             ==&gt; int ContinueInNewThread(InvocationFunctions *, jlong, int, char **, int, char *, int);
 | ★イニシャルスレッド起動
4| openjdk/jdk/src/solaris/bin/java_md_solinux.c:1021  ==&gt; int ContinueInNewThread0(int (JNICALL *continuation)(void *), jlong stack_size, void * args)
5| openjdk/jdk/src/share/bin/java.c:337                  ==&gt; int JavaMain(void *);
 | openjdk/jdk/src/share/bin/java.c:1097                 ==&gt; jboolean InitializeJVM(JavaVM **pvm, JNIEnv **penv, InvocationFunctions *ifn)
6| openjdk/hotspot/src/share/vm/prims/jni.cpp            ==&gt; jint JNI_CreateJavaVM(JavaVM**, void**, void*);
7| openjdk/hotspot/src/share/vm/runtime/thread.cpp:3271    ==&gt; jint Threads::create_vm(JavaVMInitArgs*, bool*);
8| openjdk/hotspot/src/os/linux/vm/os_linux.cpp:4898         ==&gt; jint os::init_2(void)
9| openjdk/hotspot/src/os/linux/vm/os_linux.cpp:1205           ==&gt; void os::Linux::capture_initial_stack(size_t max_size)
</pre>

<ul class="org-ul">
<li>行1: JVMランチャーのmain関数
</li>
<li>行2: <code>JLI_Launch</code> 関数にてコマンドラインパラメータのパーシング処理が実行される。
</li>
<li>行3: <code>-Xss</code> パラメータが指定されていない場合、デフォルト値(1024Kb)を取得し(4)に渡す。
</li>
<li>行4: glibcの <code>pthread_create</code> 関数を用いてイニシャルスレッドを起動する。 <code>-Xss</code> の
値がスタックサイズに適用される。
</li>
</ul>

<p>
<code>-Xss</code> と <code>-XX:ThreadStackSize</code> 片方指定する場合、と両方指定する場合効果が違うので要注意です。
</p>

<table border="2" cellspacing="0" cellpadding="6" rules="groups" frame="hsides">


<colgroup>
<col  class="left" />

<col  class="left" />

<col  class="left" />
</colgroup>
<thead>
<tr>
<th scope="col" class="left">&#xa0;</th>
<th scope="col" class="left">イニシャルスレッド</th>
<th scope="col" class="left">ワーカスレッド</th>
</tr>
</thead>
<tbody>
<tr>
<td class="left">-Xss2048K</td>
<td class="left">2048K</td>
<td class="left">2048K</td>
</tr>
</tbody>
<tbody>
<tr>
<td class="left">-XX:ThreadStackSize=2048</td>
<td class="left">1024K</td>
<td class="left">2048K</td>
</tr>
</tbody>
<tbody>
<tr>
<td class="left">-Xss2048K</td>
<td class="left">2048K</td>
<td class="left">512K</td>
</tr>

<tr>
<td class="left">-XX:ThreadStackSize=512</td>
<td class="left">&#xa0;</td>
<td class="left">&#xa0;</td>
</tr>
</tbody>
</table>
</div>
</div>
<div id="outline-container-sec-8" class="outline-2">
<h2 id="sec-8"><span class="section-number-2">8</span> 参考</h2>
<div class="outline-text-2" id="text-8">
<p>
本記事書く際に下記コンテンツを参考した。
</p>
<ul class="org-ul">
<li><a href="http://mail.openjdk.java.net/pipermail/hotspot-dev/2011-June/004272.html">What the difference between -Xss and -XX:ThreadStackSize is?</a>
</li>
<li><a href="https://docs.oracle.com/javase/7/docs/webnotes/tsg/TSG-VM/html/toc.html">Troubleshooting Guide for HotSpot VM</a>
</li>
<li><a href="http://openjdk.java.net/groups/hotspot/docs/RuntimeOverview.html">HotSpot Runtime Overview</a>
</li>
<li><a href="http://xmlandmore.blogspot.jp/2014/09/jdk-8-thread-stack-size-tuning.html?m=1">JDK 8: Thread Stack Size Tuning </a>
</li>
<li><a href="http://www.slideshare.net/m0nstermind/java-runtime-jvm">Java Runtime: повседневные обязанности</a>
</li>
<li><a href="http://brakkee.org/site/2012/10/13/java-from-the-trenches-crash-free-and-responsive-servers/">Java from the trenches: improving reliability</a>
</li>
<li><a href="https://help.blackboard.com/en-us/Learn/9.1_SP_12_and_SP_13/Administrator/010_Release_Notes/020_SP_12_Release_Notes/Performance_and_Scalability/Recommended_JVM_Tuning_Set">Recommended JVM Tuning Set</a>
</li>
<li><a href="http://stackoverflow.com/questions/11025459/where-is-the-java-stack-allocated">where is the Java stack allocated?</a>
</li>
<li><a href="http://unix.stackexchange.com/questions/145557/how-does-stack-allocation-work-in-linux">How does stack allocation work in Linux?</a>
</li>
<li><a href="http://www.oracle.com/technetwork/articles/servers-storage-dev/mem-alloc-1557798.html">How Memory Allocation Affects Performance in Multithreaded Programs</a>
</li>
<li><a href="http://stackoverflow.com/questions/15251250/what-do-the-different-hotspot-jvm-thread-types-do">What do the different (HotSpot) JVM thread types do?</a>
</li>
<li><a href="http://stackoverflow.com/questions/25309748/what-is-thread-stack-size-option-xss-given-to-jvm-why-does-it-have-a-limit-of">What is thread stack size option(-Xss) given to jvm? Why does it have a limit of atleast 68k in a windows pc?</a>
</li>
<li><a href="http://j2eedebug.blogspot.jp/2008/12/mapping-java-thread-to-pstack-and-pmap.html?m=1">Mapping java thread to pstack and pmap</a>
</li>
<li><a href="http://msugai.fc2web.com/java/perform/storage.html">JVM のメモリ構造</a>
</li>
<li><a href="http://codezine.jp/article/detail/1970?p=2">pthreadについて（スタックサイズ）</a>
</li>
<li><a href="http://www.megadriver.info/~fumi/2010/11/linux-%25E3%2581%25AE-pthread-%25E3%2581%25AE%25E3%2583%2587%25E3%2583%2595%25E3%2582%25A9%25E3%2583%25AB%25E3%2583%2588%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%2583%25E3%2582%25AF%25E3%2582%25B5%25E3%2582%25A4%25E3%2582%25BA%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6/">Linux の pthread のデフォルトスタックサイズについて</a>
</li>
<li><a href="http://linuxjm.sourceforge.jp/html/LDP_man-pages/man3/pthread_attr_setstacksize.3.html">PTHREAD_ATTR_SETSTACKSIZE</a>
</li>
<li><a href="http://docs.oracle.com/cd/E19455-01/806-2732/6jbu8v6ol/index.html#attrib-33670">マルチスレッドのプログラミング - スタックについて</a>
</li>
<li><a href="http://th0x4c.github.io/blog/2012/10/10/os-virtual-memory-map/">{OS} 仮想メモリ空間のメモリマップを調べる</a>
</li>
<li><a href="http://gntm-mdk.hatenadiary.com/entry/2015/01/21/231258">VSS RSS PSS USS の説明</a>
</li>
<li><a href="http://hllvm.group.iteye.com/group/topic/37717">咨询各位大神，使用jni，当栈内空间使用为1M时，会触发core</a>
</li>
</ul>
</div>
</div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[調査]JBossASソケット受信バッファーのサイズ]]></title>
    <link href="http://luozengbin.github.io/blog/2015-04-01-%5B%E8%AA%BF%E6%9F%BB%5Djbossas%E3%82%BD%E3%82%B1%E3%83%83%E3%83%88%E5%8F%97%E4%BF%A1%E3%83%90%E3%83%83%E3%83%95%E3%82%A1%E3%83%BC%E3%81%AE%E3%82%B5%E3%82%A4%E3%82%BA.html"/>
    <updated>2015-04-01T00:00:00+09:00</updated>
    <id>http://luozengbin.github.io/blog/[調査]jbossasソケット受信バッファーのサイズ</id>
    <content type="html"><![CDATA[<div id="table-of-contents">
<h2>Table of Contents</h2>
<div id="text-table-of-contents">
<ul>
<li><a href="#sec-1">1. 実験シナリオ</a></li>
<li><a href="#sec-2">2. テスト信用のサーブレットを準備する</a></li>
<li><a href="#sec-3">3. サーバソケットの受信バッファーサイズを確認する</a></li>
<li><a href="#sec-4">4. Acceptorスレッドを意図的ストールさせる</a></li>
<li><a href="#sec-5">5. TCPソケット受信バッファサイズを監視する</a></li>
<li><a href="#sec-6">6. パケット通信を監視する</a></li>
<li><a href="#sec-7">7. telnetからデータを順次に送りつける</a></li>
<li><a href="#sec-8">8. 監視結果解析</a></li>
<li><a href="#sec-9">9. TCPソケット受信バッファーサイズの設定について</a></li>
<li><a href="#sec-10">10. まとめ</a></li>
<li><a href="#sec-11">11. 参考</a></li>
</ul>
</div>
</div>
<p>
以下LinuxプラットフォームでJBossASアプリケーションサーバの話です。
</p>

<p>
次のケースに置いて、Acceptorスレッドやワーカスレッドの働き状態が悪くなるため、クライ
アントから送信されてデータがサーバ側のTCPソケット受信バッファーに溜まる。バッファーが
一杯になるとパケット受信ができなくなる、TCPレーヤでパケット再送が起きる。
</p>

<ul class="org-ul">
<li>サーバが過負荷状態でCPU時間がAcceptorスレッドやワーカスレッドに回らない場合
</li>
<li>FullGCによるJBossASサーバの一時停止
</li>
</ul>

<p>
この記事はTCP受信バッファーのサイズの実測値を調査致します。
</p>

<p>
<!-- more -->
</p>

<div id="outline-container-sec-1" class="outline-2">
<h2 id="sec-1"><span class="section-number-2">1</span> 実験シナリオ</h2>
<div class="outline-text-2" id="text-1">
<ul class="org-ul">
<li>テスト信用のサーブレットを準備する
</li>
<li>サーバソケットの受信バッファーサイズを確認する
</li>
<li>Acceptorスレッドを意図的ストールさせる
</li>
<li>TCPソケット受信バッファサイズを監視する
</li>
<li>パケット通信を監視する
</li>
<li>telnetからデータを順次に送りつける
</li>
</ul>
</div>
</div>

<div id="outline-container-sec-2" class="outline-2">
<h2 id="sec-2"><span class="section-number-2">2</span> テスト信用のサーブレットを準備する</h2>
<div class="outline-text-2" id="text-2">
<p>
受信したHTTPリクエストパラメータを出力するシンプルなサーブレットをJBossASにデプロイす
る。
</p>
<div class="org-src-container">

<pre class="src src-java"><span style="color: #ffad29; font-weight: bold;">package</span> jp.co.jizai.sample.jbossas7.<span style="color: #008b8b;">tcp</span>;

<span style="color: #ffad29; font-weight: bold;">import</span> <span style="color: #008b8b;">javax</span>.<span style="color: #008b8b;">servlet</span>.<span style="color: #34cae2;">ServletException</span>;
<span style="color: #ffad29; font-weight: bold;">import</span> <span style="color: #008b8b;">javax</span>.<span style="color: #008b8b;">servlet</span>.<span style="color: #008b8b;">http</span>.<span style="color: #34cae2;">HttpServlet</span>;
<span style="color: #ffad29; font-weight: bold;">import</span> <span style="color: #008b8b;">javax</span>.<span style="color: #008b8b;">servlet</span>.<span style="color: #008b8b;">http</span>.<span style="color: #34cae2;">HttpServletRequest</span>;
<span style="color: #ffad29; font-weight: bold;">import</span> <span style="color: #008b8b;">javax</span>.<span style="color: #008b8b;">servlet</span>.<span style="color: #008b8b;">http</span>.<span style="color: #34cae2;">HttpServletResponse</span>;
<span style="color: #ffad29; font-weight: bold;">import</span> <span style="color: #008b8b;">java</span>.<span style="color: #008b8b;">io</span>.<span style="color: #34cae2;">IOException</span>;
<span style="color: #ffad29; font-weight: bold;">import</span> <span style="color: #008b8b;">java</span>.<span style="color: #008b8b;">io</span>.<span style="color: #34cae2;">PrintWriter</span>;
<span style="color: #ffad29; font-weight: bold;">import</span> <span style="color: #008b8b;">java</span>.<span style="color: #008b8b;">util</span>.<span style="color: #34cae2;">Enumeration</span>;
<span style="color: #ffad29; font-weight: bold;">import</span> <span style="color: #008b8b;">java</span>.<span style="color: #008b8b;">util</span>.<span style="color: #34cae2;">Map</span>;

<span style="color: #ffad29; font-weight: bold;">public</span> <span style="color: #ffad29; font-weight: bold;">class</span> <span style="color: #34cae2;">ShowParameterServlet</span> <span style="color: #ffad29; font-weight: bold;">extends</span> <span style="color: #34cae2;">HttpServlet</span> {

    <span style="color: #ffad29; font-weight: bold;">private</span> <span style="color: #ffad29; font-weight: bold;">static</span> <span style="color: #ffad29; font-weight: bold;">final</span> <span style="color: #34cae2;">String</span> <span style="color: #dbdb95;">CONTENT_TYPE</span> = <span style="color: #e67128;">"text/html; charset=UTF-8"</span>;

    <span style="color: #ffad29; font-weight: bold;">public</span> <span style="color: #34cae2;">void</span> <span style="color: #00ede1; font-weight: bold;">doGet</span>(<span style="color: #34cae2;">HttpServletRequest</span> <span style="color: #dbdb95;">req</span>, <span style="color: #34cae2;">HttpServletResponse</span> <span style="color: #dbdb95;">resp</span>) <span style="color: #ffad29; font-weight: bold;">throws</span> <span style="color: #34cae2;">ServletException</span>, <span style="color: #34cae2;">IOException</span> {

        process(req, resp);
    }


    <span style="color: #ffad29; font-weight: bold;">public</span> <span style="color: #34cae2;">void</span> <span style="color: #00ede1; font-weight: bold;">doPost</span>(<span style="color: #34cae2;">HttpServletRequest</span> <span style="color: #dbdb95;">req</span>, <span style="color: #34cae2;">HttpServletResponse</span> <span style="color: #dbdb95;">resp</span>) <span style="color: #ffad29; font-weight: bold;">throws</span> <span style="color: #34cae2;">ServletException</span>, <span style="color: #34cae2;">IOException</span> {
        process(req, resp);
    }

    <span style="color: #ffad29; font-weight: bold;">public</span> <span style="color: #34cae2;">void</span> <span style="color: #00ede1; font-weight: bold;">process</span>(<span style="color: #34cae2;">HttpServletRequest</span> <span style="color: #dbdb95;">req</span>, <span style="color: #34cae2;">HttpServletResponse</span> <span style="color: #dbdb95;">resp</span>) <span style="color: #ffad29; font-weight: bold;">throws</span> <span style="color: #34cae2;">ServletException</span>, <span style="color: #34cae2;">IOException</span> {
        resp.setContentType(CONTENT_TYPE);
        <span style="color: #34cae2;">PrintWriter</span> <span style="color: #dbdb95;">out</span> = resp.getWriter();
        System.out.println(<span style="color: #e67128;">"=== http parameter ==="</span>);
        <span style="color: #34cae2;">Map</span>&lt;<span style="color: #34cae2;">String</span>, <span style="color: #34cae2;">Object</span>&gt; <span style="color: #dbdb95;">paramMap</span> = (Map&lt;<span style="color: #34cae2;">String</span>, Object&gt;) req.getParameterMap();
        <span style="color: #ffad29; font-weight: bold;">for</span> (<span style="color: #008b8b;">Map</span>.<span style="color: #34cae2;">Entry</span>&lt;<span style="color: #34cae2;">String</span>, <span style="color: #34cae2;">Object</span>&gt; entry : paramMap.entrySet()) {
            out.write(String.format(<span style="color: #e67128;">"%s = %s"</span>, entry.getKey(), entry.getValue()) + <span style="color: #e67128;">"&lt;br/&gt;"</span>);
        }

        System.out.println(<span style="color: #e67128;">"=== http attribute ==="</span>);
        <span style="color: #34cae2;">Enumeration</span>&lt;<span style="color: #34cae2;">String</span>&gt; <span style="color: #dbdb95;">attrNames</span> = (<span style="color: #34cae2;">Enumeration</span>&lt;<span style="color: #34cae2;">String</span>&gt;) req.getAttributeNames();
        <span style="color: #ffad29; font-weight: bold;">while</span> (attrNames.hasMoreElements()) {
            <span style="color: #34cae2;">String</span> <span style="color: #dbdb95;">attrName</span> = attrNames.nextElement();
            out.write(String.format(<span style="color: #e67128;">"%s = %s"</span>, attrName, req.getAttribute(attrName)) + <span style="color: #e67128;">"&lt;br/&gt;"</span>);
        }
        out.close();
    }
}
</pre>
</div>
</div>
</div>

<div id="outline-container-sec-3" class="outline-2">
<h2 id="sec-3"><span class="section-number-2">3</span> サーバソケットの受信バッファーサイズを確認する</h2>
<div class="outline-text-2" id="text-3">
<p>
新規接続のサーバソケットのgetReceiveBufferSize()メソッドをコールする <code>Byteman</code> スクリ
プトを実行中のJBassASにアタッチメントする。
</p>
<div class="org-src-container">

<pre class="src src-sh">RULE trace http ReceiveBufferSize
CLASS org.apache.tomcat.util.net.JIoEndpoint
METHOD processSocket
AT ENTRY
BIND socket = $<span style="color: #dbdb95;">1</span>
IF TRUE
DO
  traceln(<span style="color: #e67128;">"socket.getReceiveBufferSize() = "</span> + socket.getReceiveBufferSize()), traceStack()
ENDRULE
</pre>
</div>

<p>
クライアントブラウザからテスト用サーブレットをアクセスすると、サーバログに以下の内容
が出力される。
</p>

<pre class="example">
15:46:11,002 INFO  [stdout] (http-/0.0.0.0:8080-Acceptor-0) socket.getReceiveBufferSize() = 43690
15:46:11,004 INFO  [stdout] (http-/0.0.0.0:8080-Acceptor-0) Stack trace for thread http-/0.0.0.0:8080-Acceptor-0
15:46:11,004 INFO  [stdout] (http-/0.0.0.0:8080-Acceptor-0) org.apache.tomcat.util.net.JIoEndpoint.processSocket(JIoEndpoint.java:-1)
15:46:11,004 INFO  [stdout] (http-/0.0.0.0:8080-Acceptor-0) org.apache.tomcat.util.net.JIoEndpoint$Acceptor.run(JIoEndpoint.java:315)
15:46:11,005 INFO  [stdout] (http-/0.0.0.0:8080-Acceptor-0) java.lang.Thread.run(Thread.java:745)
</pre>

<p>
<code>[[https://docs.oracle.com/javase/jp/6/api/java/net/Socket.html#setReceiveBufferSize%2528int%2529][java.net.Socket.getReceiveBufferSize]]()</code> で取れた値→ <code>43690</code> 単位がよくわからないの
でJavaDocを引いてみた。
</p>

<pre class="example">
public int getReceiveBufferSize()
                         throws SocketException

    この Socket で使われる SO_RCVBUF オプションの値を取得します。これは、この Socket で入力用としてプラットフォームが使うバッファーのサイズです。

    戻り値:
        この Socket の SO_RCVBUF オプションの値 
    例外:
        SocketException - 使用しているプロトコルでエラー (TCP エラーなど) が発生した場合
    導入されたバージョン:
        1.2
    関連項目:
        setReceiveBufferSize(int)
</pre>

<p>
やはり、分からないので <code>SO_RCVBUF</code> オプションの単位を探って見る。
</p>

<pre class="example">
SO_RCVBUF
    ソケットの受信バッファーの最大サイズを設定・取得する (バイト単位)。 setsockopt(2)
    を使って値が設定されたときに (管理オーバヘッド用の領域を確保するために) カーネルは
    この値を 2倍し、 getsockopt(2) はこの 2倍された値を返す。 デフォルトの値は
    /proc/sys/net/core/rmem_default ファイルで設定され、許容される最大の値は
    /proc/sys/net/core/rmem_max ファイルで設定される。 このオプションの最小値は (2倍し
    た値で) 256 である
</pre>

<p>
僕の日本語理解力が低いので、正確な意味が掴めないままだが。一先ず受信バッファーサイズの
単位がバイトだそうです。 <code>43690</code> バイトは約42KB、またTCP受信バッファーカーネルパラメー
タ <code>net.ipv4.tcp_rmem</code> の値は下記の通りとなります。 <code>43690</code> は丁度 <code>net.ipv4.tcp_rmem</code>
のデフォルト値の 1/2 であることが分かりました。
</p>

<pre class="example">
# sysctl -a | grep net.ipv4.tcp_rmem
net.ipv4.tcp_rmem = 4096	87380	4194304
</pre>
</div>
</div>

<div id="outline-container-sec-4" class="outline-2">
<h2 id="sec-4"><span class="section-number-2">4</span> Acceptorスレッドを意図的ストールさせる</h2>
<div class="outline-text-2" id="text-4">
<p>
新規接続を受け付ける処理 <code>org.apache.tomcat.util.net.JIoEndpoint.processSocket(Socket
socket)</code> でスレッドを30秒間Sleepされる <code>Byteman</code> スクリプトを実行中のJBossASにアタッチ
メントする。
</p>
<div class="org-src-container">

<pre class="src src-sh">RULE pause acceptor thread
CLASS org.apache.tomcat.util.net.JIoEndpoint
METHOD processSocket
AT ENTRY
BIND socket = $<span style="color: #dbdb95;">1</span>
IF TRUE
DO
  Thread.sleep(300000)
ENDRULE
</pre>
</div>
</div>
</div>

<div id="outline-container-sec-5" class="outline-2">
<h2 id="sec-5"><span class="section-number-2">5</span> TCPソケット受信バッファサイズを監視する</h2>
<div class="outline-text-2" id="text-5">
<p>
以下のコマンドでTCPソケット受信バッファサイズを監視する
</p>
<pre class="example">
$ watch -n 2 'netstat -an | grep ESTABLISHED | grep 8080'
</pre>
</div>
</div>

<div id="outline-container-sec-6" class="outline-2">
<h2 id="sec-6"><span class="section-number-2">6</span> パケット通信を監視する</h2>
<div class="outline-text-2" id="text-6">
<p>
クライアント側にて以下のコマンドでパケット通信の監視を行う
</p>
<pre class="example">
$sudo tcpdump -n -i virbr0 port 8080
</pre>
</div>
</div>

<div id="outline-container-sec-7" class="outline-2">
<h2 id="sec-7"><span class="section-number-2">7</span> telnetからデータを順次に送りつける</h2>
<div class="outline-text-2" id="text-7">
<p>
<code>net.ipv4.tcp_rmem</code> パラメータデフォルト値 <code>87380</code> より大きい電文を送るようにHTTPヘッ
ダーに <code>Content-Length: 120100</code> を指定する。
</p>

<pre class="example">
$ telnet jbossas-lab02 8080
POST /jbossas7-tcp-basic/ShowParameterServlet HTTP/1.1
Host: jbossas-lab02:8080
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:36.0) Gecko/20100101 Firefox/36.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
Accept-Language: ja,en-US;q=0.7,en;q=0.3
Accept-Encoding: gzip, deflate
Referer: http://jbossas-lab002:8080/jbossas7-tcp-basic/
Connection: Close
Content-Type: application/x-www-form-urlencoded
Content-Length: 120100

★まず100バイト分を送る(エンターは2バイト分になります)
param1=aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa ★エンターを押す

★以下4000バイト文字を30回繰り返しサーバに送る
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb
</pre>
</div>
</div>

<div id="outline-container-sec-8" class="outline-2">
<h2 id="sec-8"><span class="section-number-2">8</span> 監視結果解析</h2>
<div class="outline-text-2" id="text-8">
<p>
以下TCPソケット受信バッファサイズの監視結果、文中の★マークは結果の解析コメントとなり
ます。
</p>
<pre class="example">
# while [ true ]; do netstat -an | grep ESTABLISHED | grep 8080; sleep  2; done
★1 TCP3WHS 接続確立
tcp        0      0 192.168.122.66:8080         192.168.122.1:40976         ESTABLISHED 

★2 HTTPヘッダー受信
tcp      447      0 192.168.122.66:8080         192.168.122.1:40976         ESTABLISHED 

★3 リクエストデータの受信
tcp      547      0 192.168.122.66:8080         192.168.122.1:40976         ESTABLISHED 
tcp     4547      0 192.168.122.66:8080         192.168.122.1:40976         ESTABLISHED 
tcp     8547      0 192.168.122.66:8080         192.168.122.1:40976         ESTABLISHED 
tcp    12547      0 192.168.122.66:8080         192.168.122.1:40976         ESTABLISHED 
tcp    16547      0 192.168.122.66:8080         192.168.122.1:40976         ESTABLISHED 
tcp    20547      0 192.168.122.66:8080         192.168.122.1:40976         ESTABLISHED 
tcp    24547      0 192.168.122.66:8080         192.168.122.1:40976         ESTABLISHED 
tcp    28547      0 192.168.122.66:8080         192.168.122.1:40976         ESTABLISHED 
tcp    32547      0 192.168.122.66:8080         192.168.122.1:40976         ESTABLISHED 
tcp    36547      0 192.168.122.66:8080         192.168.122.1:40976         ESTABLISHED 
tcp    40547      0 192.168.122.66:8080         192.168.122.1:40976         ESTABLISHED 

★4 アプリ予約バッファサイズに達した、以降は管理領域を食い始めた
★  このタイミングからサーバ受信ウィンドウサイズが徐々に縮める
tcp    44547      0 192.168.122.66:8080         192.168.122.1:40976         ESTABLISHED 
tcp    48547      0 192.168.122.66:8080         192.168.122.1:40976         ESTABLISHED 
tcp    52547      0 192.168.122.66:8080         192.168.122.1:40976         ESTABLISHED 
tcp    56547      0 192.168.122.66:8080         192.168.122.1:40976         ESTABLISHED 
tcp    60547      0 192.168.122.66:8080         192.168.122.1:40976         ESTABLISHED 
tcp    64547      0 192.168.122.66:8080         192.168.122.1:40976         ESTABLISHED 
tcp    68547      0 192.168.122.66:8080         192.168.122.1:40976         ESTABLISHED 
tcp    72211      0 192.168.122.66:8080         192.168.122.1:40976         ESTABLISHED 

★5 以降TCPバッファが満タン
tcp    72211      0 192.168.122.66:8080         192.168.122.1:40976         ESTABLISHED 
tcp    72211      0 192.168.122.66:8080         192.168.122.1:40976         ESTABLISHED 
tcp    72211      0 192.168.122.66:8080         192.168.122.1:40976         ESTABLISHED 
tcp    72211      0 192.168.122.66:8080         192.168.122.1:40976         ESTABLISHED 
tcp    72211      0 192.168.122.66:8080         192.168.122.1:40976         ESTABLISHED 
tcp    72211      0 192.168.122.66:8080         192.168.122.1:40976         ESTABLISHED 
tcp    72211      0 192.168.122.66:8080         192.168.122.1:40976         ESTABLISHED 
tcp    72211      0 192.168.122.66:8080         192.168.122.1:40976         ESTABLISHED
</pre>


<p>
パケット監視結果は以下の通りです。
</p>
<pre class="example">
★1 TCP3WHS 接続確立
16:45:01.262499 IP 192.168.122.1.40976 &gt; 192.168.122.66.8080: Flags [S], seq 3028524293, win 29200, options [mss 1460,sackOK,TS val 50120659 ecr 0,nop,wscale 7], length 0
16:45:01.262697 IP 192.168.122.66.8080 &gt; 192.168.122.1.40976: Flags [S.], seq 1682372075, ack 3028524294, win 14480, options [mss 1460,sackOK,TS val 3798305 ecr 50120659,nop,wscale 7], length 0
16:45:01.262773 IP 192.168.122.1.40976 &gt; 192.168.122.66.8080: Flags [.], ack 1, win 229, options [nop,nop,TS val 50120659 ecr 3798305], length 0


★2 HTTPヘッダー送信
16:45:09.935452 IP 192.168.122.1.40976 &gt; 192.168.122.66.8080: Flags [P.], seq 1:57, ack 1, win 229, options [nop,nop,TS val 50123261 ecr 3798305], length 56: HTTP: POST /jbossas7-tcp-basic/ShowParameterServlet HTTP/1.1
16:45:09.935789 IP 192.168.122.66.8080 &gt; 192.168.122.1.40976: Flags [.], ack 57, win 114, options [nop,nop,TS val 3806979 ecr 50123261], length 0
16:45:09.935850 IP 192.168.122.1.40976 &gt; 192.168.122.66.8080: Flags [P.], seq 57:422, ack 1, win 229, options [nop,nop,TS val 50123261 ecr 3806979], length 365: HTTP
16:45:09.935905 IP 192.168.122.66.8080 &gt; 192.168.122.1.40976: Flags [.], ack 422, win 122, options [nop,nop,TS val 3806979 ecr 50123261], length 0
16:45:10.330264 IP 192.168.122.1.40976 &gt; 192.168.122.66.8080: Flags [P.], seq 422:446, ack 1, win 229, options [nop,nop,TS val 50123379 ecr 3806979], length 24: HTTP
16:45:10.330448 IP 192.168.122.66.8080 &gt; 192.168.122.1.40976: Flags [.], ack 446, win 122, options [nop,nop,TS val 3807373 ecr 50123379], length 0
16:45:10.897750 IP 192.168.122.1.40976 &gt; 192.168.122.66.8080: Flags [P.], seq 446:448, ack 1, win 229, options [nop,nop,TS val 50123550 ecr 3807373], length 2: HTTP
16:45:10.897911 IP 192.168.122.66.8080 &gt; 192.168.122.1.40976: Flags [.], ack 448, win 122, options [nop,nop,TS val 3807941 ecr 50123550], length 0

★3 リクエストデータの送信
16:45:19.464509 IP 192.168.122.1.40976 &gt; 192.168.122.66.8080: Flags [P.], seq 448:548, ack 1, win 229, options [nop,nop,TS val 50126120 ecr 3807941], length 100: HTTP
16:45:19.464668 IP 192.168.122.66.8080 &gt; 192.168.122.1.40976: Flags [.], ack 548, win 122, options [nop,nop,TS val 3816507 ecr 50126120], length 0
16:45:26.602423 IP 192.168.122.1.40976 &gt; 192.168.122.66.8080: Flags [P.], seq 548:4548, ack 1, win 229, options [nop,nop,TS val 50128261 ecr 3816507], length 4000: HTTP
16:45:26.602602 IP 192.168.122.66.8080 &gt; 192.168.122.1.40976: Flags [.], ack 4548, win 145, options [nop,nop,TS val 3823645 ecr 50128261], length 0
16:45:32.436162 IP 192.168.122.1.40976 &gt; 192.168.122.66.8080: Flags [P.], seq 4548:8548, ack 1, win 229, options [nop,nop,TS val 50130011 ecr 3823645], length 4000: HTTP
16:45:32.436338 IP 192.168.122.66.8080 &gt; 192.168.122.1.40976: Flags [.], ack 8548, win 167, options [nop,nop,TS val 3829479 ecr 50130011], length 0
16:45:35.452590 IP 192.168.122.1.40976 &gt; 192.168.122.66.8080: Flags [P.], seq 8548:12548, ack 1, win 229, options [nop,nop,TS val 50130916 ecr 3829479], length 4000: HTTP
16:45:35.452721 IP 192.168.122.66.8080 &gt; 192.168.122.1.40976: Flags [.], ack 12548, win 190, options [nop,nop,TS val 3832495 ecr 50130916], length 0
16:45:38.082228 IP 192.168.122.1.40976 &gt; 192.168.122.66.8080: Flags [P.], seq 12548:16548, ack 1, win 229, options [nop,nop,TS val 50131705 ecr 3832495], length 4000: HTTP
16:45:38.082396 IP 192.168.122.66.8080 &gt; 192.168.122.1.40976: Flags [.], ack 16548, win 212, options [nop,nop,TS val 3835125 ecr 50131705], length 0
16:45:40.743705 IP 192.168.122.1.40976 &gt; 192.168.122.66.8080: Flags [P.], seq 16548:20548, ack 1, win 229, options [nop,nop,TS val 50132504 ecr 3835125], length 4000: HTTP
16:45:40.743848 IP 192.168.122.66.8080 &gt; 192.168.122.1.40976: Flags [.], ack 20548, win 235, options [nop,nop,TS val 3837787 ecr 50132504], length 0
16:45:43.016683 IP 192.168.122.1.40976 &gt; 192.168.122.66.8080: Flags [P.], seq 20548:24548, ack 1, win 229, options [nop,nop,TS val 50133185 ecr 3837787], length 4000: HTTP
16:45:43.016863 IP 192.168.122.66.8080 &gt; 192.168.122.1.40976: Flags [.], ack 24548, win 258, options [nop,nop,TS val 3840060 ecr 50133185], length 0
16:45:45.721066 IP 192.168.122.1.40976 &gt; 192.168.122.66.8080: Flags [P.], seq 24548:28548, ack 1, win 229, options [nop,nop,TS val 50133997 ecr 3840060], length 4000: HTTP
16:45:45.721253 IP 192.168.122.66.8080 &gt; 192.168.122.1.40976: Flags [.], ack 28548, win 280, options [nop,nop,TS val 3842764 ecr 50133997], length 0
16:45:49.227814 IP 192.168.122.1.40976 &gt; 192.168.122.66.8080: Flags [P.], seq 28548:32548, ack 1, win 229, options [nop,nop,TS val 50135049 ecr 3842764], length 4000: HTTP
16:45:49.227964 IP 192.168.122.66.8080 &gt; 192.168.122.1.40976: Flags [.], ack 32548, win 253, options [nop,nop,TS val 3846271 ecr 50135049], length 0
16:45:51.671841 IP 192.168.122.1.40976 &gt; 192.168.122.66.8080: Flags [P.], seq 32548:36548, ack 1, win 229, options [nop,nop,TS val 50135782 ecr 3846271], length 4000: HTTP

★4 ここから再送が発生する
16:45:51.680266 IP 192.168.122.1.40976 &gt; 192.168.122.66.8080: Flags [P.], seq 35444:36548, ack 1, win 229, options [nop,nop,TS val 50135785 ecr 3846271], length 1104: HTTP
16:45:51.711839 IP 192.168.122.66.8080 &gt; 192.168.122.1.40976: Flags [.], ack 36548, win 225, options [nop,nop,TS val 3848755 ecr 50135782,nop,nop,sack 1 {35444:36548}], length 0
16:45:55.390996 IP 192.168.122.1.40976 &gt; 192.168.122.66.8080: Flags [P.], seq 36548:40548, ack 1, win 229, options [nop,nop,TS val 50136898 ecr 3848755], length 4000: HTTP
16:45:55.430802 IP 192.168.122.66.8080 &gt; 192.168.122.1.40976: Flags [.], ack 40548, win 197, options [nop,nop,TS val 3852474 ecr 50136898], length 0
16:45:59.291140 IP 192.168.122.1.40976 &gt; 192.168.122.66.8080: Flags [.], seq 40548:43444, ack 1, win 229, options [nop,nop,TS val 50138068 ecr 3852474], length 2896: HTTP
16:45:59.291169 IP 192.168.122.1.40976 &gt; 192.168.122.66.8080: Flags [P.], seq 43444:44548, ack 1, win 229, options [nop,nop,TS val 50138068 ecr 3852474], length 1104: HTTP
16:45:59.310296 IP 192.168.122.1.40976 &gt; 192.168.122.66.8080: Flags [P.], seq 43444:44548, ack 1, win 229, options [nop,nop,TS val 50138074 ecr 3852474], length 1104: HTTP
16:45:59.330773 IP 192.168.122.66.8080 &gt; 192.168.122.1.40976: Flags [.], ack 44548, win 166, options [nop,nop,TS val 3856374 ecr 50138068,nop,nop,sack 1 {43444:44548}], length 0
16:46:01.367501 IP 192.168.122.1.40976 &gt; 192.168.122.66.8080: Flags [.], seq 44548:47444, ack 1, win 229, options [nop,nop,TS val 50138691 ecr 3856374], length 2896: HTTP
16:46:01.367533 IP 192.168.122.1.40976 &gt; 192.168.122.66.8080: Flags [P.], seq 47444:48548, ack 1, win 229, options [nop,nop,TS val 50138691 ecr 3856374], length 1104: HTTP
16:46:01.406803 IP 192.168.122.66.8080 &gt; 192.168.122.1.40976: Flags [.], ack 48548, win 135, options [nop,nop,TS val 3858450 ecr 50138691], length 0
16:46:03.523326 IP 192.168.122.1.40976 &gt; 192.168.122.66.8080: Flags [.], seq 48548:51444, ack 1, win 229, options [nop,nop,TS val 50139337 ecr 3858450], length 2896: HTTP
16:46:03.523356 IP 192.168.122.1.40976 &gt; 192.168.122.66.8080: Flags [P.], seq 51444:52548, ack 1, win 229, options [nop,nop,TS val 50139337 ecr 3858450], length 1104: HTTP
16:46:03.553582 IP 192.168.122.1.40976 &gt; 192.168.122.66.8080: Flags [P.], seq 51444:52548, ack 1, win 229, options [nop,nop,TS val 50139347 ecr 3858450], length 1104: HTTP
16:46:03.553716 IP 192.168.122.66.8080 &gt; 192.168.122.1.40976: Flags [.], ack 52548, win 104, options [nop,nop,TS val 3860596 ecr 50139337,nop,nop,sack 1 {51444:52548}], length 0
16:46:06.322183 IP 192.168.122.1.40976 &gt; 192.168.122.66.8080: Flags [.], seq 52548:55444, ack 1, win 229, options [nop,nop,TS val 50140177 ecr 3860596], length 2896: HTTP
16:46:06.322212 IP 192.168.122.1.40976 &gt; 192.168.122.66.8080: Flags [P.], seq 55444:56548, ack 1, win 229, options [nop,nop,TS val 50140177 ecr 3860596], length 1104: HTTP
16:46:06.361777 IP 192.168.122.66.8080 &gt; 192.168.122.1.40976: Flags [.], ack 56548, win 73, options [nop,nop,TS val 3863405 ecr 50140177], length 0
16:46:08.944983 IP 192.168.122.1.40976 &gt; 192.168.122.66.8080: Flags [.], seq 56548:57996, ack 1, win 229, options [nop,nop,TS val 50140964 ecr 3863405], length 1448: HTTP
16:46:08.945017 IP 192.168.122.1.40976 &gt; 192.168.122.66.8080: Flags [.], seq 57996:59444, ack 1, win 229, options [nop,nop,TS val 50140964 ecr 3863405], length 1448: HTTP
16:46:08.945027 IP 192.168.122.1.40976 &gt; 192.168.122.66.8080: Flags [P.], seq 59444:60548, ack 1, win 229, options [nop,nop,TS val 50140964 ecr 3863405], length 1104: HTTP
16:46:08.945188 IP 192.168.122.66.8080 &gt; 192.168.122.1.40976: Flags [.], ack 57996, win 62, options [nop,nop,TS val 3865988 ecr 50140964], length 0
16:46:08.983605 IP 192.168.122.1.40976 &gt; 192.168.122.66.8080: Flags [P.], seq 59444:60548, ack 1, win 229, options [nop,nop,TS val 50140976 ecr 3865988], length 1104: HTTP
16:46:08.983765 IP 192.168.122.66.8080 &gt; 192.168.122.1.40976: Flags [.], ack 60548, win 43, options [nop,nop,TS val 3866027 ecr 50140964,nop,nop,sack 1 {59444:60548}], length 0
16:46:10.874178 IP 192.168.122.1.40976 &gt; 192.168.122.66.8080: Flags [.], seq 60548:63444, ack 1, win 229, options [nop,nop,TS val 50141543 ecr 3866027], length 2896: HTTP
16:46:10.874209 IP 192.168.122.1.40976 &gt; 192.168.122.66.8080: Flags [P.], seq 63444:64548, ack 1, win 229, options [nop,nop,TS val 50141543 ecr 3866027], length 1104: HTTP
16:46:10.913789 IP 192.168.122.66.8080 &gt; 192.168.122.1.40976: Flags [.], ack 64548, win 12, options [nop,nop,TS val 3867957 ecr 50141543], length 0
16:46:13.263314 IP 192.168.122.1.40976 &gt; 192.168.122.66.8080: Flags [.], seq 64548:65996, ack 1, win 229, options [nop,nop,TS val 50142259 ecr 3867957], length 1448: HTTP
16:46:13.263477 IP 192.168.122.66.8080 &gt; 192.168.122.1.40976: Flags [.], ack 65996, win 1, options [nop,nop,TS val 3870306 ecr 50142259], length 0
16:46:13.483589 IP 192.168.122.1.40976 &gt; 192.168.122.66.8080: Flags [P.], seq 65996:66124, ack 1, win 229, options [nop,nop,TS val 50142326 ecr 3870306], length 128: HTTP
16:46:13.483812 IP 192.168.122.66.8080 &gt; 192.168.122.1.40976: Flags [.], ack 66124, win 46, options [nop,nop,TS val 3870527 ecr 50142326], length 0
16:46:13.483865 IP 192.168.122.1.40976 &gt; 192.168.122.66.8080: Flags [.], seq 66124:67572, ack 1, win 229, options [nop,nop,TS val 50142326 ecr 3870527], length 1448: HTTP
16:46:13.483885 IP 192.168.122.1.40976 &gt; 192.168.122.66.8080: Flags [P.], seq 67572:68548, ack 1, win 229, options [nop,nop,TS val 50142326 ecr 3870527], length 976: HTTP
16:46:13.523583 IP 192.168.122.1.40976 &gt; 192.168.122.66.8080: Flags [P.], seq 67572:68548, ack 1, win 229, options [nop,nop,TS val 50142338 ecr 3870527], length 976: HTTP
16:46:13.523752 IP 192.168.122.66.8080 &gt; 192.168.122.1.40976: Flags [.], ack 68548, win 28, options [nop,nop,TS val 3870567 ecr 50142326,nop,nop,sack 1 {67572:68548}], length 0
16:46:15.144825 IP 192.168.122.1.40976 &gt; 192.168.122.66.8080: Flags [.], seq 68548:69996, ack 1, win 229, options [nop,nop,TS val 50142824 ecr 3870567], length 1448: HTTP
16:46:15.144860 IP 192.168.122.1.40976 &gt; 192.168.122.66.8080: Flags [.], seq 69996:71444, ack 1, win 229, options [nop,nop,TS val 50142824 ecr 3870567], length 1448: HTTP
16:46:15.145025 IP 192.168.122.66.8080 &gt; 192.168.122.1.40976: Flags [.], ack 69996, win 17, options [nop,nop,TS val 3872188 ecr 50142824], length 0
16:46:15.184796 IP 192.168.122.66.8080 &gt; 192.168.122.1.40976: Flags [.], ack 71444, win 6, options [nop,nop,TS val 3872228 ecr 50142824], length 0
16:46:15.406939 IP 192.168.122.1.40976 &gt; 192.168.122.66.8080: Flags [P.], seq 71444:72212, ack 1, win 229, options [nop,nop,TS val 50142903 ecr 3872228], length 768: HTTP


★5 ここからサーバから受信可能なTCPウィンドウサイズが0の応答パケットが出始めた
16:46:15.407110 IP 192.168.122.66.8080 &gt; 192.168.122.1.40976: Flags [.], ack 72212, win 0, options [nop,nop,TS val 3872450 ecr 50142903], length 0
16:46:15.626933 IP 192.168.122.1.40976 &gt; 192.168.122.66.8080: Flags [.], ack 1, win 229, options [nop,nop,TS val 50142969 ecr 3872450], length 0
16:46:15.627096 IP 192.168.122.66.8080 &gt; 192.168.122.1.40976: Flags [.], ack 72212, win 0, options [nop,nop,TS val 3872670 ecr 50142903], length 0
16:46:16.066943 IP 192.168.122.1.40976 &gt; 192.168.122.66.8080: Flags [.], ack 1, win 229, options [nop,nop,TS val 50143101 ecr 3872670], length 0
16:46:16.067143 IP 192.168.122.66.8080 &gt; 192.168.122.1.40976: Flags [.], ack 72212, win 0, options [nop,nop,TS val 3873110 ecr 50142903], length 0
16:46:16.950253 IP 192.168.122.1.40976 &gt; 192.168.122.66.8080: Flags [.], ack 1, win 229, options [nop,nop,TS val 50143366 ecr 3873110], length 0
16:46:16.950401 IP 192.168.122.66.8080 &gt; 192.168.122.1.40976: Flags [.], ack 72212, win 0, options [nop,nop,TS val 3873993 ecr 50142903], length 0
16:46:18.716950 IP 192.168.122.1.40976 &gt; 192.168.122.66.8080: Flags [.], ack 1, win 229, options [nop,nop,TS val 50143896 ecr 3873993], length 0
16:46:18.717129 IP 192.168.122.66.8080 &gt; 192.168.122.1.40976: Flags [.], ack 72212, win 0, options [nop,nop,TS val 3875760 ecr 50142903], length 0
16:46:22.250259 IP 192.168.122.1.40976 &gt; 192.168.122.66.8080: Flags [.], ack 1, win 229, options [nop,nop,TS val 50144956 ecr 3875760], length 0
16:46:22.250438 IP 192.168.122.66.8080 &gt; 192.168.122.1.40976: Flags [.], ack 72212, win 0, options [nop,nop,TS val 3879293 ecr 50142903], length 0
16:46:29.303610 IP 192.168.122.1.40976 &gt; 192.168.122.66.8080: Flags [.], ack 1, win 229, options [nop,nop,TS val 50147072 ecr 3879293], length 0
16:46:29.303785 IP 192.168.122.66.8080 &gt; 192.168.122.1.40976: Flags [.], ack 72212, win 0, options [nop,nop,TS val 3886347 ecr 50142903], length 0
</pre>
</div>
</div>

<div id="outline-container-sec-9" class="outline-2">
<h2 id="sec-9"><span class="section-number-2">9</span> TCPソケット受信バッファーサイズの設定について</h2>
<div class="outline-text-2" id="text-9">
<p>
JavaDocから引用
</p>

<ul class="org-ul">
<li><a href="https://docs.oracle.com/javase/jp/6/api/java/net/Socket.html#setReceiveBufferSize%2528int%2529">java.net.Socket.setReceiveBufferSize</a>
この Socket の SO_RCVBUF オプションを指定された値に設定します。SO_RCVBUF オプション
は、使用するネットワーク入出力バッファーに設定するサイズのヒントとして、プラットフォー
ムのネットワークコードが使います。

<p>
受信バッファーのサイズを増やすと、大規模な接続でのネットワーク入出力のパフォーマンス
を上げることができます。一方、サイズを減らすと、受信データのバックログを減らすことが
できます。
</p>

<p>
SO_RCVBUF は <code>ヒント</code> なので、アプリケーションでバッファーのサイズ設定を調べる必要が
ある場合は、getReceiveBufferSize() を呼び出してください。
</p>

<p>
SO_RCVBUF の値は、リモートピアに通知される TCP 受信ウィンドウの設定にも使用されます。
一般に、ソケットが接続されているかぎり、このウィンドウサイズはいつでも変更できます。
ただし、64K を超える受信ウィンドウを要求する場合は、ソケットをリモートピアに接続する
前に変更を要求する必要があります。次の 2 つの場合に注意してください。
</p>

<p>
ServerSocket から受け入れたソケットの場合、ServerSocket をローカルアドレスにバインド
する前に、ServerSocket.setReceiveBufferSize(int) を呼び出してこれを実行する必要があ
ります。
</p>

<p>
クライアントソケットの場合、ソケットをそのリモートピアに接続する前に、
setReceiveBufferSize() を呼び出す必要があります。
</p>
</li>
<li><a href="https://docs.oracle.com/javase/jp/6/api/java/net/ServerSocket.html#setReceiveBufferSize%2528int%2529">java.net.ServerSocket.setReceiveBufferSize</a>
  この ServerSocket から受け入れられたソケットの SO_RCVBUF オプションのデフォルト推
奨値を設定します。受け入れられたソケット内に実際に設定されている値を確認してください。
それには、accept() からソケットが返されたあとで Socket.getReceiveBufferSize() を呼び
出します。

<p>
  SO_RCVBUF の値は、内部ソケット受信バッファーのサイズの設定と、リモートピアに通知さ
れる TCP 受信ウィンドウのサイズの設定の両方に使用されます。
</p>

<p>
  その後、Socket.setReceiveBufferSize(int) を呼び出すことで値を変更できます。ただし、
アプリケーションが RFC1323 で定義されている 64K バイトを超える受信ウィンドウを使用可
能にする必要がある場合には、ローカルアドレスにバインドする前に 推奨値を
ServerSocket で設定する必要があります。つまり、引数なしコンストラクタを使って
ServerSocket を作成し、次に setReceiveBufferSize() を呼び出し、最後に bind() を呼び
出して ServerSocket をアドレスにバインドする必要があることを意味します。
</p>

<p>
  これに失敗してもエラーは発生せず、バッファーサイズは要求された値に設定されます。た
だし、この ServerSocket から受け取るソケットの TCP 受信ウィンドウは 64K バイト以下に
なります。
</p>
</li>
</ul>
</div>
</div>

<div id="outline-container-sec-10" class="outline-2">
<h2 id="sec-10"><span class="section-number-2">10</span> まとめ</h2>
<div class="outline-text-2" id="text-10">
<ul class="org-ul">
<li>JBossASソケット受信バッファーのデフォルトサイズは <code>net.ipv4.tcp_rmem</code> の1/2が適用さ
れる(約42KB)。
</li>
<li>リクエストデータサイズが42KBバイト以下の場合、パケット再送発生しない
</li>
<li>実際に受信できる最大サイズは <code>net.ipv4.tcp_rmem</code> 値の8割ぐらい
</li>
</ul>
</div>
</div>

<div id="outline-container-sec-11" class="outline-2">
<h2 id="sec-11"><span class="section-number-2">11</span> 参考</h2>
<div class="outline-text-2" id="text-11">
<ul class="org-ul">
<li><a href="http://linuxjm.sourceforge.jp/html/LDP_man-pages/man7/socket.7.html">Section: Linux Programmer&#8217;s Manual (7)</a>
</li>
<li><a href="https://docs.oracle.com/javase/jp/6/api/java/net/Socket.html">Socket (Java Platform SE 6)</a>
</li>
</ul>
</div>
</div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[メモ]JBoss ASでBytemanを使う]]></title>
    <link href="http://luozengbin.github.io/blog/2015-04-01-%5B%E3%83%A1%E3%83%A2%5Djbossas%E3%81%A7byteman%E3%82%92%E4%BD%BF%E3%81%86.html"/>
    <updated>2015-04-01T00:00:00+09:00</updated>
    <id>http://luozengbin.github.io/blog/[メモ]jbossasでbytemanを使う</id>
    <content type="html"><![CDATA[<div id="table-of-contents">
<h2>Table of Contents</h2>
<div id="text-table-of-contents">
<ul>
<li><a href="#sec-1">1. 前提</a></li>
<li><a href="#sec-2">2. インストール</a></li>
<li><a href="#sec-3">3. JBossASプロセスへのアタッチ</a></li>
<li><a href="#sec-4">4. トレース用スクリプトの作成</a></li>
<li><a href="#sec-5">5. スクリプトの実行</a></li>
<li><a href="#sec-6">6. 参考</a></li>
</ul>
</div>
</div>
<p>
ミドルウェアの内部動作をトレースするためによく使うので手順を残しておきます。
</p>

<p>
<!-- more -->
</p>

<div id="outline-container-sec-1" class="outline-2">
<h2 id="sec-1"><span class="section-number-2">1</span> 前提</h2>
<div class="outline-text-2" id="text-1">
<ul class="org-ul">
<li>JBossAS 7系
</li>
</ul>
</div>
</div>

<div id="outline-container-sec-2" class="outline-2">
<h2 id="sec-2"><span class="section-number-2">2</span> インストール</h2>
<div class="outline-text-2" id="text-2">
<pre class="example">
$ wget http://downloads.jboss.org/byteman/2.2.1/byteman-download-2.2.1-bin.zip
$ unzip byteman-download-2.2.1-bin.zip
</pre>
</div>
</div>

<div id="outline-container-sec-3" class="outline-2">
<h2 id="sec-3"><span class="section-number-2">3</span> JBossASプロセスへのアタッチ</h2>
<div class="outline-text-2" id="text-3">
<pre class="example">
$ export BYTEMAN_HOME=`pwd`/byteman-download-2.2.1
$ export JAVA_HOME=/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.65.x86_64
$ JBOSS_PID=`ps -ef | grep [j]boss-modules.jar | awk '{print $2}'`
$ ${BYTEMAN_HOME}/bin/bminstall.sh -b ${JBOSS_PID}
</pre>
</div>
</div>

<div id="outline-container-sec-4" class="outline-2">
<h2 id="sec-4"><span class="section-number-2">4</span> トレース用スクリプトの作成</h2>
<div class="outline-text-2" id="text-4">
<p>
JBossASサーバソケット受信バッファーサイズを調べるスクリプト
<code>trace_socket_receive_buffer_size.btm</code> を作成する
</p>

<pre class="example">
RULE trace http ReceiveBufferSize
CLASS org.apache.tomcat.util.net.JIoEndpoint
METHOD processSocket
AT ENTRY
BIND socket = $1
IF TRUE
DO
  traceln("socket.getReceiveBufferSize() = " + socket.getReceiveBufferSize()), traceStack()
ENDRULE
</pre>
</div>
</div>

<div id="outline-container-sec-5" class="outline-2">
<h2 id="sec-5"><span class="section-number-2">5</span> スクリプトの実行</h2>
<div class="outline-text-2" id="text-5">
<pre class="example">
$ ${BYTEMAN_HOME}/bin/bmsubmit.sh trace_socket_receive_buffer_size.btm
</pre>
</div>
</div>

<div id="outline-container-sec-6" class="outline-2">
<h2 id="sec-6"><span class="section-number-2">6</span> 参考</h2>
<div class="outline-text-2" id="text-6">
<ul class="org-ul">
<li><a href="https://developer.jboss.org/wiki/ABytemanTutorial#how_do_i_run_jboss_as_with_byteman">A Byteman Tutorial</a>
</li>
<li><a href="http://nekop.hatenablog.com/entry/20101220/1292825812">BytemanによるJava黒魔術</a>
</li>
<li><a href="http://d.hatena.ne.jp/Kazuhira/20131022/1382455739">バイトコード操作ツール、Bytemanを試す</a>
</li>
</ul>
</div>
</div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[まとめ]JBoss as 7過負荷時TCPコネクションの振る舞い]]></title>
    <link href="http://luozengbin.github.io/blog/2015-04-01-%5B%E3%81%BE%E3%81%A8%E3%82%81%5Djbossas%E9%81%8E%E8%B2%A0%E8%8D%B7%E6%99%82tcp%E3%82%B3%E3%83%8D%E3%82%AF%E3%82%B7%E3%83%A7%E3%83%B3%E3%81%AE%E6%8C%AF%E3%82%8B%E8%88%9E%E3%81%84.html"/>
    <updated>2015-04-01T00:00:00+09:00</updated>
    <id>http://luozengbin.github.io/blog/[まとめ]jbossas過負荷時tcpコネクションの振る舞い</id>
    <content type="html"><![CDATA[<div id="table-of-contents">
<h2>Table of Contents</h2>
<div id="text-table-of-contents">
<ul>
<li><a href="#sec-1">1. 前提事項</a></li>
<li><a href="#sec-2">2. 最大ワーカスレッド数の設定方法</a></li>
<li><a href="#sec-3">3. スレッド起動のタイミング</a></li>
<li><a href="#sec-4">4. 過負荷時の挙動</a>
<ul>
<li><a href="#sec-4-1">4.1. A.クライアントからPSHパケット再送が発生するパターン</a></li>
<li><a href="#sec-4-2">4.2. B.TCP3WHSパケット再送が発生するパターン</a></li>
<li><a href="#sec-4-3">4.3. C.新規接続が拒否されるパターン</a></li>
</ul>
</li>
<li><a href="#sec-5">5. 過負荷の対策</a></li>
</ul>
</div>
</div>

<div id="outline-container-sec-1" class="outline-2">
<h2 id="sec-1"><span class="section-number-2">1</span> 前提事項</h2>
<div class="outline-text-2" id="text-1">
<p>
本記事は以下の環境を前提とする。
</p>

<ul class="org-ul">
<li>Linux/x86_64
</li>
<li>JBoss AS 7
</li>
</ul>

<p>
<!-- more -->
</p>
</div>
</div>

<div id="outline-container-sec-2" class="outline-2">
<h2 id="sec-2"><span class="section-number-2">2</span> 最大ワーカスレッド数の設定方法</h2>
<div class="outline-text-2" id="text-2">
<ul class="org-ul">
<li>方式1: -Dorg.apache.tomcat.util.net.MAX_THREADS=999
</li>
<li>方式2: コネクタ定義のmax-connectionsで指定する
</li>
</ul>

<p>
両方指定した場合、方式2が優先される。指定しない場合 512 x JVMに割り当てたコア数
</p>
</div>
</div>

<div id="outline-container-sec-3" class="outline-2">
<h2 id="sec-3"><span class="section-number-2">3</span> スレッド起動のタイミング</h2>
<div class="outline-text-2" id="text-3">
<p>
サーバ起動時にワーカースレッドの初期値が0、リクエストが来るたびに新規スレッドを作る。
スレッドの数がmax-connectionsの数に達した時にログに以下のメッセージがを出力される。
</p>

<pre class="example">
INFO [JIoEndpoint] Maximum number of threads (xxx) created for connector with address /127.0.0.1 and port 8080
</pre>
</div>
</div>

<div id="outline-container-sec-4" class="outline-2">
<h2 id="sec-4"><span class="section-number-2">4</span> 過負荷時の挙動</h2>
<div class="outline-text-2" id="text-4">
<p>
下記AとBの何れが起きた場合、クライアントからすると無応答や応答が激遅いことが感じるので
防止の対策を講じることをおすすめします。
</p>
</div>

<div id="outline-container-sec-4-1" class="outline-3">
<h3 id="sec-4-1"><span class="section-number-3">4.1</span> A.クライアントからPSHパケット再送が発生するパターン</h3>
<div class="outline-text-3" id="text-4-1">
<p>
以下の状況に置いて、クライアントからのリクエスデータがサーバ側のTCPバッファーに詰ま
る。TCPバッファーが一杯になると、パケットがdropされるのでクライアントからのデータ再
送が発生する。
</p>

<ul class="org-ul">
<li>CPU高負荷時、Acceptorスレッドが回らない状況
</li>
<li>GCによって、Acceptorスレッドの働きが良くない状況
</li>
<li>CPU高負荷時、ワーカスレッドがリクエストデータ受信処理で止まっている
</li>
<li>GCによって、ワーカスレッドがリクエストデータ受信処理で止まっている
</li>
</ul>

<p>
また、Acceptorスレッドが止まる場合新規接続(3WHS完了)がbacklogキューに溜まるので
backlogキューが溢れる可能性もあります。
</p>

<p>
上記に関して、Threadサブシステム利用時も同様です。
</p>

<p>
TCPバッファーがについて、TCP接続単位にTCPバッファーが持っている、デフォルト値は
<a href="https://github.com/torvalds/linux/blob/master/net/ipv4/tcp.c#L3076">net.ipv4.tcp_rmem</a> カーネルパラメータ値の1/2になります、約42KB。
</p>
</div>
</div>

<div id="outline-container-sec-4-2" class="outline-3">
<h3 id="sec-4-2"><span class="section-number-3">4.2</span> B.TCP3WHSパケット再送が発生するパターン</h3>
<div class="outline-text-3" id="text-4-2">
<p>
CPU高負荷でAcceptorスレッドが止まってかつbacklogキューが溢れた場合、コネクションの確立
ができない、クライアントからのsyn(1)やack(3)の再送が起きる。
TCP SYNの再送間隔は以下の通り、約64秒でタイムアウトになる。
</p>
<pre class="example">
1回目 +1秒
2回目 +2秒
3回目 +4秒
4回目 +8秒
5回目 +16秒
6回目 +32秒  タイムアウト
</pre>
<p>
クライアントからすると応答が激遅いと感じることがある。
</p>

<p>
※上記に関して、Threadサブシステム利用時も同様です。
</p>
</div>
</div>

<div id="outline-container-sec-4-3" class="outline-3">
<h3 id="sec-4-3"><span class="section-number-3">4.3</span> C.新規接続が拒否されるパターン</h3>
<div class="outline-text-3" id="text-4-3">
<p>
同時接続数がmax-connections値を超えた場合、Acceptorスレッドが新規コネクションを受付し、
その後のワーカースレッド割り当て処理でワーカースレッドがないことを気付き、ソケットをク
ローズする(FINパケットを送出)。
</p>

<p>
注意：
このケースに置いて必ずじもCPU高負荷とは限らない、ワーカスレッドがアプリに掴み放しの場
合も起こりえる。
</p>
</div>
</div>
</div>

<div id="outline-container-sec-5" class="outline-2">
<h2 id="sec-5"><span class="section-number-2">5</span> 過負荷の対策</h2>
<div class="outline-text-2" id="text-5">
<p>
実際の運用上はどちらも発生しりえる。それぞれのパターンに置いてLBがどう振る舞うかを明確
した上でワーカースレッドのbusy数とCPUの使用率を監視し、閉塞運用、スペアインスタンスの
運用などを設計することが大事だと思います。
</p>
</div>
</div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[メモ]VirtualBox HostOnly on Linux]]></title>
    <link href="http://luozengbin.github.io/blog/2015-02-06-%5B%E3%83%A1%E3%83%A2%5Dvirtualbox-hostonly-on-linux.html"/>
    <updated>2015-02-06T00:00:00+09:00</updated>
    <id>http://luozengbin.github.io/blog/[メモ]virtualbox-hostonly-on-linux</id>
    <content type="html"><![CDATA[<div id="table-of-contents">
<h2>Table of Contents</h2>
<div id="text-table-of-contents">
<ul>
<li><a href="#sec-1">1. VirtualBox使用出来るネットワークアダプタ</a></li>
<li><a href="#sec-2">2. 複数アダプターユースケース</a></li>
<li><a href="#sec-3">3. ホストオンリーネットワークの追加手順</a>
<ul>
<li><a href="#sec-3-1">3.1. カーネルモジュールのロード</a></li>
<li><a href="#sec-3-2">3.2. ホストオンリーネットワークの追加</a></li>
<li><a href="#sec-3-3">3.3. アダプターと紐付ける</a></li>
</ul>
</li>
<li><a href="#sec-4">4. 参考</a></li>
</ul>
</div>
</div>
<p>
VirtualBox上で動く仮想マシンにデフォルトではNATネットワークアダプタが割り当てられてい
るため、Host OSとの通信ができないです。これを回避するために <code>ホストオンリーネットワー
ク</code> アダプターを使えば回避できる。最近のバージョン追加手順が変わったため、メモしてお
きます。
</p>

<p>
<!-- more -->
</p>

<div id="outline-container-sec-1" class="outline-2">
<h2 id="sec-1"><span class="section-number-2">1</span> VirtualBox使用出来るネットワークアダプタ</h2>
<div class="outline-text-2" id="text-1">
<ol class="org-ol">
<li>NAT
VirtualBox のデフォルト設定。ゲスト OS からインターネットは繋がる。
ゲスト OS とホストOS 間は繋がらない。
</li>
<li>ブリッジネットワーク
ゲスト OS のネットワークがホスト OS と同じネットワークに繋がる。イン
ターネットに繋がり、ゲスト OS とホスト OS の間が繋がる。同じネットワー
ク上の他の PC からも見える。
</li>
<li>内部ネットワーク
仮想マシンを複数起動したときに、各マシン間を繋ぐためのネットワーク？
</li>
<li>ホストオンリーネットワーク
ホスト OS と ゲスト OS 間のネットワーク。ゲスト OS をローカルのウェ
ブサービス開発環境として利用する場合、次のようなネットワークだと都合
が良いです。
</li>
</ol>
</div>
</div>

<div id="outline-container-sec-2" class="outline-2">
<h2 id="sec-2"><span class="section-number-2">2</span> 複数アダプターユースケース</h2>
<div class="outline-text-2" id="text-2">
<p>
アダプタ ２ に「ホストオンリーネットワーク」を割り当て、アダプ
タ １に「NAT」を割り当てます。こうすると、ホスト OS とゲスト OS 間が繋
がり、NAT によりゲスト OS から外部ネットへのアクセスもきるようになります。
</p>
</div>
</div>

<div id="outline-container-sec-3" class="outline-2">
<h2 id="sec-3"><span class="section-number-2">3</span> ホストオンリーネットワークの追加手順</h2>
<div class="outline-text-2" id="text-3">
</div><div id="outline-container-sec-3-1" class="outline-3">
<h3 id="sec-3-1"><span class="section-number-3">3.1</span> カーネルモジュールのロード</h3>
<div class="outline-text-3" id="text-3-1">
<pre class="example">
sudo modprobe vboxdrv
sudo modprobe vboxnetadp
sudo modprobe vboxnetflt
</pre>
</div>
</div>

<div id="outline-container-sec-3-2" class="outline-3">
<h3 id="sec-3-2"><span class="section-number-3">3.2</span> ホストオンリーネットワークの追加</h3>
<div class="outline-text-3" id="text-3-2">
<p>
ホストと通信するための仮想ブリッジを追加するイメージとなります。またこのブリッジに対
してIPの指定やDHCPサーバ機能の有効化も可能です。VirtualBoxのグローバル設定ダイアログか
らホストオンリーネットワークを追加する。
</p>

<ul class="org-ul">
<li>ホストオンリーネットワークの追加
<img src="img/2015-02-06-vbox001.png" alt="2015-02-06-vbox001.png" />
</li>

<li>ブリッジにIPを割り当てる
<img src="img/2015-02-06-vbox002.png" alt="2015-02-06-vbox002.png" />
</li>

<li>DHCPサーバを有効化する
<img src="img/2015-02-06-vbox003.png" alt="2015-02-06-vbox003.png" />
</li>
</ul>
</div>
</div>

<div id="outline-container-sec-3-3" class="outline-3">
<h3 id="sec-3-3"><span class="section-number-3">3.3</span> アダプターと紐付ける</h3>
<div class="outline-text-3" id="text-3-3">
<p>
仮想マシンのネットワークディバイス設定でアダプター２を有効化し、作成したホストオンリー
ネットワークと紐付ける。
  <img src="img/2015-02-06-vbox004.png" alt="2015-02-06-vbox004.png" />
</p>

<p>
仮想マシンを機能すると共に仮想ブリッジディバイスがホストOS上で自動的に生成されること
を確認する。
</p>

<pre class="example">
$ ifconfig
★省略..........

vboxnet0: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 1500
        inet 192.168.56.1  netmask 255.255.255.0  broadcast 192.168.56.255
        inet6 fe80::800:27ff:fe00:0  prefixlen 64  scopeid 0x20&lt;link&gt;
        ether 0a:00:27:00:00:00  txqueuelen 1000  (Ethernet)
        RX packets 0  bytes 0 (0.0 B)
        RX errors 0  dropped 0  overruns 0  frame 0
        TX packets 107  bytes 18000 (17.5 KiB)
        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0
</pre>
</div>
</div>
</div>

<div id="outline-container-sec-4" class="outline-2">
<h2 id="sec-4"><span class="section-number-2">4</span> 参考</h2>
<div class="outline-text-2" id="text-4">
<ul class="org-ul">
<li><a href="https://wiki.archlinux.org/index.php/VirtualBox#Load_the_VirtualBox_kernel_modules">Load the VirtualBox kernel modules</a>
</li>
</ul>
</div>
</div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[メモ]自宅サーバディスク増設記録]]></title>
    <link href="http://luozengbin.github.io/blog/2014-11-16-%5B%E3%83%A1%E3%83%A2%5D%E8%87%AA%E5%AE%85%E3%82%B5%E3%83%BC%E3%83%90%E3%83%87%E3%82%A3%E3%82%B9%E3%82%AF%E5%A2%97%E8%A8%AD%E8%A8%98%E9%8C%B2.html"/>
    <updated>2014-11-16T00:00:00+09:00</updated>
    <id>http://luozengbin.github.io/blog/[メモ]自宅サーバディスク増設記録</id>
    <content type="html"><![CDATA[<div id="table-of-contents">
<h2>Table of Contents</h2>
<div id="text-table-of-contents">
<ul>
<li><a href="#sec-1">1. 環境</a></li>
<li><a href="#sec-2">2. ツールの整備</a></li>
<li><a href="#sec-3">3. ディスク情報確認</a></li>
<li><a href="#sec-4">4. 現在のパーティション構成</a></li>
<li><a href="#sec-5">5. 増設後のパーティション構成</a></li>
<li><a href="#sec-6">6. 増設手順</a>
<ul>
<li><a href="#sec-6-1">6.1. gdiskでパーティションを初期化する</a></li>
<li><a href="#sec-6-2">6.2. LVMパーティション再構成</a></li>
<li><a href="#sec-6-3">6.3. 増設結果を確認する</a></li>
</ul>
</li>
<li><a href="#sec-7">7. 参考情報</a></li>
</ul>
</div>
</div>
<p>
半年前、約1年ちょっと使った <a href="http://www.wdc.com/global/products/specs/?driveID=1092&language=6">WD Blue(WD10EZEX)</a> ディスクが壊れた (I/Oスピードが激遅い現
象が起きた)ため、RMA保証手続きで交換しました。交換で約1ヶ月かかる、かつサーバがRAID0構
成のため、代用品を購入し、復旧を実施した。RAM交換で届いたディスクがずっと置いたまま、
今日もう一台のNASサーバに増設を実施します。
</p>

<p>
<!-- more -->
</p>

<div id="outline-container-sec-1" class="outline-2">
<h2 id="sec-1"><span class="section-number-2">1</span> 環境</h2>
<div class="outline-text-2" id="text-1">
<table border="2" cellspacing="0" cellpadding="6" rules="groups" frame="hsides">


<colgroup>
<col  class="left" />

<col  class="left" />
</colgroup>
<tbody>
<tr>
<td class="left">OS</td>
<td class="left">CentOS Linux release 7.0.1406 (Core)</td>
</tr>

<tr>
<td class="left">/dev/sda</td>
<td class="left"><a href="http://www.crucial.com/usa/en/storage-ssd-mx100-ja">Crucial MX100 2.5インチ内蔵型SSD 256GB SATAIII</a></td>
</tr>

<tr>
<td class="left">/dev/sdb</td>
<td class="left">増設HDD: WD10EZEX [1TB SATA600 7200]</td>
</tr>
</tbody>
</table>
</div>
</div>

<div id="outline-container-sec-2" class="outline-2">
<h2 id="sec-2"><span class="section-number-2">2</span> ツールの整備</h2>
<div class="outline-text-2" id="text-2">
<p>
<code>hdparm</code> は HDD (SATA/IDE)デバイスのパフォーマンスとベンチマークのツールです｡
</p>
<pre class="example">
$ sudo yum install hdparm
</pre>

<p>
<code>sdparm</code> SCSIデバイスのパフォーマンスとベンチマークのツールです｡
</p>
<pre class="example">
$ sudo yum install sdparm
</pre>

<p>
GPTをサポートするパーティションリングツール
</p>
<pre class="example">
$ sudo yum install gdisk
</pre>
</div>
</div>

<div id="outline-container-sec-3" class="outline-2">
<h2 id="sec-3"><span class="section-number-2">3</span> ディスク情報確認</h2>
<div class="outline-text-2" id="text-3">
<p>
<code>/dev/sda</code> SSDのハード情報を確認する。
</p>
<pre class="example">
$ sudo hdparm -I /dev/sda

/dev/sda:

ATA device, with non-removable media
	Model Number:       Crucial_CT256MX100SSD1
	Serial Number:      ************
	Firmware Revision:  *****
	Transport:          Serial, ATA8-AST, SATA 1.0a, SATA II Extensions, SATA Rev 2.5, SATA Rev 2.6, SATA Rev 3.0
Standards:
	Used: unknown (minor revision code 0x0028)
	Supported: 9 8 7 6 5 
	Likely used: 9
Configuration:
	Logical		max	current
	cylinders	16383	16383
	heads		16	16
	sectors/track	63	63
	--
	CHS current addressable sectors:   16514064
	LBA    user addressable sectors:  268435455
	LBA48  user addressable sectors:  500118192
	Logical  Sector size:                   512 bytes
	Physical Sector size:                  4096 bytes
	Logical Sector-0 offset:                  0 bytes
	device size with M = 1024*1024:      244198 MBytes
	device size with M = 1000*1000:      256060 MBytes (256 GB)
	cache/buffer size  = unknown
	Form Factor: 2.5 inch
	Nominal Media Rotation Rate: Solid State Device
Capabilities:
	LBA, IORDY(can be disabled)
	Queue depth: 32
	Standby timer values: spec'd by Standard, with device specific minimum
	R/W multiple sector transfer: Max = 16	Current = 16
	Advanced power management level: 254
	DMA: mdma0 mdma1 mdma2 udma0 udma1 udma2 udma3 udma4 udma5 *udma6 
	     Cycle time: min=120ns recommended=120ns
	PIO: pio0 pio1 pio2 pio3 pio4 
	     Cycle time: no flow control=120ns  IORDY flow control=120ns
Commands/features:
	Enabled	Supported:
	   *	SMART feature set
	    	Security Mode feature set
	   *	Power Management feature set
	   *	Write cache
	   *	Look-ahead
	   *	Host Protected Area feature set
	   *	WRITE_BUFFER command
	   *	READ_BUFFER command
	   *	NOP cmd
	   *	DOWNLOAD_MICROCODE
	   *	Advanced Power Management feature set
	    	SET_MAX security extension
	   *	48-bit Address feature set
	   *	Device Configuration Overlay feature set
	   *	Mandatory FLUSH_CACHE
	   *	FLUSH_CACHE_EXT
	   *	SMART error logging
	   *	SMART self-test
	   *	General Purpose Logging feature set
	   *	WRITE_{DMA|MULTIPLE}_FUA_EXT
	   *	64-bit World wide name
	   *	IDLE_IMMEDIATE with UNLOAD
	    	Write-Read-Verify feature set
	   *	WRITE_UNCORRECTABLE_EXT command
	   *	{READ,WRITE}_DMA_EXT_GPL commands
	   *	Segmented DOWNLOAD_MICROCODE
	   *	Gen1 signaling speed (1.5Gb/s)
	   *	Gen2 signaling speed (3.0Gb/s)
	   *	Gen3 signaling speed (6.0Gb/s)
	   *	Native Command Queueing (NCQ)
	   *	Phy event counters
	   *	NCQ priority information
	   *	unknown 76[15]
	   *	DMA Setup Auto-Activate optimization
	    	Device-initiated interface power management
	    	Asynchronous notification (eg. media change)
	   *	Software settings preservation
	    	unknown 78[8]
	   *	SMART Command Transport (SCT) feature set
	   *	SCT Write Same (AC2)
	   *	SCT Features Control (AC4)
	   *	SCT Data Tables (AC5)
	   *	reserved 69[4]
	   *	reserved 69[7]
	   *	Data Set Management TRIM supported (limit 8 blocks)
	   *	Deterministic read ZEROs after TRIM
Security: 
	Master password revision code = 65534
		supported
	not	enabled
	not	locked
		frozen
	not	expired: security count
		supported: enhanced erase
	2min for SECURITY ERASE UNIT. 2min for ENHANCED SECURITY ERASE UNIT.
Logical Unit WWN Device Identifier: ***************
	NAA		: 5
	IEEE OUI	: 00a075
	Unique ID	: ********
Checksum: correct
</pre>

<p>
<code>/dev/sdb</code> HDDのハード情報を確認する。
</p>
<pre class="example">
$ sudo hdparm -I /dev/sdb

/dev/sdb:

ATA device, with non-removable media
	Model Number:       WDC WD10EZEX-00RKKA0
	Serial Number:      WD-WMC**********
	Firmware Revision:  80.00A80
	Transport:          Serial, SATA 1.0a, SATA II Extensions, SATA Rev 2.5, SATA Rev 2.6, SATA Rev 3.0
Standards:
	Supported: 8 7 6 5 
	Likely used: 8
Configuration:
	Logical		max	current
	cylinders	16383	16383
	heads		16	16
	sectors/track	63	63
	--
	CHS current addressable sectors:   16514064
	LBA    user addressable sectors:  268435455
	LBA48  user addressable sectors: 1953525168
	Logical  Sector size:                   512 bytes
	Physical Sector size:                  4096 bytes
	device size with M = 1024*1024:      953869 MBytes
	device size with M = 1000*1000:     1000204 MBytes (1000 GB)
	cache/buffer size  = unknown
Capabilities:
	LBA, IORDY(can be disabled)
	Queue depth: 32
	Standby timer values: spec'd by Standard, with device specific minimum
	R/W multiple sector transfer: Max = 16	Current = 16
	DMA: mdma0 mdma1 mdma2 udma0 udma1 udma2 udma3 udma4 udma5 *udma6 
	     Cycle time: min=120ns recommended=120ns
	PIO: pio0 pio1 pio2 pio3 pio4 
	     Cycle time: no flow control=120ns  IORDY flow control=120ns
Commands/features:
	Enabled	Supported:
	   *	SMART feature set
	    	Security Mode feature set
	   *	Power Management feature set
	   *	Write cache
	   *	Look-ahead
	   *	Host Protected Area feature set
	   *	WRITE_BUFFER command
	   *	READ_BUFFER command
	   *	NOP cmd
	   *	DOWNLOAD_MICROCODE
	    	Power-Up In Standby feature set
	   *	SET_FEATURES required to spinup after power up
	    	SET_MAX security extension
	   *	48-bit Address feature set
	   *	Device Configuration Overlay feature set
	   *	Mandatory FLUSH_CACHE
	   *	FLUSH_CACHE_EXT
	   *	SMART error logging
	   *	SMART self-test
	   *	General Purpose Logging feature set
	   *	64-bit World wide name
	   *	{READ,WRITE}_DMA_EXT_GPL commands
	   *	Segmented DOWNLOAD_MICROCODE
	   *	Gen1 signaling speed (1.5Gb/s)
	   *	Gen2 signaling speed (3.0Gb/s)
	   *	Gen3 signaling speed (6.0Gb/s)
	   *	Native Command Queueing (NCQ)
	   *	Host-initiated interface power management
	   *	Phy event counters
	   *	NCQ priority information
	   *	unknown 76[15]
	   *	DMA Setup Auto-Activate optimization
	   *	Software settings preservation
	   *	SMART Command Transport (SCT) feature set
	   *	SCT Write Same (AC2)
	   *	SCT Features Control (AC4)
	   *	SCT Data Tables (AC5)
	    	unknown 206[7]
	    	unknown 206[12] (vendor specific)
	    	unknown 206[13] (vendor specific)
Security: 
	Master password revision code = 65534
		supported
	not	enabled
	not	locked
		frozen
	not	expired: security count
		supported: enhanced erase
	112min for SECURITY ERASE UNIT. 112min for ENHANCED SECURITY ERASE UNIT. 
Logical Unit WWN Device Identifier: ****************
	NAA		: 5
	IEEE OUI	: 0014ee
	Unique ID	: ******
Checksum: correct
$
</pre>
</div>
</div>

<div id="outline-container-sec-4" class="outline-2">
<h2 id="sec-4"><span class="section-number-2">4</span> 現在のパーティション構成</h2>
<div class="outline-text-2" id="text-4">
<p>
<code>/dev/sda</code> の物理パーティション構成を確認する。
</p>
<pre class="example">
$ sudo gdisk -l /dev/sda 
GPT fdisk (gdisk) version 0.8.6

Partition table scan:
  MBR: protective
  BSD: not present
  APM: not present
  GPT: present

Found valid GPT with protective MBR; using GPT.
Disk /dev/sda: 500118192 sectors, 238.5 GiB
Logical sector size: 512 bytes
Disk identifier (GUID): A2BE7525-7A02-4E36-8C41-B9E4487690BD
Partition table holds up to 128 entries
First usable sector is 34, last usable sector is 500118158
Partitions will be aligned on 2048-sector boundaries
Total free space is 2669 sectors (1.3 MiB)

Number  Start (sector)    End (sector)  Size       Code  Name
   1            2048          411647   200.0 MiB   EF00  EFI System Partition
   2          411648         1435647   500.0 MiB   0700  
   3         1435648       500117503   237.8 GiB   8E00  
$
</pre>

<p>
LVMの構成状況
</p>
<pre class="example">
$ sudo lvmdiskscan
  /dev/centos/swap [       7.27 GiB] 
  /dev/sda1        [     200.00 MiB] 
  /dev/centos/root [      50.00 GiB] 
  /dev/sda2        [     500.00 MiB] 
  /dev/centos/home [     180.52 GiB] 
........
</pre>

<p>
先頭の物理パーティションをブート関係用にマウントしています。
</p>
<table border="2" cellspacing="0" cellpadding="6" rules="groups" frame="hsides">


<colgroup>
<col  class="left" />

<col  class="left" />

<col  class="left" />

<col  class="left" />
</colgroup>
<tbody>
<tr>
<td class="left">/dev/sda1</td>
<td class="left">vfat</td>
<td class="left">/boot/efi</td>
<td class="left">200MB</td>
</tr>

<tr>
<td class="left">/dev/sda2</td>
<td class="left">xfs</td>
<td class="left">/boot</td>
<td class="left">500MB</td>
</tr>
</tbody>
</table>

<p>
三番目の物理パーティションをLVMで割って使っています。
</p>
<table border="2" cellspacing="0" cellpadding="6" rules="groups" frame="hsides">


<colgroup>
<col  class="left" />

<col  class="left" />

<col  class="left" />

<col  class="left" />

<col  class="left" />

<col  class="left" />
</colgroup>
<thead>
<tr>
<th scope="col" class="left">PV</th>
<th scope="col" class="left">VG</th>
<th scope="col" class="left">LV</th>
<th scope="col" class="left">Format</th>
<th scope="col" class="left">Mount Point</th>
<th scope="col" class="left">Size</th>
</tr>
</thead>
<tbody>
<tr>
<td class="left">/dev/sda3</td>
<td class="left">centos</td>
<td class="left">/dev/centos/swap</td>
<td class="left">swap</td>
<td class="left">&#xa0;</td>
<td class="left">7.27G</td>
</tr>

<tr>
<td class="left">&#xa0;</td>
<td class="left">&#xa0;</td>
<td class="left">/dev/centos/home</td>
<td class="left">xfs</td>
<td class="left">/home</td>
<td class="left">180G</td>
</tr>

<tr>
<td class="left">&#xa0;</td>
<td class="left">&#xa0;</td>
<td class="left">/dev/centos/root</td>
<td class="left">xfs</td>
<td class="left">/</td>
<td class="left">50G</td>
</tr>
</tbody>
</table>
</div>
</div>

<div id="outline-container-sec-5" class="outline-2">
<h2 id="sec-5"><span class="section-number-2">5</span> 増設後のパーティション構成</h2>
<div class="outline-text-2" id="text-5">
<p>
増設したHDDに <code>vg01</code> を増やして、 <code>/home</code> と <code>/var</code> をこちら配置するようにする。
</p>
<table border="2" cellspacing="0" cellpadding="6" rules="groups" frame="hsides">


<colgroup>
<col  class="left" />

<col  class="left" />

<col  class="left" />

<col  class="left" />

<col  class="left" />

<col  class="left" />
</colgroup>
<thead>
<tr>
<th scope="col" class="left">PV</th>
<th scope="col" class="left">VG</th>
<th scope="col" class="left">LV</th>
<th scope="col" class="left">Format</th>
<th scope="col" class="left">Mount Point</th>
<th scope="col" class="left">Size</th>
</tr>
</thead>
<tbody>
<tr>
<td class="left">/dev/sda3</td>
<td class="left">centos</td>
<td class="left">/dev/centos/swap</td>
<td class="left">swap</td>
<td class="left">&#xa0;</td>
<td class="left">7.27G</td>
</tr>

<tr>
<td class="left">&#xa0;</td>
<td class="left">&#xa0;</td>
<td class="left">/dev/centos/root</td>
<td class="left">xfs</td>
<td class="left">/</td>
<td class="left">230G</td>
</tr>

<tr>
<td class="left">/dev/sdb1</td>
<td class="left">vg01</td>
<td class="left">/dev/vg01/home</td>
<td class="left">xfs</td>
<td class="left">/home</td>
<td class="left">431G</td>
</tr>

<tr>
<td class="left">&#xa0;</td>
<td class="left">&#xa0;</td>
<td class="left">/dev/vg01/var</td>
<td class="left">xfs</td>
<td class="left">/var</td>
<td class="left">500G</td>
</tr>
</tbody>
</table>
</div>
</div>

<div id="outline-container-sec-6" class="outline-2">
<h2 id="sec-6"><span class="section-number-2">6</span> 増設手順</h2>
<div class="outline-text-2" id="text-6">
</div><div id="outline-container-sec-6-1" class="outline-3">
<h3 id="sec-6-1"><span class="section-number-3">6.1</span> gdiskでパーティションを初期化する</h3>
<div class="outline-text-3" id="text-6-1">
<pre class="example">
$ sudo gdisk /dev/sdb
GPT fdisk (gdisk) version 0.8.6

Partition table scan:
  MBR: not present
  BSD: not present
  APM: not present
  GPT: not present

Creating new GPT entries.

Command (? for help): o        ★GPTパーティションテーブルを新規作成する
This option deletes all partitions and creates a new protective MBR.
Proceed? (Y/N): Y

Command (? for help): n        ★新規パーティションを作成する
Partition number (1-128, default 1): 
First sector (34-1953525134, default = 2048) or {+-}size{KMGTP}: 
Last sector (2048-1953525134, default = 1953525134) or {+-}size{KMGTP}: 
Current type is 'Linux filesystem'
Hex code or GUID (L to show codes, Enter = 8300): 8e00 ★パーティションタイプをLVMにする
Changed type of partition to 'Linux LVM'

Command (? for help): w

Final checks complete. About to write GPT data. THIS WILL OVERWRITE EXISTING
PARTITIONS!!

Do you want to proceed? (Y/N): Y
OK; writing new GUID partition table (GPT) to /dev/sdb.
The operation has completed successfully.
$
</pre>

<p>
結果を確認する
</p>
<pre class="example">
$ sudo gdisk -l /dev/sdb
GPT fdisk (gdisk) version 0.8.6

Partition table scan:
  MBR: protective
  BSD: not present
  APM: not present
  GPT: present

Found valid GPT with protective MBR; using GPT.
Disk /dev/sdb: 1953525168 sectors, 931.5 GiB
Logical sector size: 512 bytes
Disk identifier (GUID): DE117DAF-1D96-4505-89EC-6F1E6BB08E4C
Partition table holds up to 128 entries
First usable sector is 34, last usable sector is 1953525134
Partitions will be aligned on 2048-sector boundaries
Total free space is 2014 sectors (1007.0 KiB)

Number  Start (sector)    End (sector)  Size       Code  Name
   1            2048      1953525134   931.5 GiB   8E00  Linux LVM
</pre>
</div>
</div>

<div id="outline-container-sec-6-2" class="outline-3">
<h3 id="sec-6-2"><span class="section-number-3">6.2</span> LVMパーティション再構成</h3>
<div class="outline-text-3" id="text-6-2">
<p>
PV <code>/dev/sdb1</code> 作成する
</p>
<pre class="example">
$ sudo pvcreate /dev/sdb1
  Physical volume "/dev/sdb1" successfully created
</pre>

<p>
VG <code>vg01</code> を作成する
</p>
<pre class="example">
$ sudo vgcreate vg01 /dev/sdb1
  Volume group "vg01" successfully created
</pre>

<p>
VG <code>centos</code> の <code>home</code> 論理ボリュームを 一旦 <code>home0</code> にリネームする。
</p>
<pre class="example">
$ sudo lvrename centos home home0
  Renamed "home" to "home0" in volume group "centos"
</pre>

<p>
VG <code>vg01</code> 上で <code>/var</code> 用の <code>var</code> 論理ボリュームを作成する。
</p>
<pre class="example">
$ sudo lvcreate -L 500G vg01 -n var
  Logical volume "var" created
</pre>

<p>
VG <code>vg01</code> 上残りに容量を <code>/home</code> 用の <code>home</code> 論理ボリュームを作成する。
</p>
<pre class="example">
$ sudo lvcreate -l +100%FREE vg01 -n home
  Logical volume "home" created
</pre>

<p>
<code>var</code> 論理ボリュームを <code>xfs</code> タイプファイルシステムでフォーマットする。
</p>
<pre class="example">
$ sudo mkfs.xfs /dev/mapper/vg01-var 
meta-data=/dev/mapper/vg01-var   isize=256    agcount=4, agsize=32768000 blks
         =                       sectsz=4096  attr=2, projid32bit=1
         =                       crc=0
data     =                       bsize=4096   blocks=131072000, imaxpct=25
         =                       sunit=0      swidth=0 blks
naming   =version 2              bsize=4096   ascii-ci=0 ftype=0
log      =internal log           bsize=4096   blocks=64000, version=2
         =                       sectsz=4096  sunit=1 blks, lazy-count=1
realtime =none                   extsz=4096   blocks=0, rtextents=0

$#+end_example

=home= 論理ボリュームを =xfs= タイプファイルシステムでフォーマットする。
#+begin_example
$ sudo mkfs.xfs /dev/mapper/vg01-home 
meta-data=/dev/mapper/vg01-home  isize=256    agcount=4, agsize=28279296 blks
         =                       sectsz=4096  attr=2, projid32bit=1
         =                       crc=0
data     =                       bsize=4096   blocks=113117184, imaxpct=25
         =                       sunit=0      swidth=0 blks
naming   =version 2              bsize=4096   ascii-ci=0 ftype=0
log      =internal log           bsize=4096   blocks=55233, version=2
         =                       sectsz=4096  sunit=1 blks, lazy-count=1
realtime =none                   extsz=4096   blocks=0, rtextents=0
$
</pre>

<p>
<code>/home</code> 領域データをコピーする。
</p>
<pre class="example">
$ sudo mount /dev/mapper/vg01-home /mnt/
$ sudo cp --archive /home /mnt
$ ls -al /mnt/
合計 4
drwxr-xr-x   3 root root   17 11月 16 22:04 .
drwxr-xr-x. 17 root root 4096 11月 10 21:46 ..
drwxr-xr-x.  3 root root   18  9月 14 23:07 home
$ sudo mv /mnt/home/* /mnt/
$ sudo rm -rf /mnt/home/
$ sudo umount /mnt
</pre>

<p>
<code>/var</code> 領域を使用しているサービスを止めて、データをコピーする。
</p>
<pre class="example">
$ sudo systemctl stop xxxxx.service
$ sudo mount /dev/mapper/vg01-var /mnt/
$ sudo cp --archive /var /mnt
$ sudo mv /mnt/var/* /mnt/
$ sudo rm -rf /mnt/var/
$ sudo umount /mnt
</pre>

<p>
<code>/etc/fstab</code> を適切に変更する。
</p>
<pre class="example">
/dev/mapper/centos-root /                       xfs     defaults        1 1
/dev/mapper/centos-swap swap                    swap    defaults        0 0
/dev/mapper/vg01-home   /home                   xfs     defaults        1 2
/dev/mapper/vg01-var    /var                    xfs     defaults        1 2
.....
</pre>

<p>
旧 <code>/var</code> ディレクトリ名を適当に変更し、システムを再起動する。
</p>
<pre class="example">
$ sudo mv /var /var.0
</pre>

<p>
<code>root</code> 論理ボリュームを拡張する
</p>
<pre class="example">
★home0論理ボリュームの削除
$ sudo lvremove -f centos/home0
  Logical volume "home0" successfully removed

★root論理ボリュームの拡大
$ sudo lvextend -l +100%FREE centos/root
  Extending logical volume root to 230.52 GiB
  Logical volume root successfully resized

★xfsファイルシステムサイズの拡大
$ xfs_growfs /
</pre>
</div>
</div>


<div id="outline-container-sec-6-3" class="outline-3">
<h3 id="sec-6-3"><span class="section-number-3">6.3</span> 増設結果を確認する</h3>
<div class="outline-text-3" id="text-6-3">
<p>
<code>lvmdiskscan</code> の表示
</p>
<pre class="example">
$ sudo lvmdiskscan 
  /dev/centos/swap [       7.27 GiB] 
  /dev/sda1        [     200.00 MiB] 
  /dev/centos/root [     230.52 GiB] 
  /dev/sda2        [     500.00 MiB] 
  /dev/vg01/var    [     500.00 GiB] 
  /dev/sda3        [     237.79 GiB] LVM physical volume
  /dev/vg01/home   [     431.51 GiB] 
  /dev/sdb1        [     931.51 GiB] LVM physical volume
  4 disks
  2 partitions
  0 LVM physical volume whole disks
  2 LVM physical volumes
</pre>

<p>
<code>df -h</code> の表示
</p>
<pre class="example">
$ df -h
ファイルシス            サイズ  使用  残り 使用% マウント位置
/dev/sda1                 200M  9.6M  191M    5% /boot/efi
/dev/sda2                 494M  203M  292M   42% /boot
/dev/mapper/centos-root   231G   16G  215G    7% /
/dev/mapper/vg01-home     432G  379M  431G    1% /home
/dev/mapper/vg01-var      500G   13G  488G    3% /var
.......
</pre>
</div>
</div>
</div>

<div id="outline-container-sec-7" class="outline-2">
<h2 id="sec-7"><span class="section-number-2">7</span> 参考情報</h2>
<div class="outline-text-2" id="text-7">
<ul class="org-ul">
<li><a href="https://wiki.archlinux.org/index.php/Lvm#lvextend">Archlinux Wiki - LVM</a>
</li>
<li><a href="http://kuenishi.hatenadiary.jp/entry/20070325/1174833266">ディスクを加えてXFS on LVMを拡張する</a>
</li>
<li><a href="https://access.redhat.com/documentation/ja-JP/Red_Hat_Enterprise_Linux/6/html/Storage_Administration_Guide/xfsgrow.html">XFS ファイルシステムのサイズの拡大</a>
</li>
</ul>
</div>
</div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[メモ]CMS GCログの見方]]></title>
    <link href="http://luozengbin.github.io/blog/2014-11-05-%5B%E3%83%A1%E3%83%A2%5Dcms-gc%E3%83%AD%E3%82%B0%E3%81%AE%E8%A6%8B%E6%96%B9.html"/>
    <updated>2014-11-05T00:00:00+09:00</updated>
    <id>http://luozengbin.github.io/blog/[メモ]cms-gcログの見方</id>
    <content type="html"><![CDATA[<div id="table-of-contents">
<h2>Table of Contents</h2>
<div id="text-table-of-contents">
<ul>
<li><a href="#sec-1">1. 基本おさらい</a></li>
<li><a href="#sec-2">2. 実験するためのプログラム</a></li>
<li><a href="#sec-3">3. CMSログの見方</a>
<ul>
<li><a href="#sec-3-1">3.1. New領域GCログ</a></li>
<li><a href="#sec-3-2">3.2. Old領域GCログ</a></li>
<li><a href="#sec-3-3">3.3. concurrent mode failure</a></li>
<li><a href="#sec-3-4">3.4. 手動FullGC時のログ</a></li>
</ul>
</li>
<li><a href="#sec-4">4. 参考</a></li>
</ul>
</div>
</div>

<div id="outline-container-sec-1" class="outline-2">
<h2 id="sec-1"><span class="section-number-2">1</span> 基本おさらい</h2>
<div class="outline-text-2" id="text-1">
<p>
CMSとは <code>Concurrent Mark &amp; Sweep</code> 、JVM OLD領域GC処理アルゴリズムの一種です。
CMSはアプリケーションを停止する時間を削減することが出来ます。処理の流れは下図に示す。
</p>

<p>
※Concurrentは同時という意味です。
</p>

<pre class="example">
       ①        ②          ③    ④
---&gt; | ==&gt; | ============&gt; | ==&gt; | ==========&gt; -----&gt;
---&gt; |     | ------------&gt; | ==&gt; | -----------------&gt;
---&gt; |     | ------------&gt; | ==&gt; | -----------------&gt;
---&gt; |     | ------------&gt; | ==&gt; | -----------------&gt;
---&gt; |     | ------------&gt; | ==&gt; | -----------------&gt;
---&gt; |     | ------------&gt; | ==&gt; | -----------------&gt;
       STW                   STW

凡例
+--------------------+
| ==&gt; GCスレッド     |
| --&gt; アプリスレッド |
+--------------------+
</pre>

<p>
図上示している通り、①と③の処理だけアプリケーションが停止する。
</p>
<table border="2" cellspacing="0" cellpadding="6" rules="groups" frame="hsides">


<colgroup>
<col  class="left" />

<col  class="left" />

<col  class="left" />

<col  class="left" />
</colgroup>
<tbody>
<tr>
<td class="left">①</td>
<td class="left">Initial Mark</td>
<td class="left">STW</td>
<td class="left">Rootを起点に利用されてるオブジェクトをマークする</td>
</tr>

<tr>
<td class="left">②-1</td>
<td class="left">Concurrent Mark</td>
<td class="left">&#xa0;</td>
<td class="left">①でマークされたオブジェクトを起点に使用中のオブジェクトをマークする</td>
</tr>

<tr>
<td class="left">②-2</td>
<td class="left">Concurrent precleaning</td>
<td class="left">&#xa0;</td>
<td class="left">②-1処理中アプリによる生じた変化部分をマークする、③の処理時間を短縮するため</td>
</tr>

<tr>
<td class="left">③</td>
<td class="left">Parallel Remark</td>
<td class="left">STW</td>
<td class="left">②処理中アプリによる生じた変化部分をマークする</td>
</tr>

<tr>
<td class="left">④-1</td>
<td class="left">Concurrent Sweeping</td>
<td class="left">&#xa0;</td>
<td class="left">マーク処理によって判明した使用済みオブジェクトを削除する</td>
</tr>

<tr>
<td class="left">④-2</td>
<td class="left">Concurrent Reset</td>
<td class="left">&#xa0;</td>
<td class="left">CMS処理自体のリセット</td>
</tr>
</tbody>
</table>

<p>
<!-- more -->
</p>
</div>
</div>

<div id="outline-container-sec-2" class="outline-2">
<h2 id="sec-2"><span class="section-number-2">2</span> 実験するためのプログラム</h2>
<div class="outline-text-2" id="text-2">
<p>
メモリを大量に消費するWebサービス
</p>
<div class="org-src-container">

<pre class="src src-java"><span style="color: #f0dfaf; font-weight: bold;">package</span> test.<span style="color: #bfebbf;">example</span>;

<span style="color: #f0dfaf; font-weight: bold;">import</span> <span style="color: #bfebbf;">javax</span>.<span style="color: #bfebbf;">jws</span>.<span style="color: #8cd0d3;">WebMethod</span>;
<span style="color: #f0dfaf; font-weight: bold;">import</span> <span style="color: #bfebbf;">javax</span>.<span style="color: #bfebbf;">jws</span>.<span style="color: #8cd0d3;">WebParam</span>;
<span style="color: #f0dfaf; font-weight: bold;">import</span> <span style="color: #bfebbf;">javax</span>.<span style="color: #bfebbf;">jws</span>.<span style="color: #8cd0d3;">WebService</span>;
<span style="color: #f0dfaf; font-weight: bold;">import</span> <span style="color: #bfebbf;">javax</span>.<span style="color: #bfebbf;">jws</span>.<span style="color: #bfebbf;">soap</span>.<span style="color: #8cd0d3;">SOAPBinding</span>;

<span style="color: #bfebbf;">@WebService</span>
<span style="color: #bfebbf;">@SOAPBinding</span>(style = <span style="color: #bfebbf;">SOAPBinding</span>.<span style="color: #bfebbf;">Style</span>.DOCUMENT, use = <span style="color: #bfebbf;">SOAPBinding</span>.<span style="color: #bfebbf;">Use</span>.LITERAL, parameterStyle = <span style="color: #bfebbf;">SOAPBinding</span>.<span style="color: #bfebbf;">ParameterStyle</span>.WRAPPED)
<span style="color: #f0dfaf; font-weight: bold;">public</span> <span style="color: #f0dfaf; font-weight: bold;">class</span> <span style="color: #8cd0d3;">HelloWorld</span> {

    <span style="color: #bfebbf;">@WebMethod</span>(action = <span style="color: #cc9393;">"sayHello"</span>)
    <span style="color: #f0dfaf; font-weight: bold;">public</span> <span style="color: #8cd0d3;">String</span> <span style="color: #8cd0d3;">sayHello</span>(<span style="color: #bfebbf;">@WebParam</span>(name = <span style="color: #cc9393;">"name"</span> ) <span style="color: #8cd0d3;">String</span> <span style="color: #dfaf8f;">name</span>) <span style="color: #f0dfaf; font-weight: bold;">throws</span> <span style="color: #8cd0d3;">CustomException</span> {

        System.out.println(<span style="color: #cc9393;">"Hello: "</span> + name);

        <span style="color: #bfebbf;">java</span>.<span style="color: #bfebbf;">util</span>.<span style="color: #8cd0d3;">List</span> <span style="color: #dfaf8f;">l</span>  =  <span style="color: #f0dfaf; font-weight: bold;">new</span> <span style="color: #bfebbf;">java</span>.<span style="color: #bfebbf;">util</span>.<span style="color: #8cd0d3;">ArrayList</span>&lt;&gt;();
        <span style="color: #8cd0d3;">int</span> <span style="color: #dfaf8f;">x</span>  = 0;
        <span style="color: #f0dfaf; font-weight: bold;">while</span> (x &lt; 6300) {
            <span style="color: #8cd0d3;">Thread</span> <span style="color: #dfaf8f;">t</span>  =  <span style="color: #f0dfaf; font-weight: bold;">new</span> <span style="color: #8cd0d3;">Thread</span>();
            l.add(t);

            <span style="color: #f0dfaf; font-weight: bold;">try</span> {
                Thread.sleep(10);
            } <span style="color: #f0dfaf; font-weight: bold;">catch</span> (<span style="color: #8cd0d3;">Exception</span> <span style="color: #dfaf8f;">e</span>) {
            }
            x++;
            System.out.println(x);
        }
        <span style="color: #f0dfaf; font-weight: bold;">return</span> <span style="color: #cc9393;">"Hello "</span> + name + <span style="color: #cc9393;">"!"</span>;
    }
}
</pre>
</div>

<p>
Webサービスを載せるAPサーバの起動オプションにGC関係のパラメータを追加する。
Old領域のGCを発生しやすくため、ヒープサイズを小さめに割り当てる。
</p>
<pre class="example">
JAVA_OPTS="$JAVA_OPTS -Xms512m -Xmx512m -XX:MaxPermSize=256m"
JAVA_OPTS="$JAVA_OPTS -XX:+UseConcMarkSweepGC -XX:+CMSClassUnloadingEnabled"
JAVA_OPTS="$JAVA_OPTS -verbose:gc -XX:+PrintGCDetails -XX:+PrintGCDateStamps"
JAVA_OPTS="$JAVA_OPTS -Xloggc:/tmp/gc-`date '+%Y-%m-%d'`.log"
</pre>

<p>
以下のオプション、GC時に詳細なオブジェクト統計情報も出力する。ここでは略します。
</p>
<pre class="example">
JAVA_OPTS="$JAVA_OPTS -XX:+PrintHeapAtGC -XX:+PrintTenuringDistribution"
</pre>

<p>
SoapUIから100多重で負荷を掛けて、テストアプリを実行させる。
</p>

<p>
SoapUIから負荷を掛けた後はしばらく、New領域のGCログが出続ける。Old領域が満タンな状態
になる前にOld領域のGCログが出始める。以下はOld領域GC発生前後のログを示す。
</p>

<pre class="example">
2014-11-05T14:24:49.336+0900: 214.204: [GC2014-11-05T14:24:49.336+0900: 214.204: [DefNew: 76672K-&gt;8512K(76672K), 0.0978870 secs] 455251K-&gt;395770K(515776K), 0.0981100 secs] [Times: user=0.08 sys=0.00, real=0.10 secs] 
2014-11-05T14:24:51.971+0900: 216.840: [GC2014-11-05T14:24:51.971+0900: 216.840: [DefNew: 76672K-&gt;8412K(76672K), 0.0816580 secs] 463930K-&gt;404301K(515776K), 0.0818720 secs] [Times: user=0.06 sys=0.00, real=0.08 secs] 
2014-11-05T14:24:54.767+0900: 219.636: [GC2014-11-05T14:24:54.767+0900: 219.636: [DefNew: 76572K-&gt;8415K(76672K), 0.1165260 secs] 472461K-&gt;412833K(515776K), 0.1172920 secs] [Times: user=0.06 sys=0.01, real=0.12 secs] 
2014-11-05T14:24:54.899+0900: 219.768: [GC [1 CMS-initial-mark: 404417K(439104K)] 414152K(515776K), 0.0252080 secs] [Times: user=0.02 sys=0.00, real=0.03 secs] 
2014-11-05T14:24:55.043+0900: 219.912: [CMS-concurrent-mark-start]
2014-11-05T14:24:56.941+0900: 221.810: [GC2014-11-05T14:24:56.941+0900: 221.810: [DefNew: 76575K-&gt;8512K(76672K), 0.0933500 secs] 480993K-&gt;423185K(515776K), 0.0935560 secs] [Times: user=0.07 sys=0.00, real=0.10 secs] 
2014-11-05T14:24:58.119+0900: 222.988: [CMS-concurrent-mark: 2.773/3.076 secs] [Times: user=2.38 sys=0.46, real=3.07 secs] 
2014-11-05T14:24:58.119+0900: 222.988: [CMS-concurrent-preclean-start]
2014-11-05T14:24:58.127+0900: 222.996: [CMS-concurrent-preclean: 0.007/0.008 secs] [Times: user=0.00 sys=0.00, real=0.01 secs] 
2014-11-05T14:24:58.127+0900: 222.996: [CMS-concurrent-abortable-preclean-start]
 CMS: abort preclean due to time 2014-11-05T14:25:03.224+0900: 228.092: [CMS-concurrent-abortable-preclean: 2.683/5.096 secs] [Times: user=2.44 sys=0.08, real=5.10 secs] 
2014-11-05T14:25:03.224+0900: 228.093: [GC[YG occupancy: 48273 K (76672 K)]2014-11-05T14:25:03.224+0900: 228.093: [Rescan (non-parallel) 2014-11-05T14:25:03.224+0900: 228.093: [grey object rescan, 0.0011680 secs]2014-11-05T14:25:03.225+0900: 228.094: [root rescan, 0.2362360 secs], 0.2375020 secs]2014-11-05T14:25:03.462+0900: 228.331: [weak refs processing, 0.0044290 secs]2014-11-05T14:25:03.466+0900: 228.335: [class unloading, 0.0089260 secs]2014-11-05T14:25:03.475+0900: 228.344: [scrub symbol table, 0.0179240 secs]2014-11-05T14:25:03.493+0900: 228.362: [scrub string table, 0.0013030 secs] [1 CMS-remark: 414673K(439104K)] 462947K(515776K), 0.2714240 secs] [Times: user=0.26 sys=0.00, real=0.27 secs] 
2014-11-05T14:25:03.504+0900: 228.373: [CMS-concurrent-sweep-start]
2014-11-05T14:25:03.816+0900: 228.685: [CMS-concurrent-sweep: 0.310/0.312 secs] [Times: user=0.23 sys=0.00, real=0.31 secs] 
2014-11-05T14:25:03.817+0900: 228.686: [CMS-concurrent-reset-start]
2014-11-05T14:25:03.819+0900: 228.687: [CMS-concurrent-reset: 0.001/0.001 secs] [Times: user=0.00 sys=0.00, real=0.00 secs] 
2014-11-05T14:25:04.454+0900: 229.323: [GC [1 CMS-initial-mark: 394635K(439104K)] 443918K(515776K), 0.0809520 secs] [Times: user=0.08 sys=0.00, real=0.08 secs] 
2014-11-05T14:25:04.538+0900: 229.407: [CMS-concurrent-mark-start]
2014-11-05T14:25:05.602+0900: 230.471: [CMS-concurrent-mark: 1.064/1.064 secs] [Times: user=1.01 sys=0.00, real=1.07 secs] 
2014-11-05T14:25:05.603+0900: 230.471: [CMS-concurrent-preclean-start]
2014-11-05T14:25:05.605+0900: 230.474: [CMS-concurrent-preclean: 0.003/0.003 secs] [Times: user=0.01 sys=0.00, real=0.00 secs] 
2014-11-05T14:25:05.605+0900: 230.474: [CMS-concurrent-abortable-preclean-start]
 CMS: abort preclean due to time 2014-11-05T14:25:10.648+0900: 235.516: [CMS-concurrent-abortable-preclean: 1.979/5.042 secs] [Times: user=1.89 sys=0.01, real=5.04 secs] 
2014-11-05T14:25:10.648+0900: 235.517: [GC[YG occupancy: 55959 K (76672 K)]2014-11-05T14:25:10.648+0900: 235.517: [Rescan (non-parallel) 2014-11-05T14:25:10.648+0900: 235.517: [grey object rescan, 0.0012890 secs]2014-11-05T14:25:10.649+0900: 235.518: [root rescan, 0.1016560 secs], 0.1030300 secs]2014-11-05T14:25:10.751+0900: 235.620: [weak refs processing, 0.0000500 secs]2014-11-05T14:25:10.751+0900: 235.620: [class unloading, 0.0078410 secs]2014-11-05T14:25:10.759+0900: 235.628: [scrub symbol table, 0.0162830 secs]2014-11-05T14:25:10.775+0900: 235.644: [scrub string table, 0.0010720 secs] [1 CMS-remark: 394635K(439104K)] 450595K(515776K), 0.1292870 secs] [Times: user=0.12 sys=0.01, real=0.13 secs] 
2014-11-05T14:25:10.777+0900: 235.646: [CMS-concurrent-sweep-start]
2014-11-05T14:25:10.981+0900: 235.850: [CMS-concurrent-sweep: 0.203/0.203 secs] [Times: user=0.20 sys=0.00, real=0.20 secs] 
2014-11-05T14:25:10.981+0900: 235.850: [CMS-concurrent-reset-start]
2014-11-05T14:25:10.983+0900: 235.852: [CMS-concurrent-reset: 0.001/0.001 secs] [Times: user=0.00 sys=0.00, real=0.00 secs] 
2014-11-05T14:25:32.473+0900: 257.342: [GC2014-11-05T14:25:32.474+0900: 257.342: [DefNew: 76664K-&gt;2361K(76672K), 0.0146410 secs] 463666K-&gt;389381K(515776K), 0.0148600 secs] [Times: user=0.01 sys=0.00, real=0.02 secs] 
2014-11-05T14:26:44.480+0900: 329.349: [GC2014-11-05T14:26:44.480+0900: 329.349: [DefNew: 70521K-&gt;1291K(76672K), 0.0214830 secs] 457541K-&gt;388311K(515776K), 0.0216760 secs] [Times: user=0.01 sys=0.00, real=0.02 secs] 
2014-11-05T14:27:56.504+0900: 401.373: [GC2014-11-05T14:27:56.504+0900: 401.373: [DefNew: 69451K-&gt;1214K(76672K), 0.0102000 secs] 456471K-&gt;388234K(515776K), 0.0103740 secs] [Times: user=0.01 sys=0.00, real=0.01 secs]
</pre>
</div>
</div>

<div id="outline-container-sec-3" class="outline-2">
<h2 id="sec-3"><span class="section-number-2">3</span> CMSログの見方</h2>
<div class="outline-text-2" id="text-3">
</div><div id="outline-container-sec-3-1" class="outline-3">
<h3 id="sec-3-1"><span class="section-number-3">3.1</span> New領域GCログ</h3>
<div class="outline-text-3" id="text-3-1">
<p>
New領域のGCは <code>minor GC</code> と呼ばれる場合があります。
</p>

<p>
<code>DefNew</code> と <code>PraNew</code> 文字が含まれた行は <code>New</code> 領域のGC処理ログです。シングルコアの場合
<code>DefNew=、マルチコアは =PraNew</code> となります。
</p>

<p>
New領域のGCログは一行で完結する。ログ先頭の <code>GC</code> タグはSTWであることを示している。(つ
まりNew領域のGC処理はStop the worldです)続きの部分はGC前後New領域内メモリの変化を示し
ている、その次の部分は、JVM全体のメモリ使用量の変化を示している。
</p>
<pre class="example">
2014-11-05T16:59:21.544+0900: 9486.413: [GC2014-11-05T16:59:21.544+0900: 9486.413: [DefNew: 68932K-&gt;1046K(76672K), 0.0122090 secs] 472847K-&gt;405094K(515776K), 0.0123880 secs] [Times: user=0.01 sys=0.00, real=0.01 secs] 
                                          ★                                        ~~~~~~  ~~~~~   ~~~~  ~~~~                     ~~~~~~~  ~~~~~~
                                                                                      A       B       C     D                         E       F
</pre>
<table border="2" cellspacing="0" cellpadding="6" rules="groups" frame="hsides">


<colgroup>
<col  class="left" />

<col  class="left" />

<col  class="left" />
</colgroup>
<tbody>
<tr>
<td class="left">A</td>
<td class="left">New領域のGC</td>
<td class="left">DefNew</td>
</tr>

<tr>
<td class="left">B</td>
<td class="left">GC前New領域の使用量</td>
<td class="left">68932K</td>
</tr>

<tr>
<td class="left">C</td>
<td class="left">GC後New領域の使用量</td>
<td class="left">1046K</td>
</tr>

<tr>
<td class="left">D</td>
<td class="left">New領域GCの閾値</td>
<td class="left">76672K</td>
</tr>

<tr>
<td class="left">E</td>
<td class="left">GC前JVMメモリの使用量</td>
<td class="left">472847K</td>
</tr>

<tr>
<td class="left">F</td>
<td class="left">GC後JVMメモリの使用量</td>
<td class="left">405094K</td>
</tr>
</tbody>
</table>

<p>
New領域容量の変化とJMV全体のメモリ容量の変化からOLD領域の増加サイズを算出する。
</p>

<pre class="example">
New領域変化容量： 68932 K - 1046K   = 67886K
JVM全体変化容量： 472847K - 405094K = 67753K
★OLD領域の増加サイズ： New領域変化容量 - JVM全体変化容量 = 133K
</pre>

<p>
最後の <code>real</code> 部分はSTW(アプリ停止時間)の時間となります、10ミリ秒ですね。
</p>
<pre class="example">
[Times: user=0.01 sys=0.00, real=0.01 secs]
</pre>
</div>
</div>

<div id="outline-container-sec-3-2" class="outline-3">
<h3 id="sec-3-2"><span class="section-number-3">3.2</span> Old領域GCログ</h3>
<div class="outline-text-3" id="text-3-2">
<p>
以下は通常なCMS処理のログです。
</p>
<pre class="example">
★CMS起きる前のNewGCログ
2014-11-05T16:59:21.544+0900: 9486.413: [GC2014-11-05T16:59:21.544+0900: 9486.413: [DefNew: 68932K-&gt;1046K(76672K), 0.0122090 secs] 472847K-&gt;405094K(515776K), 0.0123880 secs] [Times: user=0.01 sys=0.00, real=0.01 secs] 

★①
2014-11-05T16:59:21.564+0900: 9486.433: [GC [1 CMS-initial-mark: 404047K(439104K)] 405358K(515776K), 0.0084940 secs] [Times: user=0.01 sys=0.00, real=0.01 secs] 

★②-1
2014-11-05T16:59:21.573+0900: 9486.442: [CMS-concurrent-mark-start]
2014-11-05T16:59:21.727+0900: 9486.596: [CMS-concurrent-mark: 0.154/0.154 secs] [Times: user=0.14 sys=0.00, real=0.15 secs] 

★②-2
2014-11-05T16:59:21.727+0900: 9486.596: [CMS-concurrent-preclean-start]
2014-11-05T16:59:21.754+0900: 9486.623: [CMS-concurrent-preclean: 0.027/0.027 secs] [Times: user=0.00 sys=0.00, real=0.03 secs] 

★③
2014-11-05T16:59:21.754+0900: 9486.623: [GC[YG occupancy: 1535 K (76672 K)]2014-11-05T16:59:21.754+0900: 9486.623: [Rescan (non-parallel) 2014-11-05T16:59:21.754+0900: 9486.623: [grey object rescan, 0.0012560 secs]2014-11-05T16:59:21.755+0900: 9486.624: [root rescan, 0.0064000 secs], 0.0077470 secs]2014-11-05T16:59:21.762+0900: 9486.631: [weak refs processing, 0.0003290 secs]2014-11-05T16:59:21.762+0900: 9486.631: [class unloading, 0.0108870 secs]2014-11-05T16:59:21.773+0900: 9486.642: [scrub symbol table, 0.0156480 secs]2014-11-05T16:59:21.789+0900: 9486.658: [scrub string table, 0.0012200 secs] [1 CMS-remark: 404047K(439104K)] 405583K(515776K), 0.0371740 secs] [Times: user=0.04 sys=0.01, real=0.04 secs] 

★④-1
2014-11-05T16:59:21.792+0900: 9486.661: [CMS-concurrent-sweep-start]
2014-11-05T16:59:22.187+0900: 9487.056: [CMS-concurrent-sweep: 0.395/0.395 secs] [Times: user=0.38 sys=0.00, real=0.39 secs] 

★④-2
2014-11-05T16:59:22.189+0900: 9487.057: [CMS-concurrent-reset-start]

2014-11-05T16:59:22.190+0900: 9487.059: [CMS-concurrent-reset: 0.001/0.001 secs] [Times: user=0.00 sys=0.00, real=0.01 secs] 

★CMS後のNewGCログ
2014-11-05T17:00:32.559+0900: 9557.428: [GC2014-11-05T17:00:32.559+0900: 9557.428: [DefNew: 69206K-&gt;1062K(76672K), 0.0103860 secs] 104633K-&gt;36628K(515776K), 0.0105880 secs] [Times: user=0.01 sys=0.00, real=0.01 secs]
</pre>
<p>
CMS前後のNewGCログのJVMメモリ使用量からメモリが掃除されることをわかります。
405094K → 104633K、約293MBが掃除された。
</p>

<p>
Initial Markフェースログの先頭に <code>GC</code> 文字が現れるので、STWが発生することが分かります。
</p>
<pre class="example">
★①
2014-11-05T16:59:21.564+0900: 9486.433: [GC [1 CMS-initial-mark: 404047K(439104K)] 405358K(515776K), 0.0084940 secs] [Times: user=0.01 sys=0.00, real=0.01 secs] 
                                                                 ~~~~~~  ~~~~~~    ~~~~~~  ~~~~~~                                                 ~~~~~~~~~~~~
                                                                   A        B        C       D                                                         E
</pre>
<p>
Initial Markフェースログの内訳
</p>
<table border="2" cellspacing="0" cellpadding="6" rules="groups" frame="hsides">


<colgroup>
<col  class="left" />

<col  class="left" />

<col  class="left" />
</colgroup>
<tbody>
<tr>
<td class="left">A</td>
<td class="left">CMS起動時のOLD領域使用量</td>
<td class="left">404047K</td>
</tr>

<tr>
<td class="left">B</td>
<td class="left">CMSトリガーするOLD領域閾値</td>
<td class="left">439104K</td>
</tr>

<tr>
<td class="left">C</td>
<td class="left">CMS起動時JVMのメモリの使用量</td>
<td class="left">405358K</td>
</tr>

<tr>
<td class="left">D</td>
<td class="left">&#xa0;</td>
<td class="left">&#xa0;</td>
</tr>

<tr>
<td class="left">E</td>
<td class="left">Initial Markフェースで消費した時間</td>
<td class="left">10 ミリ秒</td>
</tr>
</tbody>
</table>

<p>
続いて、Concurrent MarkとConcurrent precleaning処理の時間を示している。この部分の処理
はアプリケーションと平行で行われるため、停止時間生じない。
</p>
<pre class="example">
★②-1
2014-11-05T16:59:21.573+0900: 9486.442: [CMS-concurrent-mark-start]
2014-11-05T16:59:21.727+0900: 9486.596: [CMS-concurrent-mark: 0.154/0.154 secs] [Times: user=0.14 sys=0.00, real=0.15 secs] 
                                                                                                            ~~~~~~~~~~~~~~
                                                                                                                  F
★②-2
2014-11-05T16:59:21.727+0900: 9486.596: [CMS-concurrent-preclean-start]
2014-11-05T16:59:21.754+0900: 9486.623: [CMS-concurrent-preclean: 0.027/0.027 secs] [Times: user=0.00 sys=0.00, real=0.03 secs] 
                                                                                                                ~~~~~~~~~~~~~~
                                                                                                                      G
</pre>
<table border="2" cellspacing="0" cellpadding="6" rules="groups" frame="hsides">


<colgroup>
<col  class="left" />

<col  class="left" />

<col  class="left" />
</colgroup>
<tbody>
<tr>
<td class="left">F</td>
<td class="left">Concurrent Markフェースで消費した時間</td>
<td class="left">150 ミリ秒</td>
</tr>

<tr>
<td class="left">G</td>
<td class="left">Concurrent Precleanフェースで消費した時間</td>
<td class="left">30ミリ秒</td>
</tr>
</tbody>
</table>

<p>
Parallel Remarkフェーズのログは１行で完結する、折り返してインデントを付けると次の形に
なります。
</p>
<pre class="example">
★③
2014-11-05T16:59:21.754+0900: 9486.623:
[GC
    [YG occupancy: 1535 K (76672 K)]
                   ~~~~    ~~~~~
                    H        I
    2014-11-05T16:59:21.754+0900: 9486.623:
                                            [
                                              Rescan (non-parallel)
                                                2014-11-05T16:59:21.754+0900: 9486.623: [grey object rescan, 0.0012560 secs]
                                                2014-11-05T16:59:21.755+0900: 9486.624: [root rescan, 0.0064000 secs]
                                             , 0.0077470 secs
                                            ]
    2014-11-05T16:59:21.762+0900: 9486.631: [weak refs processing, 0.0003290 secs]
    2014-11-05T16:59:21.762+0900: 9486.631: [class unloading, 0.0108870 secs]
    2014-11-05T16:59:21.773+0900: 9486.642: [scrub symbol table, 0.0156480 secs]
    2014-11-05T16:59:21.789+0900: 9486.658: [scrub string table, 0.0012200 secs]

    [1 CMS-remark: 404047K(439104K)] 405583K(515776K), 0.0371740 secs
                   ~~~~~~  ~~~~~~    ~~~~~~  ~~~~~~
                     J       K         L       M
]
[Times: user=0.04 sys=0.01, real=0.04 secs]
                            ~~~~~~~~~~~~~~
                                 N
</pre>
<p>
内訳
</p>
<table border="2" cellspacing="0" cellpadding="6" rules="groups" frame="hsides">


<colgroup>
<col  class="left" />

<col  class="left" />

<col  class="left" />

<col  class="left" />
</colgroup>
<tbody>
<tr>
<td class="left">H</td>
<td class="left">現時点New領域の使用量</td>
<td class="left">1535K</td>
<td class="left">&#xa0;</td>
</tr>

<tr>
<td class="left">I</td>
<td class="left">New領域GCの閾値</td>
<td class="left">76672K</td>
<td class="left">&#xa0;</td>
</tr>

<tr>
<td class="left">J</td>
<td class="left">現時点OLD領域使用量</td>
<td class="left">404047K</td>
<td class="left">変化なし</td>
</tr>

<tr>
<td class="left">K</td>
<td class="left">CMSトリガーするOLD領域閾値</td>
<td class="left">439104K</td>
<td class="left">&#xa0;</td>
</tr>

<tr>
<td class="left">L</td>
<td class="left">現時点JVMのメモリの使用量</td>
<td class="left">405583K</td>
<td class="left">225K増加</td>
</tr>

<tr>
<td class="left">M</td>
<td class="left">&#xa0;</td>
<td class="left">&#xa0;</td>
<td class="left">&#xa0;</td>
</tr>

<tr>
<td class="left">N</td>
<td class="left">Parallel Remarkフェーズで消費した時間</td>
<td class="left">40 ミリ秒</td>
<td class="left">&#xa0;</td>
</tr>
</tbody>
</table>
<p>
処理時間からみるとParallel RemarkフェーズはInitial Markフフェーズより時間がかかること
が分かりました。
</p>

<p>
続いて、Concurrent SweepとConcurrent Reset処理の時間を示している。この部分の処理
はアプリケーションと平行で行われるため、停止時間生じない。
</p>
<pre class="example">
★④-1
2014-11-05T16:59:21.792+0900: 9486.661: [CMS-concurrent-sweep-start]
2014-11-05T16:59:22.187+0900: 9487.056: [CMS-concurrent-sweep: 0.395/0.395 secs] [Times: user=0.38 sys=0.00, real=0.39 secs]
                                                                                                             ~~~~~~~~~~~~~~
                                                                                                                   O
★④-2
2014-11-05T16:59:22.189+0900: 9487.057: [CMS-concurrent-reset-start]
2014-11-05T16:59:22.190+0900: 9487.059: [CMS-concurrent-reset: 0.001/0.001 secs] [Times: user=0.00 sys=0.00, real=0.01 secs]
                                                                                                             ~~~~~~~~~~~~~~~
                                                                                                                   P
</pre>
<table border="2" cellspacing="0" cellpadding="6" rules="groups" frame="hsides">


<colgroup>
<col  class="left" />

<col  class="left" />

<col  class="left" />
</colgroup>
<tbody>
<tr>
<td class="left">O</td>
<td class="left">Concurrent Sweepフェースで消費した時間</td>
<td class="left">390 ミリ秒</td>
</tr>

<tr>
<td class="left">P</td>
<td class="left">Concurrent Resetフェースで消費した時間</td>
<td class="left">10ミリ秒</td>
</tr>
</tbody>
</table>

<p>
フェース①〜④の処理時間とJVMメモリ容量変化は以下となります。
</p>
<table border="2" cellspacing="0" cellpadding="6" rules="groups" frame="hsides">


<colgroup>
<col  class="left" />

<col  class="left" />

<col  class="left" />

<col  class="right" />

<col  class="right" />
</colgroup>
<thead>
<tr>
<th scope="col" class="left">&#xa0;</th>
<th scope="col" class="left">フェーズ名</th>
<th scope="col" class="left">一時停止</th>
<th scope="col" class="right">処理時間(ミリ秒)</th>
<th scope="col" class="right">JVMメモリ(MB)</th>
</tr>
</thead>
<tbody>
<tr>
<td class="left">①</td>
<td class="left">Initial Mark</td>
<td class="left">◯</td>
<td class="right">10</td>
<td class="right">395.8</td>
</tr>

<tr>
<td class="left">②-1</td>
<td class="left">Concurrent Mark</td>
<td class="left">&#xa0;</td>
<td class="right">150</td>
<td class="right">&#xa0;</td>
</tr>

<tr>
<td class="left">②-2</td>
<td class="left">Concurrent precleaning</td>
<td class="left">&#xa0;</td>
<td class="right">30</td>
<td class="right">&#xa0;</td>
</tr>

<tr>
<td class="left">③</td>
<td class="left">Parallel Remark</td>
<td class="left">◯</td>
<td class="right">40</td>
<td class="right">396.0</td>
</tr>

<tr>
<td class="left">④-1</td>
<td class="left">Concurrent Sweeping</td>
<td class="left">&#xa0;</td>
<td class="right">390</td>
<td class="right">102.0</td>
</tr>

<tr>
<td class="left">④-2</td>
<td class="left">Concurrent Reset</td>
<td class="left">&#xa0;</td>
<td class="right">10</td>
<td class="right">&#xa0;</td>
</tr>
</tbody>
<tbody>
<tr>
<td class="left">&#xa0;</td>
<td class="left">&#xa0;</td>
<td class="left">&#xa0;</td>
<td class="right">630</td>
<td class="right">-294</td>
</tr>
</tbody>
</table>
<p>
CMS全体処理で630ミリ秒かかる、そのうち50ミリ秒の停止時間が発生する。掃除されたメモリ
容量約294MB。
</p>
</div>
</div>


<div id="outline-container-sec-3-3" class="outline-3">
<h3 id="sec-3-3"><span class="section-number-3">3.3</span> concurrent mode failure</h3>
<div class="outline-text-3" id="text-3-3">
<p>
次の状況に置いて、コンカレントGCが縮退しFullGCを引き起こす可能性があります。
</p>
<ul class="org-ul">
<li>システムが高負荷時に、新しいオブジェクトの生成速度がGCのメモリ解放速度より早い
</li>
<li>Java ヒープの断片化率が非常に高い時
</li>
</ul>

<p>
また、縮退後のFullGCは <code>Serial Old</code> モードで行われるため、アプリ停止時間が長くなります。
</p>

<p>
<code>Initial Mark</code> 次の <code>Concurrent Mark</code> で縮退が起きて、 <code>FullGC</code> が起こった例。
</p>
<pre class="example">
2014-11-20T14:04:17.969+0900: 423.523: [GC [1 CMS-initial-mark: 439103K(439104K)] 451488K(515776K), 0.0209760 secs] [Times: user=0.02 sys=0.00, real=0.02 secs] 
2014-11-20T14:04:18.110+0900: 423.663: [CMS-concurrent-mark-start]
2014-11-20T14:04:19.105+0900: 424.659: [Full GC2014-11-20T14:04:19.105+0900: 424.659: [CMS2014-11-20T14:04:19.745+0900: 425.299: [CMS-concurrent-mark: 1.632/1.636 secs] [Times: user=1.41 sys=0.17, real=1.64 secs] 
 (concurrent mode failure): 439103K-&gt;439103K(439104K), 1.7507640 secs] 515775K-&gt;458321K(515776K), [CMS Perm : 57066K-&gt;57066K(95504K)], 1.7509190 secs] [Times: user=1.74 sys=0.00, real=1.75 secs]
</pre>

<p>
<code>FullGC</code> を示すログに内容を分解すると次のようになります。
</p>
<pre class="example">
2014-11-20T14:04:19.105+0900: 424.659:
    [Full GC2014-11-20T14:04:19.105+0900: 424.659: 

          ★CMS失敗時の内容
          [CMS2014-11-20T14:04:19.745+0900: 425.299: 
               [CMS-concurrent-mark: 1.632/1.636 secs]
               [Times: user=1.41 sys=0.17, real=1.64 secs]  
               (concurrent mode failure): 439103K-&gt;439103K(439104K), 1.7507640 secs] 

          ★縮退後、FullGC実施後の結果
          515775K-&gt;458321K(515776K), [CMS Perm : 57066K-&gt;57066K(95504K)], 1.7509190 secs]

    [Times: user=1.74 sys=0.00, real=1.75 secs]
</pre>
</div>
</div>

<div id="outline-container-sec-3-4" class="outline-3">
<h3 id="sec-3-4"><span class="section-number-3">3.4</span> 手動FullGC時のログ</h3>
<div class="outline-text-3" id="text-3-4">
<p>
CMS GCを利用した場合でも手動でFullGCを起こすことは可能です。以下は手動GC掛けられた時
にのGCログとなります。
</p>

<pre class="example">
2014-11-20T15:03:39.462+0900: 2611.658: [Full GC2014-11-20T15:03:39.462+0900: 2611.658: [CMS: 365597K-&gt;33109K(439104K), 0.3923750 secs] 408803K-&gt;33109K(515776K), [CMS Perm : 57580K-&gt;57357K(95888K)], 0.3925240 secs] [Times: user=0.36 sys=0.00, real=0.39 secs] 

★分解
2014-11-20T15:03:39.462+0900: 2611.658: 
    [Full GC2014-11-20T15:03:39.462+0900: 2611.658: 
          [CMS: 365597K-&gt;33109K(439104K), 0.3923750 secs] 408803K-&gt;33109K(515776K), 
          [CMS Perm : 57580K-&gt;57357K(95888K)], 0.3925240 secs] 
    [Times: user=0.36 sys=0.00, real=0.39 secs]
</pre>
</div>
</div>
</div>

<div id="outline-container-sec-4" class="outline-2">
<h2 id="sec-4"><span class="section-number-2">4</span> 参考</h2>
<div class="outline-text-2" id="text-4">
<ul class="org-ul">
<li><a href="http://wall-climb.com/2009/10/12/%25E3%2582%25B3%25E3%2583%25B3%25E3%2582%25AB%25E3%2583%25AC%25E3%2583%25B3%25E3%2583%2588gc%25E3%2581%25AE%25E6%25B3%25A8%25E6%2584%258F%25E7%2582%25B9/">コンカレントGCの注意点</a>
</li>
<li><a href="http://automation123.blogspot.jp/2012/02/understanding-concurrent-mark-sweep.html">Understanding Concurrent Mark Sweep Garbage Collector Logs</a>
</li>
<li><a href="https://blogs.oracle.com/poonam/entry/understanding_cms_gc_logs">Understanding CMS GC Logs</a>
</li>
<li><a href="http://a4dosanddos.hatenablog.com/entry/2014/01/24/011007">「Java」GC ログを出力する</a>
</li>
<li><a href="http://h50146.www5.hp.com/products/software/oe/hpux/developer/column02/gabage_02/">Javaのかなめ、「ガベージ・コレクション」をやさしく学ぶ・後編</a>
</li>
</ul>
</div>
</div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[メモ]ApacheでbackendとのKeepAliveをOFFにする]]></title>
    <link href="http://luozengbin.github.io/blog/2014-10-29-%5B%E3%83%A1%E3%83%A2%5Dapache%E3%81%A7backend%E3%81%A8%E3%81%AEkeepalive%E3%82%92off%E3%81%AB%E3%81%99%E3%82%8B.html"/>
    <updated>2014-10-29T00:00:00+09:00</updated>
    <id>http://luozengbin.github.io/blog/[メモ]apacheでbackendとのkeepaliveをoffにする</id>
    <content type="html"><![CDATA[<div id="table-of-contents">
<h2>Table of Contents</h2>
<div id="text-table-of-contents">
<ul>
<li><a href="#sec-1">1. Apache側でKeepAliveを制御する</a></li>
<li><a href="#sec-2">2. APサーバ側にてKeepAliveを制御する</a></li>
<li><a href="#sec-3">3. 参考</a></li>
</ul>
</div>
</div>
<p>
次のような構成でApacheとAPサーバ間のHTTP KeepAliveが有効にすると
</p>
<ol class="org-ol">
<li>LBの振り分けが偏る可能性がある
</li>
<li>LBの無振り分け先の切り替えに影響が生じる可能性がある、詳細は こちらの記事 を参照してください。
</li>
</ol>
<p>
のような不都合があります。
</p>

<pre class="example">
+----------+         +------------+        +-----------+     +-------------+
| Client   +---------&gt; Apache     +--------&gt;   LB      +-----&gt; AP Server   |
+----------+         +------------+        +-----------+     +-------------+
</pre>

<p>
とい言うわけでApacheとAPサーバ間KeepAliveをOFFにする方法を調査した。
</p>

<p>
<!-- more -->
</p>

<div id="outline-container-sec-1" class="outline-2">
<h2 id="sec-1"><span class="section-number-2">1</span> Apache側でKeepAliveを制御する</h2>
<div class="outline-text-2" id="text-1">
<p>
<code>ProxyPass</code> ディレクティブの <code>keepalive</code> パラメータが期待通り動作しないので迷っていた、
しかしドキュメントによると
</p>

<pre class="example">
バックエンドサーバと Apache の間にファイアーウォールがある場合には、 このパラメータを
使ってください。ファイアウォールは往々にして、 非活動状態のコネクションを落とそうとし
ます。 このフラグは OS に指示して、KEEP_ALIVE メッセージを非活動状態の コネクションで
も送るようにします。これによってファイアウォールによってコネクションが 落とされること
を防げます。keepalive を有効にするには、このプロパティを On にしてください。
</pre>

<p>
HTTP KeepAliveに関係しそうに見えたが、実はあんまり関係ないのようです。
TCPレベルでコネクションをファイアウォールによる切断を防ぐためのパラメータです。
</p>

<p>
更に調べると <code>mod_proxy_http</code> モジュールの環境変数にHTTP KeepAliveに関係するものが
出てきた。
</p>

<ul class="org-ul">
<li>force-proxy-request-1.0
プロキシがバックエンドに HTTP/1.0 でリクエストを送るようにし、HTTP/1.1 の機能を無効にします。
</li>

<li>proxy-nokeepalive
プロキシがリクエスト終了後にバックエンドとの接続を切るようにします。
</li>
</ul>

<p>
よし！これだそう。次のように設定したらうまくできた。
</p>
<pre class="example">
&lt;Location /test/&gt;
    ProxyPass http://dummyhost:8080/app1/
    SetEnv proxy-nokeepalive 1
&lt;/Location&gt;
</pre>

<p>
これで、ApacheからAPサーバへのHTTPリクエストヘッダに <code>Connection: close</code> が付与される
ようになりました。 <code>tcpdump</code> でパケットのやり取りを確認すると、ちゃんと毎回クライアン
トのからコネクション切断するためのfinパケットが送信されることを確認しました。
</p>
</div>
</div>


<div id="outline-container-sec-2" class="outline-2">
<h2 id="sec-2"><span class="section-number-2">2</span> APサーバ側にてKeepAliveを制御する</h2>
<div class="outline-text-2" id="text-2">
<p>
一般的にAPサーバ側でもKeepAliveの設定が可能です。
流れ的に、HTTPレスポンスのHTTPヘッダに <code>Connection: close</code> を付与して返すことで
リクエスト側にコネクション切断する旨を伝える。
</p>

<p>
Tomcat起動時に次のJavaオプションを付けるとHTTP KeepAliveがOFFになります。
</p>
<pre class="example">
-Dorg.apache.coyote.http11.Http11Protocol.MAX_KEEP_ALIVE_REQUESTS=1
</pre>
</div>
</div>

<div id="outline-container-sec-3" class="outline-2">
<h2 id="sec-3"><span class="section-number-2">3</span> 参考</h2>
<div class="outline-text-2" id="text-3">
<ul class="org-ul">
<li><a href="http://blog.nomadscafe.jp/2011/07/apache.html">今こそ見直すApacheの設定</a>
</li>
</ul>
</div>
</div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[メモ]Zabbix導入記録]]></title>
    <link href="http://luozengbin.github.io/blog/2014-10-16-%5B%E3%83%A1%E3%83%A2%5Dzabbix%E5%B0%8E%E5%85%A5%E8%A8%98%E9%8C%B2.html"/>
    <updated>2014-10-16T00:00:00+09:00</updated>
    <id>http://luozengbin.github.io/blog/[メモ]zabbix導入記録</id>
    <content type="html"><![CDATA[<div id="table-of-contents">
<h2>Table of Contents</h2>
<div id="text-table-of-contents">
<ul>
<li><a href="#sec-1">1. 構成</a></li>
<li><a href="#sec-2">2. インストール</a></li>
<li><a href="#sec-3">3. zabbixの起動</a></li>
<li><a href="#sec-4">4. Zabbix フロントエンドのインストール</a></li>
<li><a href="#sec-5">5. Zabbix エージェントのインストール</a></li>
<li><a href="#sec-6">6. Zabbixのアンインストール</a></li>
<li><a href="#sec-7">7. 参考</a></li>
</ul>
</div>
</div>
<p>
Zabbix2.4、CentOS7用のrpmが見つからなかったので手動ビルドすることにした。
</p>

<p>
<!-- more -->
</p>

<div id="outline-container-sec-1" class="outline-2">
<h2 id="sec-1"><span class="section-number-2">1</span> 構成</h2>
<div class="outline-text-2" id="text-1">
<pre class="example">
                            +---------------+
                            | Apache 2.4    +---+
                            +---------------+   |         +---------------+
                                                +---------+   Zabbix DB   |
                                                |         +---------------+
              10050       10051                 |         |   PostgreSQL  |
+--------------+            +---------------+   |         +---------------+
| Zabbix Agent +------------+ Zabbix Server +---+
+--------------+            +---------------+
</pre>
</div>
</div>

<div id="outline-container-sec-2" class="outline-2">
<h2 id="sec-2"><span class="section-number-2">2</span> インストール</h2>
<div class="outline-text-2" id="text-2">
<p>
必要なパッケージのインストール。
</p>
<pre class="example">
$ sudo yum install postgresql-devel
$ sudo yum install libxml2 libxml2-devel
$ sudo yum install net-snmp net-snmp-agent  net-snmp-libs net-snmp-devel
$ sudo yum install libcurl libcurl-devel
$ sudo yum install php-bcmath
</pre>

<p>
ソースコードをダウンロードし、ビルドする。
</p>
<pre class="example">
$ wget http://downloads.sourceforge.net/sourceforge/zabbix/zabbix-2.4.1.tar.gz
$ tar xzvf zabbix-2.4.1.tar.gz
$ cd zabbix-2.4.1/
$ ./configure --enable-server --enable-agent  --with-postgresql --with-net-snmp --with-libcurl --with-libxml2 --enable-java --sysconfdir=/etc/zabbix
$ sudo make install
</pre>

<p>
Zabbix設定ファイル、DB初期化用SQLを格納用のディレクトリの作成とファイルのコピー。
</p>
<pre class="example">
$ sudo mkdir -p /etc/zabbix/database/postgresql
$ sudo mkdir -p /etc/zabbix/database/postgresql/upgrade/2.0

$ sudo cp -v ./database/postgresql/*.sql /etc/zabbix/database/postgresql
$ sudo cp -v ./upgrades/dbpatches/2.0/postgresql/patch.sql /etc/zabbix/database/postgresql/upgrade/2.0

$ sudo chmod 0444 /etc/zabbix/database/postgresql/*.sql
$ sudo chmod 0444 /etc/zabbix/database/postgresql/upgrade/2.0/*.sql
</pre>

<p>
Zabbixログ格納用ディレクトリの作成。
</p>
<pre class="example">
$ sudo mkdir -m 0750 /var/log/zabbix
</pre>

<p>
Zabbixプロセス実行ユーザの登録、ディレクトリ権限の付与。
</p>
<pre class="example">
$ sudo groupadd -r zabbix
$ sudo useradd -r -g zabbix -d /dev/null zabbix -s /sbin/nologin
$ sudo chown -R zabbix:zabbix /var/log/zabbix
$ sudo chown -R zabbix:zabbix /etc/zabbix
$ sudo chown -R zabbix:zabbix /usr/local/share/zabbix
</pre>

<p>
Zabbixサーバ設定ファイルにPIDの格納場所を指定する。
</p>
<pre class="example">
$ sudo chmod 0640 /etc/zabbix/zabbix_server.conf
$ sudo sed -i 's:# PidFile=.*:PidFile=/run/zabbix/zabbix_server.pid:' /etc/zabbix/zabbix_server.conf
</pre>

<p>
Zabbixサーバ設定ファイルにログの格納場所を指定する
</p>
<pre class="example">
$ sudo sed -i 's:^LogFile=.*:LogFile=/var/log/zabbix/zabbix_server.log:' /etc/zabbix/zabbix_server.conf
</pre>

<p>
監視結果データ及び監視項目設定データを格納するためのDBを作成する。
</p>
<pre class="example">
# su - postgresql
-bash-4.2$ createuser --pwprompt zabbix      ★接続ユーザの作成
-bash-4.2$ createdb --owner=zabbix zabbix    ★データベース作成
</pre>

<p>
作成したデータベースにスキーマを初期化する。
</p>
<pre class="example">
$ cd /etc/zabbix/database/postgresql
$ psql -U zabbix zabbix &lt; schema.sql
$ psql -U zabbix zabbix &lt; images.sql
$ psql -U zabbix zabbix &lt; data.sql
</pre>

<p>
Zabbixサーバ設定ファイルにDB接続情報を変更する。
</p>
<pre class="example">
DBHost=localhost
DBName=zabbix
DBUser=zabbix
DBPassword=******
DBPort=5432
</pre>

<p>
PIDファイルの親ディレクトリをtmp領域に作成するため、 <code>systemd-tmpfiles</code> 機能でOS起
動時に予め作成するようにする。
</p>

<p>
<code>/usr/lib/tmpfiles.d/zabbix-server.conf</code>
</p>
<pre class="example">
d /run/zabbix 0755 zabbix zabbix -
</pre>

<p>
<code>systemd-tmpfiles</code> 手動実行で、ディレクトリを作成する。OS再起動する場合、この手順は不
要です。
</p>
<pre class="example">
$ sudo systemd-tmpfiles --create /usr/lib/tmpfiles.d/zabbix-server.conf
</pre>

<p>
<code>systemd</code> から起動停止できるように <code>zabbix-server.service</code> を作成する。
</p>

<p>
<code>/usr/lib/systemd/system/zabbix-server.service</code>
</p>
<pre class="example">
[Unit]
Description=Zabbix server
After=syslog.target network.target postgresql.service

[Service]
Type=forking
User=root
ExecStart=/usr/local/sbin/zabbix_server
PIDFile=/run/zabbix/zabbix_server.pid

[Install]
WantedBy=multi-user.target
</pre>
</div>
</div>

<div id="outline-container-sec-3" class="outline-2">
<h2 id="sec-3"><span class="section-number-2">3</span> zabbixの起動</h2>
<div class="outline-text-2" id="text-3">
<p>
<code>systemctl</code> コマンドで起動する。
</p>
<pre class="example">
$ sudo systemctl enable zabbix-server.service
$ sudo systemctl start zabbix-server.service
</pre>

<p>
ポート確認
</p>
<pre class="example">
$ sudo netstat -nutpl | grep zabbix
tcp        0      0 0.0.0.0:10051           0.0.0.0:*               LISTEN      23765/zabbix_server
</pre>

<p>
ログ確認
</p>
<pre class="example">
# cat zabbix_server.log
 23765:20141016:231838.117 Starting Zabbix Server. Zabbix 2.4.1 (revision 49643).
 23765:20141016:231838.118 ****** Enabled features ******
 23765:20141016:231838.118 SNMP monitoring:           YES
 23765:20141016:231838.118 IPMI monitoring:            NO
 23765:20141016:231838.118 WEB monitoring:            YES
 23765:20141016:231838.118 VMware monitoring:         YES
 23765:20141016:231838.118 Jabber notifications:       NO
 23765:20141016:231838.118 Ez Texting notifications:  YES
 23765:20141016:231838.118 ODBC:                       NO
 23765:20141016:231838.118 SSH2 support:               NO
 23765:20141016:231838.118 IPv6 support:               NO
 23765:20141016:231838.118 ******************************
 23765:20141016:231838.118 using configuration file: /etc/zabbix/zabbix_server.conf
 23765:20141016:231838.157 current database version (mandatory/optional): 02040000/02040000
 23765:20141016:231838.157 required mandatory version: 02040000
 23765:20141016:231838.190 server #0 started [main process]
 23775:20141016:231838.191 server #1 started [configuration syncer #1]
 23776:20141016:231838.191 server #2 started [db watchdog #1]
 23777:20141016:231838.191 server #3 started [poller #1]
 23781:20141016:231838.193 server #5 started [poller #3]
 23783:20141016:231838.195 server #7 started [poller #5]
 23782:20141016:231838.201 server #6 started [poller #4]
 23789:20141016:231838.201 server #12 started [trapper #4]
 23786:20141016:231838.202 server #9 started [trapper #1]
 23788:20141016:231838.203 server #11 started [trapper #3]
 23790:20141016:231838.203 server #13 started [trapper #5]
 23794:20141016:231838.204 server #17 started [timer #1]
 23791:20141016:231838.204 server #14 started [icmp pinger #1]
 23787:20141016:231838.204 server #10 started [trapper #2]
 23792:20141016:231838.204 server #15 started [alerter #1]
 23784:20141016:231838.207 server #8 started [unreachable poller #1]
 23795:20141016:231838.208 server #18 started [http poller #1]
 23799:20141016:231838.208 server #21 started [history syncer #2]
 23806:20141016:231838.209 server #23 started [history syncer #4]
 23809:20141016:231838.209 server #26 started [self-monitoring #1]
 23780:20141016:231838.210 server #4 started [poller #2]
 23801:20141016:231838.211 server #22 started [history syncer #3]
 23793:20141016:231838.211 server #16 started [housekeeper #1]
 23797:20141016:231838.211 server #20 started [history syncer #1]
 23807:20141016:231838.214 server #24 started [escalator #1]
 23808:20141016:231838.215 server #25 started [proxy poller #1]
 23796:20141016:231838.309 server #19 started [discoverer #1]
</pre>
</div>
</div>

<div id="outline-container-sec-4" class="outline-2">
<h2 id="sec-4"><span class="section-number-2">4</span> Zabbix フロントエンドのインストール</h2>
<div class="outline-text-2" id="text-4">
<p>
phpコンテンツ格納するディレクトリの作成とコンテンツ実体の格納。
</p>
<pre class="example">
$ sudo mkdir -p /var/www/zabbix
$ sudo cp -r frontends/php/* /var/www/zabbix
$ sudo chown -R apache:apache /var/www/zabbix
$ sudo chmod -R u=rwX,g=rX,o= /var/www/zabbix
</pre>

<p>
<code>/etc/php.ini</code> にてphp実行時パラメータを変更する。
</p>
<pre class="example">
max_execution_time = 300     ★変更
max_input_time = 300         ★変更
post_max_size = 16M          ★変更
memory_limit = 128M
upload_max_filesize = 2M
session.auto_start = 0
date.timezone = "Asia/Tokyo" ★変更
</pre>

<p>
フラフの日本語表示対応
</p>
<pre class="example">
$ sudo yum install ipa-gothic-fonts ipa-pgothic-fonts vlgothic-fonts vlgothic-p-fonts
$ sudo -u apache cp /usr/share/fonts/ipa-gothic/ipag.ttf /var/www/zabbix/fonts/
</pre>

<p>
<code>/var/www/zabbix/include/defines.inc.php</code>
</p>
<pre class="example">
変更前
define('ZBX_GRAPH_FONT_NAME',           'DejaVuSans'); // font file name

変更後
define('ZBX_GRAPH_FONT_NAME',           'ipag'); // font file name
</pre>

<p>
Apache設定内容 <code>/etc/httpd/conf.d/httpd-zabbix.conf</code>
</p>
<pre class="example">
Alias /zabbix /var/www/zabbix
&lt;Location /zabbix&gt;
    # Apache 2.4
    Require local
    #Require host example.com
&lt;/Location&gt;
</pre>

<p>
<code>/etc/httpd/conf/httpd.conf</code>
</p>
<pre class="example">
IncludeOptional conf.d/httpd-zabbix.conf
</pre>

<p>
画面を起動する。
</p>

<video controls>
   <source src="video/2014-10-17_zabbix_install_01.mp4">
</video>

<p>
ウィザードで生成しれたファイルの内容 <code>/var/www/zabbix/conf/zabbix.conf.php</code>
</p>
<pre class="example">
&lt;?php
// Zabbix GUI configuration file
global $DB;

$DB['TYPE']     = 'POSTGRESQL';
$DB['SERVER']   = 'localhost';
$DB['PORT']     = '0';
$DB['DATABASE'] = 'zabbix';
$DB['USER']     = 'zabbix';
$DB['PASSWORD'] = '**********';

// SCHEMA is relevant only for IBM_DB2 database
$DB['SCHEMA'] = '';

$ZBX_SERVER      = 'localhost';
$ZBX_SERVER_PORT = '10051';
$ZBX_SERVER_NAME = '';

$IMAGE_FORMAT_DEFAULT = IMAGE_FORMAT_PNG;
?&gt;
</pre>
</div>
</div>

<div id="outline-container-sec-5" class="outline-2">
<h2 id="sec-5"><span class="section-number-2">5</span> Zabbix エージェントのインストール</h2>
<div class="outline-text-2" id="text-5">
<p>
Zabbix AgentプロセスのPID格納用ディレクトリの初期化。
<code>/usr/lib/tmpfiles.d/zabbix-agentd.conf</code>
</p>
<pre class="example">
$ sudo touch /usr/lib/tmpfiles.d/zabbix-agentd.conf
$ sudo nano /usr/lib/tmpfiles.d/zabbix-agentd.conf
d /run/zabbix 0755 zabbix zabbix -
</pre>

<pre class="example">
$ sudo systemd-tmpfiles --create /usr/lib/tmpfiles.d/zabbix-agentd.conf
</pre>

<p>
Zabbix Agentサービス起動・停止用のファイル <code>/usr/lib/systemd/system/zabbix-agentd.service</code>
</p>
<pre class="example">
[Unit]
Description=Zabbix agent daemon
After=network.target

[Service]
Type=forking
User=root
ExecStart=/usr/local/sbin/zabbix_agentd
PIDFile=/run/zabbix/zabbix_agentd.pid

[Install]
WantedBy=multi-user.target
</pre>

<p>
Zabbix Agent設定ファイルに、PID及びログ出力先を変更する。
</p>
<pre class="example">
$ sudo -u zabbix sed -i 's:# PidFile=.*:PidFile=/run/zabbix/zabbix_agentd.pid:' /etc/zabbix/zabbix_agentd.conf
$ sudo -u zabbix sed -i 's:^LogFile=.*:LogFile=/var/log/zabbix/zabbix_agentd.log:' /etc/zabbix/zabbix_agentd.conf
</pre>

<p>
Zabbix Agent設定ファイルに、Zabbix Serverの情報と監視ホスト名を指定する。
</p>
<pre class="example">
Server=127.0.0.1
ServerActive=127.0.0.1
Hostname=testhost
</pre>

<p>
ポートの確認
</p>
<pre class="example">
$ sudo netstat -nutpl | grep zabbix
tcp        0      0 0.0.0.0:10050           0.0.0.0:*               LISTEN      17764/zabbix_agentd
</pre>
</div>
</div>

<div id="outline-container-sec-6" class="outline-2">
<h2 id="sec-6"><span class="section-number-2">6</span> Zabbixのアンインストール</h2>
<div class="outline-text-2" id="text-6">
<pre class="example">
$ sudo userdel zabbix
</pre>

<p>
※未完成
</p>
</div>
</div>

<div id="outline-container-sec-7" class="outline-2">
<h2 id="sec-7"><span class="section-number-2">7</span> 参考</h2>
<div class="outline-text-2" id="text-7">
<ul class="org-ul">
<li><a href="https://www.zabbix.com/documentation/2.2/jp/start">Zabbix documentation in Japanese</a>
</li>
<li><a href="http://www.sraoss.co.jp/technology/zabbix/introduction/01-firststep.php">第 1 回 Zabbix を動かしてみよう</a>
</li>
<li><a href="http://tech-sketch.jp/2011/11/osszabbix1.html">OSS統合監視ツール「Zabbix」を利用して大規模環境監視(1)</a>
</li>
</ul>
</div>
</div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[調査]JBossAS7のソケット操作タイムアウト値について]]></title>
    <link href="http://luozengbin.github.io/blog/2014-10-08-%5B%E8%AA%BF%E6%9F%BB%5Djbossas7%E3%81%AE%E3%82%BD%E3%82%B1%E3%83%83%E3%83%88%E6%93%8D%E4%BD%9C%E3%82%BF%E3%82%A4%E3%83%A0%E3%82%A2%E3%82%A6%E3%83%88%E5%80%A4%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6.html"/>
    <updated>2014-10-08T00:00:00+09:00</updated>
    <id>http://luozengbin.github.io/blog/[調査]jbossas7のソケット操作タイムアウト値について</id>
    <content type="html"><![CDATA[<div id="table-of-contents">
<h2>Table of Contents</h2>
<div id="text-table-of-contents">
<ul>
<li><a href="#sec-1">1. DEFAULT_CONNECTION_TIMEOUTオプションの役割</a></li>
<li><a href="#sec-2">2. JBossASの実装</a></li>
<li><a href="#sec-3">3. タイムアウト時の挙動</a>
<ul>
<li><a href="#sec-3-1">3.1. HTTPヘッダー受信途中タイムアウトの場合</a></li>
<li><a href="#sec-3-2">3.2. リクエスト本文受信途中タイムアウトの場合</a></li>
</ul>
</li>
<li><a href="#sec-4">4. 注意書き</a></li>
<li><a href="#sec-5">5. 参考リンク</a></li>
</ul>
</div>
</div>
<p>
JBossAS の起動オプション <code>org.apache.coyote.http11.DEFAULT_CONNECTION_TIMEOUT</code> につい
て誤解があったので、メモしておきます。
</p>

<p>
まず、ドキュメントの説明。デフォルトタイムアウト値が60秒ですね。
</p>
<pre class="example">
org.apache.coyote.http11.DEFAULT_CONNECTION_TIMEOUT
Default socket timeout. The default value is 60000 ms.
</pre>
<p>
説明だけでよく分からない、最初はサーバサイトワーカスレッドの処理時間タイムアウト値
と理解しました。
</p>

<p>
テストアプリでタイムアウト時の動作を確認する。
</p>
<pre class="example">
+----------+            +----------------+
| SoapUI   +------------+  テストアプリ  |
+----------+            |                |
                        +----------------+
                        |  JBossAS 7.x   |
                        +----------------+
</pre>
<p>
SoapUIのリードタイムアウトを120秒に変更する、テストアプリに <code>Thread.sleep(70 * 1000)</code>
コードを仕込んで処理時間を長くする。これでタイムアウトになると考えたのですが、結果的に
タイムアウトせず、正常なレスポンスでした。これで、 <code>DEFAULT_CONNECTION_TIMEOUT</code> はワー
カスレッドのタイムアウト値ではないことが分かりました。
</p>

<p>
説明文にソケットのタイムアウト値であることが書かれたので <code>telnet</code> でソケット通信の各
stepの処理時間をあえて長くして動作状況を観測してみました。
</p>

<ol class="org-ol">
<li>telnetでコネクションを貼る
</li>
<li>ヘッダを途中まで送信する
</li>
<li>60秒待つこと
</li>
</ol>

<pre class="example">
$ telnet localhost 8080
Trying 127.0.0.1...
Connected to localhost.
Escape character is '^]'.
POST http://localhost:8080/testapp/HelloWorld HTTP/1.1
Connection: close
Accept-Encoding: gzip,deflate
Content-Type: text/xml;charset=UTF-8
SOAPAction: "sayHello"
Content-Length: 318
Host: localhost:8080
★ここで60秒を待つ
Connection closed by foreign host.
</pre>

<p>
step3のところで60秒後、サーバからfinパケットが送出されてコネクションが切れた。
<code>DEFAULT_CONNECTION_TIMEOUT</code> パラメータの意味が少し掴みました。
</p>

<p>
少し掘り下げて見たいので、コードリーディングして実装の概要を以下に紹介します。
</p>

<p>
<!-- more -->
</p>

<div id="outline-container-sec-1" class="outline-2">
<h2 id="sec-1"><span class="section-number-2">1</span> DEFAULT_CONNECTION_TIMEOUTオプションの役割</h2>
<div class="outline-text-2" id="text-1">
<p>
JBossASのJava起動オプションで指定する
<code>-Dorg.apache.coyote.http11.DEFAULT_CONNECTION_TIMEOUT=xxxxx</code> オプションの値は最終的に
ソケット操作のブロックタイムアウト値 <code>java.net.ServerSocket.setSoTimeout(xx)</code> に反映さ
れる。
</p>

<p>
サーバ側で以下のソケット操作でブロックされる時間が指定時間より超えるとタイムアウトさせ
る機能です。
</p>
<pre class="example">
ServerSocket.accept();
SocketInputStream.read();
DatagramSocket.receive();
</pre>

<p>
例えば、HTTPヘッダ受信途中クライアント側がストール状態になり、
<code>SocketInputStream.read()</code> 処理がずっと待ち続けるには行けないので（FDのリソース枯渇に
なるかも知らない）、タイムアウトさせる必要があります。
</p>
</div>
</div>

<div id="outline-container-sec-2" class="outline-2">
<h2 id="sec-2"><span class="section-number-2">2</span> JBossASの実装</h2>
<div class="outline-text-2" id="text-2">
<p>
<code>org.apache.coyote.http11.Constants</code> にデフォルト値が60秒で定義されている。
</p>
<div class="org-src-container">

<pre class="src src-java"><span style="color: #b4fa70;">public</span> <span style="color: #b4fa70;">final</span> <span style="color: #b4fa70;">class</span> <span style="color: #8cc4ff;">Constants</span> {
    ...............
    <span style="color: #73d216;">//</span><span style="color: #73d216;">&#9733;&#12371;&#12371;&#12391;Java&#12458;&#12503;&#12471;&#12519;&#12531;&#12363;&#12425;&#20516;&#12434;&#21442;&#29031;&#12375;&#12390;&#12356;&#12427;</span>
    <span style="color: #b4fa70;">public</span> <span style="color: #b4fa70;">static</span> <span style="color: #b4fa70;">final</span> <span style="color: #8cc4ff;">int</span> DEFAULT_CONNECTION_TIMEOUT =
            Integer.valueOf(System.getProperty(<span style="color: #e9b96e;">"org.apache.coyote.http11.DEFAULT_CONNECTION_TIMEOUT"</span>, <span style="color: #e9b96e;">"60000"</span>)).intValue();
    .............
</pre>
</div>

<p>
この値は以下の流れで、 <code>JIoEndpoint</code> クラスの <code>soTimeout</code> 属性に反映される。
</p>
<pre class="example">
1.org.jboss.as.web.WebConnectorService.start()
2.  org.apache.catalina.connector.Connectorのコンストラクタ処理
3.    apache.coyote.http11.Http11Protocolのコンストラクタ処理
4.      org.apache.tomcat.util.net.JIoEndpoint.setSoTimeout(xx)
</pre>

<p>
<code>acceptor</code> スレッドで新規コネクションをacceptしワーカスレッドに渡した後にワーカスレッ
ドの <code>run</code> 関数内 <code>java.net.ServerSocket.setSoTimeout(xx)</code> 関数を呼び出し、値を設定す
る。具体的な流れは以下となります。
</p>

<pre class="example">
1. org.apache.tomcat.util.net.JIoEndpoint.Acceptor.run()
2.   org.apache.tomcat.util.net.JIoEndpoint.processSocket(socket)
3.     ★ここで分岐がある、別途検証する
4.     org.apache.tomcat.util.net.JIoEndpoint.Workerが起動される
5.       org.apache.tomcat.util.net.JIoEndpoint.Worker.run()
6.         org.apache.tomcat.util.net.JIoEndpoint.setSocketOptions(socket)
7.           socket.setSoTimeout(soTimeout);
</pre>
</div>
</div>

<div id="outline-container-sec-3" class="outline-2">
<h2 id="sec-3"><span class="section-number-2">3</span> タイムアウト時の挙動</h2>
<div class="outline-text-2" id="text-3">
</div><div id="outline-container-sec-3-1" class="outline-3">
<h3 id="sec-3-1"><span class="section-number-3">3.1</span> HTTPヘッダー受信途中タイムアウトの場合</h3>
<div class="outline-text-3" id="text-3-1">
<p>
Cookiesが大きいの場合、HTTPヘッダー電文が複数パケットに分割する可能性が高い。
ネットワーク障害でHTTPヘッダー受信途中でタイムアウトが起きた場合サーバからFINパケット
よりコネクションが切断される。
</p>

<p>
以下はHTTPヘッダー受信処理のコードの抜粋です。タイムアウトが起きた場合★３の部分が実
行される。 エラーログを吐かずに処理が終了してしまう。
</p>

<p>
<a href="http://anonsvn.jboss.org/repos/jbossweb/tags/JBOSSWEB_7_2_2_FINAL/src/main/java/org/apache/coyote/http11/Http11Processor.java">org.apache.coyote.http11.Http11Processor</a>
</p>
<div class="org-src-container">

<pre class="src src-java"><span style="color: #e9b96e;">/**</span>
<span style="color: #e9b96e;"> * Process pipelined HTTP requests on the specified socket.</span>
<span style="color: #e9b96e;"> *</span>
<span style="color: #e9b96e;"> * </span><span style="color: #e6a8df;">@param</span><span style="color: #e9b96e;"> socket Socket from which the HTTP requests will be read</span>
<span style="color: #e9b96e;"> *               and the HTTP responses will be written.</span>
<span style="color: #e9b96e;"> *</span>
<span style="color: #e9b96e;"> * </span><span style="color: #e6a8df;">@throws</span><span style="color: #e9b96e;"> IOException error during an I/O operation</span>
<span style="color: #e9b96e;"> */</span>
<span style="color: #b4fa70;">public</span> <span style="color: #8cc4ff;">SocketState</span> <span style="color: #fce94f;">process</span>(<span style="color: #8cc4ff;">Socket</span> <span style="color: #fcaf3e;">socket</span>)
    <span style="color: #b4fa70;">throws</span> <span style="color: #8cc4ff;">IOException</span> {
    <span style="color: #8cc4ff;">RequestInfo</span> <span style="color: #fcaf3e;">rp</span> = request.getRequestProcessor();
    rp.setStage(<span style="color: #e6a8df;">org</span>.<span style="color: #e6a8df;">apache</span>.<span style="color: #e6a8df;">coyote</span>.<span style="color: #e6a8df;">Constants</span>.STAGE_PARSE);

    <span style="color: #73d216;">//</span><span style="color: #73d216;">&#9733;&#9733;&#9733;&#65296; &#12356;&#12429;&#12356;&#12429;&#30465;&#30053;&#12377;&#12427;</span>

    <span style="color: #b4fa70;">while</span> (!error &amp;&amp; keepAlive &amp;&amp; !event) {

        <span style="color: #73d216;">// </span><span style="color: #73d216;">Parsing the request header</span>
        <span style="color: #b4fa70;">try</span> {
            <span style="color: #b4fa70;">if</span> (!disableUploadTimeout &amp;&amp; keptAlive) {
                <span style="color: #b4fa70;">if</span> (keepAliveTimeout &gt; 0) {
                    socket.setSoTimeout(keepAliveTimeout);
                }
                <span style="color: #b4fa70;">else</span> <span style="color: #b4fa70;">if</span> (soTimeout &gt; 0) {
                    socket.setSoTimeout(soTimeout);
                }
            }

            <span style="color: #73d216;">//</span><span style="color: #73d216;">&#9733;&#9733;&#9733;&#65297; HTTP&#12504;&#12483;&#12480;&#12540;&#65297;&#34892;&#30446;&#12398;&#21463;&#20449;&#20966;&#29702;</span>
            inputBuffer.parseRequestLine();
            request.setStartTime(System.currentTimeMillis());
            keptAlive = <span style="color: #e6a8df;">true</span>;
            <span style="color: #b4fa70;">if</span> (!disableUploadTimeout) {
                socket.setSoTimeout(timeout);
            }

            <span style="color: #73d216;">//</span><span style="color: #73d216;">&#9733;&#9733;&#9733;&#65298; HTTP&#12504;&#12483;&#12480;&#12540;&#12398;&#21463;&#20449;&#20966;&#29702;</span>
            inputBuffer.parseHeaders();
        } <span style="color: #b4fa70;">catch</span> (<span style="color: #8cc4ff;">IOException</span> <span style="color: #fcaf3e;">e</span>) {

            <span style="color: #73d216;">//</span><span style="color: #73d216;">&#9733;&#9733;&#9733;&#65299; &#12493;&#12483;&#12488;&#12527;&#12540;&#12463;IO&#12456;&#12521;&#12540;&#26178;&#12289;&#20966;&#29702;&#12434;&#27490;&#12417;&#12427;</span>
            error = <span style="color: #e6a8df;">true</span>;
            <span style="color: #b4fa70;">break</span>;
        } <span style="color: #b4fa70;">catch</span> (<span style="color: #8cc4ff;">Throwable</span> <span style="color: #fcaf3e;">t</span>) {
            <span style="color: #e6a8df;">CoyoteLogger</span>.HTTP_LOGGER.errorParsingHeader(t);
            <span style="color: #73d216;">// </span><span style="color: #73d216;">400 - Bad Request</span>
            response.setStatus(400);
            error = <span style="color: #e6a8df;">true</span>;
        }
</pre>
</div>

<p>
★３の部分にエラー出力処理を追加しらた、タイムアウト時下記のエラートレースが出力され
た。
</p>
<pre class="example">
19:23:49,020 ERROR [stderr] (http-/0.0.0.0:8080-1) java.net.SocketTimeoutException: Read timed out
19:23:49,020 ERROR [stderr] (http-/0.0.0.0:8080-1) 	at java.net.SocketInputStream.socketRead0(Native Method)
19:23:49,021 ERROR [stderr] (http-/0.0.0.0:8080-1) 	at java.net.SocketInputStream.read(SocketInputStream.java:152)
19:23:49,021 ERROR [stderr] (http-/0.0.0.0:8080-1) 	at java.net.SocketInputStream.read(SocketInputStream.java:122)
19:23:49,027 ERROR [stderr] (http-/0.0.0.0:8080-1) 	at org.apache.coyote.http11.InternalInputBuffer.fill(InternalInputBuffer.java:721)
19:23:49,028 ERROR [stderr] (http-/0.0.0.0:8080-1) 	at org.apache.coyote.http11.InternalInputBuffer.parseHeader(InternalInputBuffer.java:660)
19:23:49,028 ERROR [stderr] (http-/0.0.0.0:8080-1) 	at org.apache.coyote.http11.InternalInputBuffer.parseHeaders(InternalInputBuffer.java:516)
19:23:49,029 ERROR [stderr] (http-/0.0.0.0:8080-1) 	at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:828)
19:23:49,032 ERROR [stderr] (http-/0.0.0.0:8080-1) 	at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:653)
19:23:49,033 ERROR [stderr] (http-/0.0.0.0:8080-1) 	at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:920)
19:23:49,034 ERROR [stderr] (http-/0.0.0.0:8080-1) 	at java.lang.Thread.run(Thread.java:745)
</pre>
</div>
</div>

<div id="outline-container-sec-3-2" class="outline-3">
<h3 id="sec-3-2"><span class="section-number-3">3.2</span> リクエスト本文受信途中タイムアウトの場合</h3>
<div class="outline-text-3" id="text-3-2">
<p>
以下、HTTP本文読み取り処理(HTTP POST)でブロックタイムアウトが起きた時のサーバログです。
</p>
<pre class="example">
Caused by: java.net.SocketTimeoutException: Read timed out
	at java.net.SocketInputStream.socketRead0(Native Method) [rt.jar:1.7.0_65]
	at java.net.SocketInputStream.read(SocketInputStream.java:152) [rt.jar:1.7.0_65]
	at java.net.SocketInputStream.read(SocketInputStream.java:122) [rt.jar:1.7.0_65]
	at org.apache.coyote.http11.InternalInputBuffer.fill(InternalInputBuffer.java:737) [jbossweb-7.2.2.Final-redhat-1.jar:7.2.2.Final-redhat-1]
	at org.apache.coyote.http11.InternalInputBuffer$InputStreamInputBuffer.doRead(InternalInputBuffer.java:767) [jbossweb-7.2.2.Final-redhat-1.jar:7.2.2.Final-redhat-1]
	at org.apache.coyote.http11.filters.IdentityInputFilter.doRead(IdentityInputFilter.java:116) [jbossweb-7.2.2.Final-redhat-1.jar:7.2.2.Final-redhat-1]
	at org.apache.coyote.http11.InternalInputBuffer.doRead(InternalInputBuffer.java:697) [jbossweb-7.2.2.Final-redhat-1.jar:7.2.2.Final-redhat-1]
	at org.apache.coyote.Request.doRead(Request.java:438) [jbossweb-7.2.2.Final-redhat-1.jar:7.2.2.Final-redhat-1]
	at org.apache.catalina.connector.InputBuffer.realReadBytes(InputBuffer.java:341) [jbossweb-7.2.2.Final-redhat-1.jar:7.2.2.Final-redhat-1]
	... 47 more
</pre>
</div>
</div>
</div>

<div id="outline-container-sec-4" class="outline-2">
<h2 id="sec-4"><span class="section-number-2">4</span> 注意書き</h2>
<div class="outline-text-2" id="text-4">
<p>
<code>org.apache.coyote.http11.DEFAULT_CONNECTION_TIMEOUT</code> が次のように誤解されることもあ
るので、要注意です。
</p>
<pre class="example">
ワーカスレッドの実行時間のタイムアウト値
</pre>

<p>
あくまでもソケットのブロックタイムアウト値なので、アプリのロジック処理時と関係ないで
す。主にHTTPヘッダとHTTP本文の読み取り処理のブロック時間を監視するために使われる。
</p>
</div>
</div>

<div id="outline-container-sec-5" class="outline-2">
<h2 id="sec-5"><span class="section-number-2">5</span> 参考リンク</h2>
<div class="outline-text-2" id="text-5">
<ul class="org-ul">
<li><a href="https://docs.jboss.org/jbossweb/7.0.x/sysprops.html">JBossWeb System Properties</a>
</li>
<li><a href="http://docs.oracle.com/javase/jp/1.4/api/java/net/Socket.html#getSoTimeout%2528%2529">Java API Doc クラス Socket</a>
</li>
<li><a href="http://docs.oracle.com/javase/jp/6/api/java/net/SocketOptions.html#SO_TIMEOUT">Java API Doc - インタフェース SocketOptions</a>
</li>
</ul>
</div>
</div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[調査]SAS統計ソフトについて]]></title>
    <link href="http://luozengbin.github.io/blog/2014-10-05-%5B%E8%AA%BF%E6%9F%BB%5Dsas%E7%B5%B1%E8%A8%88%E3%82%BD%E3%83%95%E3%83%88%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6.html"/>
    <updated>2014-10-05T00:00:00+09:00</updated>
    <id>http://luozengbin.github.io/blog/[調査]sas統計ソフトについて</id>
    <content type="html"><![CDATA[<div id="table-of-contents">
<h2>Table of Contents</h2>
<div id="text-table-of-contents">
<ul>
<li><a href="#sec-1">1. SASとは</a></li>
<li><a href="#sec-2">2. SAS言語</a></li>
<li><a href="#sec-3">3. 統計分析のイメージ</a></li>
<li><a href="#sec-4">4. SASプログラムのイメージ</a></li>
<li><a href="#sec-5">5. 無償で使えるの？</a></li>
<li><a href="#sec-6">6. 日本での事例</a></li>
<li><a href="#sec-7">7. おまけに</a></li>
<li><a href="#sec-8">8. 参考リンク</a></li>
</ul>
</div>
</div>
<p>
ある飲み会で <code>JT</code> のプログラムマーさんと出会って、最初彼からの自己紹介で「プログラムマー
です」と聞いた時に、Java屋、Ruby屋普通のWebエンジニアだと思った。話を詳しく聞くとなん
と、「SAS」という言語しか扱っていないようです。 <code>SAS</code> という言語は初耳なので、軽く調べること
にした。
</p>

<p>
<!-- more -->
</p>

<div id="outline-container-sec-1" class="outline-2">
<h2 id="sec-1"><span class="section-number-2">1</span> SASとは</h2>
<div class="outline-text-2" id="text-1">
<p>
SASの全称はStatistical Analysis System、日本語発音は「サス」というようです。
以下はIT用語辞書からの引用です。
</p>
<pre class="example">
SAS Institute社が開発・販売している、統計解析ソフトを中心とするソフトウェア製品群のブ
ランド名。また、SAS Institute社自体。

世界的に人気の高い統計解析ソフトウェアで、1960年代から主に大学や研究所で科学・工学分野
の研究に用いられてきた。近年ではビジネス向けの機能や関連製品が充実し、主要なBI(ビジネ
スインテリジェンス)ツールの一つとして企業の業務分析や意思決定支援の分野でも導入が進ん
でいる。
</pre>
<p>
なんと1960年代、父親が生まれた時代ですね、かなり古い！
</p>
<font color="red"><strong>
<p>
という訳で、「SAS」は言語名、会社名、ソフトウェア製品群のブランド名として使える。次に
SAS言語についてです。
</p>
</strong></font>
</div>
</div>
<div id="outline-container-sec-2" class="outline-2">
<h2 id="sec-2"><span class="section-number-2">2</span> SAS言語</h2>
<div class="outline-text-2" id="text-2">
<p>
以下は <a href="http://wikiwiki.jp/cattail/?SAS%25C6%25FE%25CC%25E71">SAS入門1</a> からのSAS言語についての説明内容です。
</p>

<pre class="example">
ＳＡＳ言語は，非常に古いコンピュータ言語のひとつですが，
ＦＯＲＴＲＡＮ，ＣＯＢＯＬ，Ｃといった第３世代言語（高級言語）と違い，
第４世代言語（４ＧＬ）または簡易言語と呼ばれる言語の１つです．
１つの命令文の受け持つ処理が，高級言語よりたくさんの作業をこなしてくれるので，，
プログラミングする人にとって複雑な内容を簡単に書くことができるというメリットがあります．
ＳＡＳが得意とするデータ処理は，統計解析やデータマイニングといった，データ分析処理です．
データを管理したり，データシステム構築することもできますが，大量データに対する
データ分析機能は，ＳＡＳがナンバーワンといってもよいでしょう．
製薬，金融，マーケティング，通信，製造といった分野で広く使われています．
</pre>
<p>
第４世代言語とい言われる代表的な言語は
</p>
<ul class="org-ul">
<li>データベース分野のSQL
</li>
<li>統計分野のR言語
</li>
<li>Web開発分野のRuby on Rails
</li>
</ul>
<p>
があるでしょう。SASはこれらの言語の中にR言語と同じ分野ですね。 R言語は過去SI仕事でソフト
の性能測定結果の統計分析で検証したことがあるので、なんとなくイメージが付きます。ここ
でようやくSASとの接点が見つかりました。
</p>

<p>
ちなみにEmacsからRを扱う設定は <sup><a id="fnr.1" name="fnr.1" class="footref" href="#fn.1">1</a></sup> が参考になります。
</p>
</div>
</div>

<div id="outline-container-sec-3" class="outline-2">
<h2 id="sec-3"><span class="section-number-2">3</span> 統計分析のイメージ</h2>
<div class="outline-text-2" id="text-3">
<p>
<code>JT</code> のプログラムマーさんの話から考えると、SASを使ってデータを統計分析する作業流れは
以下のようなイメージのようです。(自信がない、間違っているかも知れない)
</p>


<div class="figure">
<p><img src="img/2014-10-05-sas-chat1.png" alt="2014-10-05-sas-chat1.png" />
</p>
</div>
<ol class="org-ol">
<li>市場調査手段
<ul class="org-ul">
<li>紙媒体アンケート
</li>
<li>アンケートサイト
</li>
<li>SNS(Twitter,Facebookなど)より情報収集
</li>
</ul>
</li>
<li>SASより統計分析
<ul class="org-ul">
<li>業務視点からデータモデルを設計する（SAS提供している専用モデルの流用など）
</li>
<li>SASスクリプトを実装する
</li>
<li>1で収集したテキストデータを分析する
</li>
<li>レポートを出力する
</li>
</ul>
</li>
</ol>

<p>
モデリングの部分は業務知識が要求されるところでしょうね。
</p>

<p>
「医療統計学」でamazonを検索したら、本が結構出している感じがする。
<a href="http://www.amazon.co.jp/gp/bestsellers/books/720750">http://www.amazon.co.jp/gp/bestsellers/books/720750</a>
</p>

<p>
医療統計に関して、またっく知識がないのですが、ここではSASプログラムサンプルコードを見
てスクリプトのイメージを掴みたいと思います。
</p>
</div>
</div>

<div id="outline-container-sec-4" class="outline-2">
<h2 id="sec-4"><span class="section-number-2">4</span> SASプログラムのイメージ</h2>
<div class="outline-text-2" id="text-4">
<p>
以下はSASプログラムの雛形です。
</p>
<pre class="example">
options ...

data &lt;DATAセット名&gt;;
     infile '&lt;CSVファイルのパス&gt;';
     INPUT 変数名1 変数名2 変数名3 ......;

proc プロシジャー名 その他オプション;

run;
</pre>

<p>
以下は、 <code>plot</code> プロシージャーを利用してテキストデータからアスキーグラフを表現するSAS
プログラムサンプルです。
</p>
<pre class="example">
options nodate number pageno=1 linesize=80 pagesize=35;

data djia;
      input Year @7 HighDate date7. High @24 LowDate date7. Low;
      format highdate lowdate date7.;
      datalines;
1954  31DEC54  404.39  11JAN54  279.87
1955  30DEC55  488.40  17JAN55  388.20
...more data lines... 
1993  29DEC93 3794.33  20JAN93 3241.95
1994  31JAN94 3978.36  04APR94 3593.35
;

proc plot data=djia;
   plot high*year='*';

   title 'High Values of the Dow Jones Industrial Average';
   title2 'from 1954 to 1994';
run;
</pre>
<p>
コードは <a href="http://support.sas.com/documentation/cdl/en/proc/61895/HTML/default/viewer.htm#a002473567.htm">Base SAS(R) 9.2 Procedures Guide</a> から引用しています。
</p>

<p>
出力結果は以下のようなイメージになります。
</p>
<pre class="example">
       High Values of the Dow Jones Industrial Average                1
                      from 1954 to 1994

           Plot of High*Year.  Symbol used is '*'.

High |
     |
4000 +                                              *
     |                                             *
     |
     |                                            *
     |                                           *
3000 +                                          *
     |                                       * *
     |
     |
     |                                        *
2000 +                                      *
     |
     |                                     *
     |
     |                                   **
1000 +                 ***** ***  *** ***
     |             ****     *   **   *
     |        *****
     |      **
     |
   0 +
     |
     ---+---------+---------+---------+---------+---------+--
      1950      1960      1970      1980      1990      2000

                               Year
</pre>

<p>
SASプログラムの文法構造がかなり <code>gnuplot</code> と似ってことが気付きました。でも <a href="http://www.gnuplot.info/">gnuplot</a> が生
まれるのが1986年なので、後者が前者の形を引き続いた気がします。仕事でソフトの性能検証デー
タをフラフに加工する処理でよくgnuplotを使っています。 <code>OSS</code> なので無償で使える。SASで
も同じことができると思いますが、かなり高額のようです。コストパフォーマンスが悪いでしょ
うね。
</p>
</div>
</div>

<div id="outline-container-sec-5" class="outline-2">
<h2 id="sec-5"><span class="section-number-2">5</span> 無償で使えるの？</h2>
<div class="outline-text-2" id="text-5">
<p>
商用がメインなのでかなり高額です。SAS無償で使えるやつがあるけど、大学研究用途のみです。
おそらく個人勉強用でも問題内でしょう。詳細は <a href="http://www.slideshare.net/yuhsukek/sas-university-edition-38601663">Sas University Editionを使おう（インストール編）</a>
</p>

<p>
SAS University Editionのダウンロードリンク
<a href="http://www.sas.com/en_us/software/university-edition/download-software.html">http://www.sas.com/en_us/software/university-edition/download-software.html</a>
</p>

<p>
機会があれば、導入して遊んで見たいと思います。
</p>
</div>
</div>

<div id="outline-container-sec-6" class="outline-2">
<h2 id="sec-6"><span class="section-number-2">6</span> 日本での事例</h2>
<div class="outline-text-2" id="text-6">
<ul class="org-ul">
<li><a href="http://www.nec.co.jp/press/ja/1205/2202.html">ビッグデータ領域で、NECとSAS Institute Japanが協業</a>
</li>
<li><a href="http://www.sas.com/ja_jp/customers/jt.html">日本たばこ産業株式会社</a>
</li>
<li>他にも結構あります。<sup><a id="fnr.2" name="fnr.2" class="footref" href="#fn.2">2</a></sup>
</li>
</ul>
</div>
</div>

<div id="outline-container-sec-7" class="outline-2">
<h2 id="sec-7"><span class="section-number-2">7</span> おまけに</h2>
<div class="outline-text-2" id="text-7">
<ul class="org-ul">
<li>Javaの接点
<ul class="org-ul">
<li>SAS クライアントアプリケーションがJavaに依存しているようです。<sup><a id="fnr.3" name="fnr.3" class="footref" href="#fn.3">3</a></sup>
</li>
<li>Hadoopと連携するプロジェクトが今年から発足しているようです。<sup><a id="fnr.4" name="fnr.4" class="footref" href="#fn.4">4</a></sup>
</li>
</ul>
</li>

<li>他の統計ソフトとの比較
詳細は <sup><a id="fnr.5" name="fnr.5" class="footref" href="#fn.5">5</a></sup>
</li>
</ul>
</div>
</div>

<div id="outline-container-sec-8" class="outline-2">
<h2 id="sec-8"><span class="section-number-2">8</span> 参考リンク</h2>
<div class="outline-text-2" id="text-8">
<ul class="org-ul">
<li><a href="http://www.rcommanderdeigakutoukeikaiseki.com/index.html">臨床医のためのRコマンダーによる医学統計解析マニュアル</a>
</li>
<li><a href="http://www2.ngu.ac.jp/~taniguch/stat/intro-sas.htm">ＳＡＳ統計パッケージ の使い方</a>
</li>
<li><a href="http://sas.mathlab.info/index.html">SAS統計データ解析入門</a>
</li>
<li><a href="http://wikiwiki.jp/cattail/?FrontPage">Welcome to データ分析・マイニングの世界 by SAS</a>
</li>
</ul>
</div>
</div>
<div id="footnotes">
<h2 class="footnotes">Footnotes: </h2>
<div id="text-footnotes">

<div class="footdef"><sup><a id="fn.1" name="fn.1" class="footnum" href="#fnr.1">1</a></sup> <p class="footpara">
<a href="http://sheephead.homelinux.org/2009/10/26/1673/">これからEmacsでR使う人のための設定まとめ</a>
</p></div>

<div class="footdef"><sup><a id="fn.2" name="fn.2" class="footnum" href="#fnr.2">2</a></sup> <p class="footpara">
<a href="http://www.sas.com/ja_jp/customers.html">SASユーザー事例</a>
</p></div>

<div class="footdef"><sup><a id="fn.3" name="fn.3" class="footnum" href="#fnr.3">3</a></sup> <p class="footpara">
<a href="http://www.sas.com/offices/asiapacific/japan/service/resources/thirdpartysupport/v93/jres.html">SAS® 9.3（TS1M0以降） でサポートするJava Runtime Environment</a>
</p></div>

<div class="footdef"><sup><a id="fn.4" name="fn.4" class="footnum" href="#fnr.4">4</a></sup> <p class="footpara">
<a href="http://www.sas.com/ja_jp/news/press-releases/2014/september/2014-09-03-shionogi-imstat-for-hadoop-jp.html">SAS Institute Japan、塩野義製薬とHadoop上でビッグデータを活用した研究プロジェクトを発足</a>
</p></div>

<div class="footdef"><sup><a id="fn.5" name="fn.5" class="footnum" href="#fnr.5">5</a></sup> <p class="footpara">
<a href="https://sites.google.com/site/statinfra/comparison">統計ソフトの比較</a>
</p></div>


</div>
</div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[メモ]JBossAS稼働情報収取得方法]]></title>
    <link href="http://luozengbin.github.io/blog/2014-09-30-%5B%E3%83%A1%E3%83%A2%5Djbossas%E7%A8%BC%E5%83%8D%E6%83%85%E5%A0%B1%E5%8F%8E%E5%8F%96%E5%BE%97%E6%96%B9%E6%B3%95.html"/>
    <updated>2014-09-30T00:00:00+09:00</updated>
    <id>http://luozengbin.github.io/blog/[メモ]jbossas稼働情報収取得方法</id>
    <content type="html"><![CDATA[<div id="table-of-contents">
<h2>Table of Contents</h2>
<div id="text-table-of-contents">
<ul>
<li><a href="#sec-1">1. <code>jboss-cli.sh</code> 方式</a>
<ul>
<li><a href="#sec-1-1">1.1. JBoss管理インスタンスへ接続する</a></li>
<li><a href="#sec-1-2">1.2. JVMスレッドプール情報取得</a></li>
<li><a href="#sec-1-3">1.3. JVMメモリ情報取得</a></li>
<li><a href="#sec-1-4">1.4. データベース接続プール情報取得</a></li>
<li><a href="#sec-1-5">1.5. JDBCステートメントキャッシュ情報</a></li>
<li><a href="#sec-1-6">1.6. 起動オプション、システム属性などの確認</a></li>
<li><a href="#sec-1-7">1.7. EJBスレッドプールの確認</a></li>
<li><a href="#sec-1-8">1.8. トランザクション情報の確認</a></li>
</ul>
</li>
<li><a href="#sec-2">2. <code>remoting-jmx</code> 方式</a>
<ul>
<li><a href="#sec-2-1">2.1. JBossAS接続用のjmxterm起動スクリプト</a></li>
<li><a href="#sec-2-2">2.2. jmxterm基本的な使い方</a></li>
<li><a href="#sec-2-3">2.3. Web系ワーカスレッドの情報取得</a></li>
<li><a href="#sec-2-4">2.4. リクエストプロセッサーの稼働状況</a></li>
</ul>
</li>
<li><a href="#sec-3">3. <code>RESTful</code> 方式</a></li>
<li><a href="#sec-4">4. 参考情報</a></li>
</ul>
</div>
</div>
<p>
コマンドインタフェースから <code>JBossAS 7.x</code> アプリケーションサーバの稼働情報収取得方法に
ついて検証してみた。主に以下の方法が存在する。
</p>

<ol class="org-ol">
<li><code>jboss-cli.sh</code> コマンドでサーバの設定情報やRuntime情報を取得する。
</li>
<li>RESTful Management Interfaces HTTP通信でJSON形式で情報ヲ取得する。
</li>
<li>remoting-jmx インタフェースでMBeanサーバから情報を取得する。
</li>
</ol>

<p>
1と2の情報源が一緒です。取れる情報が次のようなイメージ、用途に応じて選ぶことになると思
います。
</p>
<pre class="example">
+-------------+
| jboss-cli   |
|   +---------+-----+
|   |         |     |
|   |         | JMX |
|   |         |     |
|   +---------+-----+
+-------------+
</pre>

<p>
<!-- more -->
</p>

<div id="outline-container-sec-1" class="outline-2">
<h2 id="sec-1"><span class="section-number-2">1</span> <code>jboss-cli.sh</code> 方式</h2>
<div class="outline-text-2" id="text-1">
</div><div id="outline-container-sec-1-1" class="outline-3">
<h3 id="sec-1-1"><span class="section-number-3">1.1</span> JBoss管理インスタンスへ接続する</h3>
<div class="outline-text-3" id="text-1-1">
<pre class="example">
$ jboss-cli.sh -c controller=&lt;hostname:port&gt;
</pre>
</div>
</div>

<div id="outline-container-sec-1-2" class="outline-3">
<h3 id="sec-1-2"><span class="section-number-3">1.2</span> JVMスレッドプール情報取得</h3>
<div class="outline-text-3" id="text-1-2">
<pre class="example">
[standalone@localhost:9999 /] /core-service=platform-mbean/type=threading:read-resource(recursive=true, include-runtime=true)
{
    "outcome" =&gt; "success",
    "result" =&gt; {
        "all-thread-ids" =&gt; [
            137L,
            .......
            2L
        ],
        "thread-contention-monitoring-supported" =&gt; true,
        "thread-cpu-time-supported" =&gt; true,
        "current-thread-cpu-time-supported" =&gt; true,
        "object-monitor-usage-supported" =&gt; true,
        "synchronizer-usage-supported" =&gt; true,
        "thread-contention-monitoring-enabled" =&gt; false,
        "thread-cpu-time-enabled" =&gt; true,
        "thread-count" =&gt; 36,
        "peak-thread-count" =&gt; 78,
        "total-started-thread-count" =&gt; 130L,
        "daemon-thread-count" =&gt; 14,
        "current-thread-cpu-time" =&gt; 5399864L,
        "current-thread-user-time" =&gt; 0L,
        "object-name" =&gt; "java.lang:type=Threading"
    }
}
[standalone@localhost:9999 /]
</pre>
</div>
</div>

<div id="outline-container-sec-1-3" class="outline-3">
<h3 id="sec-1-3"><span class="section-number-3">1.3</span> JVMメモリ情報取得</h3>
<div class="outline-text-3" id="text-1-3">
<p>
メモリ概要情報
</p>
<pre class="example">
[standalone@localhost:9999 /] /core-service=platform-mbean/type=memory:read-resource(recursive=true, include-runtime=true)
{
    "outcome" =&gt; "success",
    "result" =&gt; {
        "heap-memory-usage" =&gt; {
            "init" =&gt; 1366294528L,
            "used" =&gt; 253812744L,
            "committed" =&gt; 1320878080L,
            "max" =&gt; 1321795584L
        },
        "non-heap-memory-usage" =&gt; {
            "init" =&gt; 24313856L,
            "used" =&gt; 62715312L,
            "committed" =&gt; 63045632L,
            "max" =&gt; 318767104L
        },
        "object-name" =&gt; "java.lang:type=Memory",
        "object-pending-finalization-count" =&gt; 0,
        "verbose" =&gt; false
    }
}
[standalone@localhost:9999 /]
</pre>

<p>
メモリ詳細情報
</p>
<pre class="example">
[standalone@localhost:9999 /] /core-service=platform-mbean/type=memory-pool:read-resource(recursive=true, include-runtime=true)
{
    "outcome" =&gt; "success",
    "result" =&gt; {"name" =&gt; {
        "Eden_Space" =&gt; {
            "name" =&gt; "Eden_Space",
            "type" =&gt; "HEAP",
            "valid" =&gt; true,
            "memory-manager-names" =&gt; [
                "MarkSweepCompact",
                "Copy"
            ],
            "usage-threshold-supported" =&gt; false,
            "collection-usage-threshold-supported" =&gt; true,
            "usage-threshold" =&gt; undefined,
            "collection-usage-threshold" =&gt; 0L,
            "usage" =&gt; {
                "init" =&gt; 364445696L,
                "used" =&gt; 227453064L,
                "committed" =&gt; 364445696L,
                "max" =&gt; 364642304L
            },
            "peak-usage" =&gt; {
                "init" =&gt; 364445696L,
                "used" =&gt; 364445696L,
                "committed" =&gt; 364642304L,
                "max" =&gt; 364642304L
            },
            "usage-threshold-exceeded" =&gt; undefined,
            "usage-threshold-count" =&gt; undefined,
            "collection-usage-threshold-exceeded" =&gt; false,
            "collection-usage-threshold-count" =&gt; 0L,
            "collection-usage" =&gt; {
                "init" =&gt; 364445696L,
                "used" =&gt; 0L,
                "committed" =&gt; 364445696L,
                "max" =&gt; 364642304L
            },
            "object-name" =&gt; "java.lang:type=MemoryPool,name=\"Eden Space\""
        },
        "Survivor_Space" =&gt; {
            "name" =&gt; "Survivor_Space",
            "type" =&gt; "HEAP",
            "valid" =&gt; true,
            "memory-manager-names" =&gt; [
                "MarkSweepCompact",
                "Copy"
            ],
            "usage-threshold-supported" =&gt; false,
            "collection-usage-threshold-supported" =&gt; true,
            "usage-threshold" =&gt; undefined,
            "collection-usage-threshold" =&gt; 0L,
            "usage" =&gt; {
                "init" =&gt; 45481984L,
                "used" =&gt; 970896L,
                "committed" =&gt; 45547520L,
                "max" =&gt; 45547520L
            },
            "peak-usage" =&gt; {
                "init" =&gt; 45481984L,
                "used" =&gt; 24101280L,
                "committed" =&gt; 45547520L,
                "max" =&gt; 45547520L
            },
            "usage-threshold-exceeded" =&gt; undefined,
            "usage-threshold-count" =&gt; undefined,
            "collection-usage-threshold-exceeded" =&gt; false,
            "collection-usage-threshold-count" =&gt; 0L,
            "collection-usage" =&gt; {
                "init" =&gt; 45481984L,
                "used" =&gt; 970896L,
                "committed" =&gt; 45547520L,
                "max" =&gt; 45547520L
            },
            "object-name" =&gt; "java.lang:type=MemoryPool,name=\"Survivor Space\""
        },
        "Perm_Gen" =&gt; {
            "name" =&gt; "Perm_Gen",
            "type" =&gt; "NON_HEAP",
            "valid" =&gt; true,
            "memory-manager-names" =&gt; ["MarkSweepCompact"],
            "usage-threshold-supported" =&gt; true,
            "collection-usage-threshold-supported" =&gt; true,
            "usage-threshold" =&gt; 0L,
            "collection-usage-threshold" =&gt; 0L,
            "usage" =&gt; {
                "init" =&gt; 21757952L,
                "used" =&gt; 57597424L,
                "committed" =&gt; 57802752L,
                "max" =&gt; 268435456L
            },
            "peak-usage" =&gt; {
                "init" =&gt; 21757952L,
                "used" =&gt; 57597424L,
                "committed" =&gt; 57802752L,
                "max" =&gt; 268435456L
            },
            "usage-threshold-exceeded" =&gt; false,
            "usage-threshold-count" =&gt; 0L,
            "collection-usage-threshold-exceeded" =&gt; false,
            "collection-usage-threshold-count" =&gt; 0L,
            "collection-usage" =&gt; {
                "init" =&gt; 21757952L,
                "used" =&gt; 55181008L,
                "committed" =&gt; 55181312L,
                "max" =&gt; 268435456L
            },
            "object-name" =&gt; "java.lang:type=MemoryPool,name=\"Perm Gen\""
        },
        "Code_Cache" =&gt; {
            "name" =&gt; "Code_Cache",
            "type" =&gt; "NON_HEAP",
            "valid" =&gt; true,
            "memory-manager-names" =&gt; ["CodeCacheManager"],
            "usage-threshold-supported" =&gt; true,
            "collection-usage-threshold-supported" =&gt; false,
            "usage-threshold" =&gt; 0L,
            "collection-usage-threshold" =&gt; undefined,
            "usage" =&gt; {
                "init" =&gt; 2555904L,
                "used" =&gt; 5117888L,
                "committed" =&gt; 5242880L,
                "max" =&gt; 50331648L
            },
            "peak-usage" =&gt; {
                "init" =&gt; 2555904L,
                "used" =&gt; 5123264L,
                "committed" =&gt; 5242880L,
                "max" =&gt; 50331648L
            },
            "usage-threshold-exceeded" =&gt; false,
            "usage-threshold-count" =&gt; 0L,
            "collection-usage-threshold-exceeded" =&gt; undefined,
            "collection-usage-threshold-count" =&gt; undefined,
            "collection-usage" =&gt; undefined,
            "object-name" =&gt; "java.lang:type=MemoryPool,name=\"Code Cache\""
        },
        "Tenured_Gen" =&gt; {
            "name" =&gt; "Tenured_Gen",
            "type" =&gt; "HEAP",
            "valid" =&gt; true,
            "memory-manager-names" =&gt; ["MarkSweepCompact"],
            "usage-threshold-supported" =&gt; true,
            "collection-usage-threshold-supported" =&gt; true,
            "usage-threshold" =&gt; 0L,
            "collection-usage-threshold" =&gt; 0L,
            "usage" =&gt; {
                "init" =&gt; 910884864L,
                "used" =&gt; 36957616L,
                "committed" =&gt; 910884864L,
                "max" =&gt; 911605760L
            },
            "peak-usage" =&gt; {
                "init" =&gt; 910884864L,
                "used" =&gt; 36957616L,
                "committed" =&gt; 910884864L,
                "max" =&gt; 911605760L
            },
            "usage-threshold-exceeded" =&gt; false,
            "usage-threshold-count" =&gt; 0L,
            "collection-usage-threshold-exceeded" =&gt; false,
            "collection-usage-threshold-count" =&gt; 0L,
            "collection-usage" =&gt; {
                "init" =&gt; 910884864L,
                "used" =&gt; 36957616L,
                "committed" =&gt; 910884864L,
                "max" =&gt; 911605760L
            },
            "object-name" =&gt; "java.lang:type=MemoryPool,name=\"Tenured Gen\""
        }
    }}
}
[standalone@localhost:9999 /]
</pre>

<p>
GCの実行状況
</p>
<pre class="example">
[standalone@localhost:9999 /] /core-service=platform-mbean/type=garbage-collector:read-resource(recursive=true, include-runtime=true)
{
    "outcome" =&gt; "success",
    "result" =&gt; {"name" =&gt; {
        "MarkSweepCompact" =&gt; {
            "collection-count" =&gt; 6L,
            "collection-time" =&gt; 1183L,
            "memory-pool-names" =&gt; [
                "Eden_Space",
                "Survivor_Space",
                "Tenured_Gen",
                "Perm_Gen"
            ],
            "name" =&gt; "MarkSweepCompact",
            "object-name" =&gt; "java.lang:type=GarbageCollector,name=MarkSweepCompact",
            "valid" =&gt; true
        },
        "Copy" =&gt; {
            "collection-count" =&gt; 13L,
            "collection-time" =&gt; 3003L,
            "memory-pool-names" =&gt; [
                "Eden_Space",
                "Survivor_Space"
            ],
            "name" =&gt; "Copy",
            "object-name" =&gt; "java.lang:type=GarbageCollector,name=Copy",
            "valid" =&gt; true
        }
    }}
}
[standalone@localhost:9999 /]
</pre>
</div>
</div>
<div id="outline-container-sec-1-4" class="outline-3">
<h3 id="sec-1-4"><span class="section-number-3">1.4</span> データベース接続プール情報取得</h3>
<div class="outline-text-3" id="text-1-4">
<pre class="example">
[standalone@localhost:9999 /] /subsystem=datasources/data-source=ExampleDS/statistics=pool:read-resource(include-runtime=true, recursive=true)
{
    "outcome" =&gt; "success",
    "result" =&gt; {
        "ActiveCount" =&gt; "0",
        "AvailableCount" =&gt; "20",
        "AverageBlockingTime" =&gt; "0",
        "AverageCreationTime" =&gt; "0",
        "CreatedCount" =&gt; "0",
        "DestroyedCount" =&gt; "0",
        "InUseCount" =&gt; "0",
        "MaxCreationTime" =&gt; "0",
        "MaxUsedCount" =&gt; "0",
        "MaxWaitCount" =&gt; "0",
        "MaxWaitTime" =&gt; "0",
        "TimedOut" =&gt; "0",
        "TotalBlockingTime" =&gt; "0",
        "TotalCreationTime" =&gt; "0"
    }
}
[standalone@localhost:9999 /]
</pre>
</div>
</div>

<div id="outline-container-sec-1-5" class="outline-3">
<h3 id="sec-1-5"><span class="section-number-3">1.5</span> JDBCステートメントキャッシュ情報</h3>
<div class="outline-text-3" id="text-1-5">
<pre class="example">
[standalone@localhost:9999 /] /subsystem=datasources/data-source=ExampleDS/statistics=jdbc:read-resource(include-runtime=true, recursive=true)
{
    "outcome" =&gt; "success",
    "result" =&gt; {
        "PreparedStatementCacheAccessCount" =&gt; "0",
        "PreparedStatementCacheAddCount" =&gt; "0",
        "PreparedStatementCacheCurrentSize" =&gt; "0",
        "PreparedStatementCacheDeleteCount" =&gt; "0",
        "PreparedStatementCacheHitCount" =&gt; "0",
        "PreparedStatementCacheMissCount" =&gt; "0"
    }
}
[standalone@localhost:9999 /]
</pre>
</div>
</div>

<div id="outline-container-sec-1-6" class="outline-3">
<h3 id="sec-1-6"><span class="section-number-3">1.6</span> 起動オプション、システム属性などの確認</h3>
<div class="outline-text-3" id="text-1-6">
<pre class="example">
[standalone@localhost:9999 /] /core-service=platform-mbean/type=runtime:read-resource(recursive=true, include-runtime=true)
{
    "outcome" =&gt; "success",
    "result" =&gt; {
        "name" =&gt; "2147@localhost",
        "vm-name" =&gt; "OpenJDK 64-Bit Server VM",
        "vm-vendor" =&gt; "Oracle Corporation",
        "vm-version" =&gt; "24.65-b04",
        "spec-name" =&gt; "Java Virtual Machine Specification",
        "spec-vendor" =&gt; "Oracle Corporation",
        "spec-version" =&gt; "1.7",
        "management-spec-version" =&gt; "1.2",
        "class-path" =&gt; "/opt/jboss-eap-6.2/jboss-modules.jar",
        "library-path" =&gt; "/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib",
        "boot-class-path-supported" =&gt; true,
        "boot-class-path" =&gt; "/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.65.x86_64/jre/lib/resources.jar:/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.65.x86_64/jre/lib/rt.jar:/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.65.x86_64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.65.x86_64/jre/lib/jsse.jar:/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.65.x86_64/jre/lib/jce.jar:/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.65.x86_64/jre/lib/charsets.jar:/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.65.x86_64/jre/lib/rhino.jar:/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.65.x86_64/jre/lib/jfr.jar:/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.65.x86_64/jre/classes",
        "input-arguments" =&gt; [
            "-D[Standalone]",
            "-XX:+UseCompressedOops",
            "-Xms1303m",
            "-Xmx1303m",
            "-XX:MaxPermSize=256m",
            "-Djava.net.preferIPv4Stack=true",
            "-Djboss.modules.system.pkgs=org.jboss.byteman",
            "-Djava.awt.headless=true",
            "-Djboss.modules.metrics=true",
            "-Dorg.apache.tomcat.util.ENABLE_MODELER=true",
            "-Dorg.jboss.boot.log.file=/opt/jboss-eap-6.2/standalone/log/server.log",
            "-Dlogging.configuration=file:/opt/jboss-eap-6.2/standalone/configuration/logging.properties"
        ],
        "start-time" =&gt; 1412040330424L,
        "system-properties" =&gt; {
            "[Standalone]" =&gt; "",
            "awt.toolkit" =&gt; "sun.awt.X11.XToolkit",
            "catalina.home" =&gt; "/opt/jboss-eap-6.2/standalone/tmp",
            "file.encoding" =&gt; "UTF-8",
            "file.encoding.pkg" =&gt; "sun.io",
            "file.separator" =&gt; "/",
            "java.awt.graphicsenv" =&gt; "sun.awt.X11GraphicsEnvironment",
            "java.awt.headless" =&gt; "true",
            "java.awt.printerjob" =&gt; "sun.print.PSPrinterJob",
            "java.class.path" =&gt; "/opt/jboss-eap-6.2/jboss-modules.jar",
            "java.class.version" =&gt; "51.0",
            "java.endorsed.dirs" =&gt; "/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.65.x86_64/jre/lib/endorsed",
            "java.ext.dirs" =&gt; "/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.65.x86_64/jre/lib/ext:/usr/java/packages/lib/ext",
            "java.home" =&gt; "/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.65.x86_64/jre",
            "java.io.tmpdir" =&gt; "/tmp",
            "java.library.path" =&gt; "/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib",
            "java.naming.factory.url.pkgs" =&gt; "org.jboss.as.naming.interfaces:org.jboss.ejb.client.naming",
            "java.net.preferIPv4Stack" =&gt; "true",
            "java.protocol.handler.pkgs" =&gt; "org.jboss.net.protocol|org.jboss.vfs.protocol",
            "java.runtime.name" =&gt; "OpenJDK Runtime Environment",
            "java.runtime.version" =&gt; "1.7.0_65-mockbuild_2014_07_16_06_06-b00",
            "java.specification.name" =&gt; "Java Platform API Specification",
            "java.specification.vendor" =&gt; "Oracle Corporation",
            "java.specification.version" =&gt; "1.7",
            "java.util.logging.manager" =&gt; "org.jboss.logmanager.LogManager",
            "java.vendor" =&gt; "Oracle Corporation",
            "java.vendor.url" =&gt; "http://java.oracle.com/",
            "java.vendor.url.bug" =&gt; "http://bugreport.sun.com/bugreport/",
            "java.version" =&gt; "1.7.0_65",
            "java.vm.info" =&gt; "mixed mode",
            "java.vm.name" =&gt; "OpenJDK 64-Bit Server VM",
            "java.vm.specification.name" =&gt; "Java Virtual Machine Specification",
            "java.vm.specification.vendor" =&gt; "Oracle Corporation",
            "java.vm.specification.version" =&gt; "1.7",
            "java.vm.vendor" =&gt; "Oracle Corporation",
            "java.vm.version" =&gt; "24.65-b04",
            "javax.management.builder.initial" =&gt; "org.jboss.as.jmx.PluggableMBeanServerBuilder",
            "javax.xml.datatype.DatatypeFactory" =&gt; "__redirected.__DatatypeFactory",
            "javax.xml.parsers.DocumentBuilderFactory" =&gt; "__redirected.__DocumentBuilderFactory",
            "javax.xml.parsers.SAXParserFactory" =&gt; "__redirected.__SAXParserFactory",
            "javax.xml.stream.XMLEventFactory" =&gt; "__redirected.__XMLEventFactory",
            "javax.xml.stream.XMLInputFactory" =&gt; "__redirected.__XMLInputFactory",
            "javax.xml.stream.XMLOutputFactory" =&gt; "__redirected.__XMLOutputFactory",
            "javax.xml.transform.TransformerFactory" =&gt; "__redirected.__TransformerFactory",
            "javax.xml.validation.SchemaFactory:http://www.w3.org/2001/XMLSchema" =&gt; "__redirected.__SchemaFactory",
            "javax.xml.xpath.XPathFactory:http://java.sun.com/jaxp/xpath/dom" =&gt; "__redirected.__XPathFactory",
            "jboss.home.dir" =&gt; "/opt/jboss-eap-6.2",
            "jboss.host.name" =&gt; "localhost",
            "jboss.modules.dir" =&gt; "/opt/jboss-eap-6.2/modules",
            "jboss.modules.metrics" =&gt; "true",
            "jboss.modules.system.pkgs" =&gt; "org.jboss.byteman",
            "jboss.node.name" =&gt; "localhost",
            "jboss.qualified.host.name" =&gt; "localhost",
            "jboss.server.base.dir" =&gt; "/opt/jboss-eap-6.2/standalone",
            "jboss.server.config.dir" =&gt; "/opt/jboss-eap-6.2/standalone/configuration",
            "jboss.server.data.dir" =&gt; "/opt/jboss-eap-6.2/standalone/data",
            "jboss.server.deploy.dir" =&gt; "/opt/jboss-eap-6.2/standalone/data/content",
            "jboss.server.log.dir" =&gt; "/opt/jboss-eap-6.2/standalone/log",
            "jboss.server.name" =&gt; "localhost",
            "jboss.server.persist.config" =&gt; "true",
            "jboss.server.temp.dir" =&gt; "/opt/jboss-eap-6.2/standalone/tmp",
            "line.separator" =&gt; "
",
            "logging.configuration" =&gt; "file:/opt/jboss-eap-6.2/standalone/configuration/logging.properties",
            "module.path" =&gt; "/opt/jboss-eap-6.2/modules",
            "org.apache.tomcat.util.ENABLE_MODELER" =&gt; "true",
            "org.apache.xml.security.ignoreLineBreaks" =&gt; "true",
            "org.jboss.boot.log.file" =&gt; "/opt/jboss-eap-6.2/standalone/log/server.log",
            "org.jboss.resolver.warning" =&gt; "true",
            "org.jboss.security.context.ThreadLocal" =&gt; "true",
            "org.xml.sax.driver" =&gt; "__redirected.__XMLReaderFactory",
            "os.arch" =&gt; "amd64",
            "os.name" =&gt; "Linux",
            "os.version" =&gt; "2.6.32-358.el6.x86_64",
            "path.separator" =&gt; ":",
            "sun.arch.data.model" =&gt; "64",
            "sun.boot.class.path" =&gt; "/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.65.x86_64/jre/lib/resources.jar:/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.65.x86_64/jre/lib/rt.jar:/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.65.x86_64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.65.x86_64/jre/lib/jsse.jar:/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.65.x86_64/jre/lib/jce.jar:/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.65.x86_64/jre/lib/charsets.jar:/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.65.x86_64/jre/lib/rhino.jar:/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.65.x86_64/jre/lib/jfr.jar:/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.65.x86_64/jre/classes",
            "sun.boot.library.path" =&gt; "/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.65.x86_64/jre/lib/amd64",
            "sun.cpu.endian" =&gt; "little",
            "sun.cpu.isalist" =&gt; "",
            "sun.io.unicode.encoding" =&gt; "UnicodeLittle",
            "sun.java.command" =&gt; "/opt/jboss-eap-6.2/jboss-modules.jar -mp /opt/jboss-eap-6.2/modules -jaxpmodule javax.xml.jaxp-provider org.jboss.as.standalone -Djboss.home.dir=/opt/jboss-eap-6.2 -Djboss.server.base.dir=/opt/jboss-eap-6.2/standalone",
            "sun.java.launcher" =&gt; "SUN_STANDARD",
            "sun.jnu.encoding" =&gt; "UTF-8",
            "sun.management.compiler" =&gt; "HotSpot 64-Bit Tiered Compilers",
            "sun.os.patch.level" =&gt; "unknown",
            "user.country" =&gt; "JP",
            "user.dir" =&gt; "/root",
            "user.home" =&gt; "/root",
            "user.language" =&gt; "ja",
            "user.name" =&gt; "root",
            "user.timezone" =&gt; "Asia/Tokyo"
        },
        "uptime" =&gt; 11324677L,
        "object-name" =&gt; "java.lang:type=Runtime"
    }
}
[standalone@localhost:9999 /]
</pre>
</div>
</div>

<div id="outline-container-sec-1-7" class="outline-3">
<h3 id="sec-1-7"><span class="section-number-3">1.7</span> EJBスレッドプールの確認</h3>
<div class="outline-text-3" id="text-1-7">
<pre class="example">
[standalone@localhost:9999 /] /subsystem=ejb3/thread-pool=default:read-resource(include-runtime=true, recursive=true)
{
    "outcome" =&gt; "success",
    "result" =&gt; {
        "active-count" =&gt; 0,
        "completed-task-count" =&gt; 0L,
        "current-thread-count" =&gt; 0,
        "keepalive-time" =&gt; {
            "time" =&gt; 100L,
            "unit" =&gt; "MILLISECONDS"
        },
        "largest-thread-count" =&gt; 0,
        "max-threads" =&gt; 10,
        "name" =&gt; "default",
        "queue-size" =&gt; 0,
        "rejected-count" =&gt; 0,
        "task-count" =&gt; 0L,
        "thread-factory" =&gt; undefined
    }
}
[standalone@localhost:9999 /]
</pre>
</div>
</div>

<div id="outline-container-sec-1-8" class="outline-3">
<h3 id="sec-1-8"><span class="section-number-3">1.8</span> トランザクション情報の確認</h3>
<div class="outline-text-3" id="text-1-8">
<pre class="example">
[standalone@localhost:9999 /] /subsystem=transactions:read-resource(include-runtime=true, recursive=true)
{
    "outcome" =&gt; "success",
    "result" =&gt; {
        "default-timeout" =&gt; 300,
        "enable-statistics" =&gt; false,
        "enable-tsm-status" =&gt; false,
        "hornetq-store-enable-async-io" =&gt; false,
        "jdbc-action-store-drop-table" =&gt; false,
        "jdbc-action-store-table-prefix" =&gt; undefined,
        "jdbc-communication-store-drop-table" =&gt; false,
        "jdbc-communication-store-table-prefix" =&gt; undefined,
        "jdbc-state-store-drop-table" =&gt; false,
        "jdbc-state-store-table-prefix" =&gt; undefined,
        "jdbc-store-datasource" =&gt; undefined,
        "jts" =&gt; false,
        "node-identifier" =&gt; "1",
        "number-of-aborted-transactions" =&gt; 0L,
        "number-of-application-rollbacks" =&gt; 0L,
        "number-of-committed-transactions" =&gt; 0L,
        "number-of-heuristics" =&gt; 0L,
        "number-of-inflight-transactions" =&gt; 0L,
        "number-of-nested-transactions" =&gt; 0L,
        "number-of-resource-rollbacks" =&gt; 0L,
        "number-of-timed-out-transactions" =&gt; 0L,
        "number-of-transactions" =&gt; 0L,
        "object-store-path" =&gt; "tx-object-store",
        "object-store-relative-to" =&gt; "jboss.server.data.dir",
        "path" =&gt; "var",
        "process-id-socket-binding" =&gt; undefined,
        "process-id-socket-max-ports" =&gt; 10,
        "process-id-uuid" =&gt; true,
        "recovery-listener" =&gt; false,
        "relative-to" =&gt; "jboss.server.data.dir",
        "socket-binding" =&gt; "txn-recovery-environment",
        "status-socket-binding" =&gt; "txn-status-manager",
        "use-hornetq-store" =&gt; false,
        "use-jdbc-store" =&gt; false,
        "log-store" =&gt; {"log-store" =&gt; {
            "type" =&gt; "default",
            "transactions" =&gt; undefined
        }}
    }
}
[standalone@localhost:9999 /]
</pre>
</div>
</div>
</div>


<div id="outline-container-sec-2" class="outline-2">
<h2 id="sec-2"><span class="section-number-2">2</span> <code>remoting-jmx</code> 方式</h2>
<div class="outline-text-2" id="text-2">
<p>
JBossAS 7.x のJMX情報を参照するには <code>$JBOSS_HOME/bin/jconsole.sh</code> のGUIツールを利用す
るのが一般的だと思います。コマンドから参照するにはJDKのJMX APIを用いて自前のコードで
頑張るか。 <code>jmxterm</code> といゆツールを使うかです。ここでは後者について検証しました。
<code>jmxterm</code> でlocalhostのJBossASのJMX情報参照はOKで、リモートからは認証処理で失敗した。
</p>
</div>

<div id="outline-container-sec-2-1" class="outline-3">
<h3 id="sec-2-1"><span class="section-number-3">2.1</span> JBossAS接続用のjmxterm起動スクリプト</h3>
<div class="outline-text-3" id="text-2-1">
<p>
<code>jmxterm</code> は <a href="http://wiki.cyclopsgroup.org/jmxterm">ここ</a> からダウンロードできる。
</p>
<pre class="example">
#!/bin/sh

EAP_HOME=/opt/jboss-eap-6.2
HOST_URL=service:jmx:remoting-jmx://localhost:9999

java -classpath `dirname $0`/jmxterm-1.0-alpha-4-uber.jar:$EAP_HOME/bin/client/jboss-cli-client.jar org.codehaus.classworlds.uberjar.boot.Bootstrapper -l "$HOST_URL"
</pre>

<p>
起動時のイメージ
</p>
<pre class="example">
# ./jmxterm.sh
9 30, 2014 12:42:18 午後 org.xnio.Xnio &lt;clinit&gt;
INFO: XNIO Version 3.0.7.GA-redhat-1
9 30, 2014 12:42:18 午後 org.xnio.nio.NioXnio &lt;clinit&gt;
INFO: XNIO NIO Implementation Version 3.0.7.GA-redhat-1
9 30, 2014 12:42:18 午後 org.jboss.remoting3.EndpointImpl &lt;clinit&gt;
INFO: JBoss Remoting version 3.2.18.GA-redhat-1
Welcome to JMX terminal. Type "help" for available commands.
$&gt;
</pre>

<p>
リモートから接続する場合、認証でエラー
</p>
<pre class="example">
$ ./jmxterm.sh
9 30, 2014 12:43:31 午後 org.xnio.Xnio &lt;clinit&gt;
INFO: XNIO Version 3.0.7.GA-redhat-1
9 30, 2014 12:43:31 午後 org.xnio.nio.NioXnio &lt;clinit&gt;
INFO: XNIO NIO Implementation Version 3.0.7.GA-redhat-1
9 30, 2014 12:43:31 午後 org.jboss.remoting3.EndpointImpl &lt;clinit&gt;
INFO: JBoss Remoting version 3.2.18.GA-redhat-1
9 30, 2014 12:43:34 午後 org.jboss.remoting3.remote.RemoteConnection handleException
ERROR: JBREM000200: Remote connection failed: javax.security.sasl.SaslException: Authentication failed: all available authentication mechanisms failed
---------------------------------------------------
constituent[0]: jar:file:/opt/jmxterm/jmxterm-1.0-alpha-4-uber.jar!/WORLDS-INF/lib/jmxterm.jar
constituent[1]: jar:file:/opt/jmxterm/jmxterm-1.0-alpha-4-uber.jar!/WORLDS-INF/lib/commons-beanutils.jar
constituent[2]: jar:file:/opt/jmxterm/jmxterm-1.0-alpha-4-uber.jar!/WORLDS-INF/lib/commons-cli.jar
constituent[3]: jar:file:/opt/jmxterm/jmxterm-1.0-alpha-4-uber.jar!/WORLDS-INF/lib/commons-collections.jar
constituent[4]: jar:file:/opt/jmxterm/jmxterm-1.0-alpha-4-uber.jar!/WORLDS-INF/lib/commons-lang.jar
constituent[5]: jar:file:/opt/jmxterm/jmxterm-1.0-alpha-4-uber.jar!/WORLDS-INF/lib/commons-logging.jar
constituent[6]: jar:file:/opt/jmxterm/jmxterm-1.0-alpha-4-uber.jar!/WORLDS-INF/lib/commons-io.jar
constituent[7]: jar:file:/opt/jmxterm/jmxterm-1.0-alpha-4-uber.jar!/WORLDS-INF/lib/jcli.jar
constituent[8]: jar:file:/opt/jmxterm/jmxterm-1.0-alpha-4-uber.jar!/WORLDS-INF/lib/jline.jar
---------------------------------------------------
javax.security.sasl.SaslException: Authentication failed: all available authentication mechanisms failed
	at org.jboss.remoting3.remote.ClientConnectionOpenListener$Capabilities.handleEvent(ClientConnectionOpenListener.java:367)
	at org.jboss.remoting3.remote.ClientConnectionOpenListener$Capabilities.handleEvent(ClientConnectionOpenListener.java:229)
	at org.xnio.ChannelListeners.invokeChannelListener(ChannelListeners.java:72)
	at org.xnio.channels.TranslatingSuspendableChannel.handleReadable(TranslatingSuspendableChannel.java:189)
	at org.xnio.channels.TranslatingSuspendableChannel$1.handleEvent(TranslatingSuspendableChannel.java:103)
	at org.xnio.ChannelListeners.invokeChannelListener(ChannelListeners.java:72)
	at org.xnio.channels.TranslatingSuspendableChannel.handleReadable(TranslatingSuspendableChannel.java:189)
	at org.xnio.ssl.JsseConnectedSslStreamChannel.handleReadable(JsseConnectedSslStreamChannel.java:180)
	at org.xnio.channels.TranslatingSuspendableChannel$1.handleEvent(TranslatingSuspendableChannel.java:103)
	at org.xnio.ChannelListeners.invokeChannelListener(ChannelListeners.java:72)
	at org.xnio.nio.NioHandle.run(NioHandle.java:90)
	at org.xnio.nio.WorkerThread.run(WorkerThread.java:187)
	at ...asynchronous invocation...(Unknown Source)
	at org.jboss.remoting3.EndpointImpl.doConnect(EndpointImpl.java:270)
	at org.jboss.remoting3.EndpointImpl.doConnect(EndpointImpl.java:251)
	at org.jboss.remoting3.EndpointImpl.connect(EndpointImpl.java:349)
	at org.jboss.remoting3.EndpointImpl.connect(EndpointImpl.java:333)
	at org.jboss.remotingjmx.RemotingConnector.internalRemotingConnect(RemotingConnector.java:227)
	at org.jboss.remotingjmx.RemotingConnector.internalConnect(RemotingConnector.java:148)
	at org.jboss.remotingjmx.RemotingConnector.connect(RemotingConnector.java:99)
	at javax.management.remote.JMXConnectorFactory.connect(JMXConnectorFactory.java:270)
	at org.cyclopsgroup.jmxterm.cc.SessionImpl.doConnect(SessionImpl.java:85)
	at org.cyclopsgroup.jmxterm.cc.SessionImpl.connect(SessionImpl.java:49)
	at org.cyclopsgroup.jmxterm.cc.CommandCenter.connect(CommandCenter.java:110)
	at org.cyclopsgroup.jmxterm.boot.CliMain.execute(CliMain.java:139)
	at org.cyclopsgroup.jmxterm.boot.CliMain.main(CliMain.java:48)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.codehaus.classworlds.Launcher.launchStandard(Launcher.java:353)
	at org.codehaus.classworlds.Launcher.launch(Launcher.java:264)
	at org.codehaus.classworlds.Launcher.mainWithExitCode(Launcher.java:430)
	at org.codehaus.classworlds.Launcher.main(Launcher.java:375)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.codehaus.classworlds.uberjar.boot.Bootstrapper.bootstrap(Bootstrapper.java:209)
	at org.codehaus.classworlds.uberjar.boot.Bootstrapper.main(Bootstrapper.java:116)
$
</pre>
</div>
</div>

<div id="outline-container-sec-2-2" class="outline-3">
<h3 id="sec-2-2"><span class="section-number-3">2.2</span> jmxterm基本的な使い方</h3>
<div class="outline-text-3" id="text-2-2">
<pre class="example">
★ドメインリストの取得
$&gt;domains
#following domains are available
Catalina
JMImplementation
com.sun.management
java.lang
java.nio
java.util.logging
jboss.as
jboss.as.expr
jboss.jta
jboss.modules
jboss.msc
jboss.remoting.handler
jboss.web
jboss.ws

★特定ドメインのbeanリストの取得
$&gt;beans -d jboss.web
#domain = jboss.web:
jboss.web:J2EEApplication=none,J2EEServer=none,WebModule=//default-host/,j2eeType=Servlet,name=WelcomeContextConsoleServlet
jboss.web:J2EEApplication=none,J2EEServer=none,j2eeType=WebModule,name=//default-host/
jboss.web:J2EEApplication=none,J2EEServer=none,j2eeType=WebModule,name=//default-host/sss
jboss.web:address="/0.0.0.0",port=8080,type=Connector
jboss.web:address="/0.0.0.0",port=8080,type=ProtocolHandler
jboss.web:host=default-host,name=ErrorReportValve,type=Valve
jboss.web:host=default-host,name=SecurityContextAssociationValve,path=/sss,type=Valve
jboss.web:host=default-host,name=StandardContextValve,path=/,type=Valve
jboss.web:host=default-host,name=StandardContextValve,path=/sss,type=Valve
jboss.web:host=default-host,name=StandardHostValve,type=Valve
jboss.web:host=default-host,path=/,type=Cache
jboss.web:host=default-host,path=/,type=Manager
jboss.web:host=default-host,path=/sss,realmPath=/realm0,type=Realm
jboss.web:host=default-host,path=/sss,type=Cache
jboss.web:host=default-host,path=/sss,type=Manager
jboss.web:host=default-host,type=Host
jboss.web:name=StandardEngineValve,type=Valve
jboss.web:name=http--0.0.0.0-8080,type=GlobalRequestProcessor
jboss.web:name=http--0.0.0.0-8080,type=ThreadPool
jboss.web:serviceName=jboss.web,type=Service
jboss.web:type=Engine

★beanの中身を参照する
★ -b の後ろはbeansコマンドで出力した文字列を指定する。
★ *  全部の属性とメソッドを出力する
★ bean所属のドメインを指定する
$&gt;get -b jboss.web:address="/0.0.0.0",port=8080,type=Connector * -d jboss.web
#mbean = jboss.web:address="/0.0.0.0",port=8080,type=Connector:
port = 8080;

protocol = HTTP/1.1;

useIPVHosts = false;

objectName = jboss.web:type=Connector,port=8080,address="/0.0.0.0";

redirectPort = 443;

........
</pre>
</div>
</div>

<div id="outline-container-sec-2-3" class="outline-3">
<h3 id="sec-2-3"><span class="section-number-3">2.3</span> Web系ワーカスレッドの情報取得</h3>
<div class="outline-text-3" id="text-2-3">
<font color="red"><strong>
<p>
これはJMX方式しか取れないぽい。
</p>
</strong></font>
<p>
Web系ワーカスレッドの実装はtomcatそのものが取り入れられているぽいで、JBossASに
<code>-Dorg.apache.tomcat.util.ENABLE_MODELER=true</code> オプションを付けて起動する必要がある。
</p>

<pre class="example">
$&gt;get -b jboss.web:address="/0.0.0.0",port=8080,type=Connector * -d jboss.web
#mbean = jboss.web:address="/0.0.0.0",port=8080,type=Connector:
port = 8080;

protocol = HTTP/1.1;

useIPVHosts = false;

objectName = jboss.web:type=Connector,port=8080,address="/0.0.0.0";

redirectPort = 443;

secure = false;

proxyName = null;

enableLookups = false;

maxPostSize = 2097152;

proxyPort = 0;

available = true;

modelerType = org.apache.catalina.connector.Connector;

info = org.apache.catalina.connector.Connector/2.1;

bufferSize = 2048;

scheme = http;

xpoweredBy = false;

allowTrace = false;

domain = jboss.web;

useBodyEncodingForURI = false;

controller = jboss.web:type=Connector,port=8080,address="/0.0.0.0";

uRIEncoding = null;

maxSavePostSize = 4096;

protocolHandlerClassName = org.apache.coyote.http11.Http11Protocol;

$&gt;
</pre>
</div>
</div>

<div id="outline-container-sec-2-4" class="outline-3">
<h3 id="sec-2-4"><span class="section-number-3">2.4</span> リクエストプロセッサーの稼働状況</h3>
<div class="outline-text-3" id="text-2-4">
<pre class="example">
$&gt;get -b jboss.web:name=http--0.0.0.0-8080,type=GlobalRequestProcessor *
#mbean = jboss.web:name=http--0.0.0.0-8080,type=GlobalRequestProcessor:
bytesSent = 0;

bytesReceived = 0;

processingTime = 0;

errorCount = 0;

maxTime = 0;

requestCount = 0;

modelerType = org.apache.coyote.RequestGroupInfo;

$&gt;
</pre>
</div>
</div>
</div>


<div id="outline-container-sec-3" class="outline-2">
<h2 id="sec-3"><span class="section-number-2">3</span> <code>RESTful</code> 方式</h2>
<div class="outline-text-2" id="text-3">
<pre class="example">
$ curl --digest http://localhost:9990/management?json.pretty -u admin
Enter host password for user 'admin':
{
    "management-major-version" : 1,
    "management-micro-version" : 0,
    "management-minor-version" : 5,
    "name" : "localhost",
    "namespaces" : [],
    "product-name" : "EAP",
    "product-version" : "6.2.4.GA",
    "profile-name" : null,
    "release-codename" : "Janus",
    "release-version" : "7.3.4.Final-redhat-1",
    "schema-locations" : [],
    "core-service" : {
        "management" : null,
        "service-container" : null,
        "module-loading" : null,
        "server-environment" : null,
        "platform-mbean" : null,
        "patching" : null
    },
</pre>
</div>
</div>

<div id="outline-container-sec-4" class="outline-2">
<h2 id="sec-4"><span class="section-number-2">4</span> 参考情報</h2>
<div class="outline-text-2" id="text-4">
<ul class="org-ul">
<li><a href="https://docs.jboss.org/author/display/AS71/CLI+Recipes">CLI Recipes</a>
</li>
<li><a href="http://zorka.io/install/jboss7.html">JBoss 7.x and Wildfly 8.0 monitoring</a>
</li>
<li><a href="http://www.denniskanbier.nl/blog/monitoring/jboss-eap-6-monitoring-using-remoting-jmx-and-zabbix/">JBoss EAP 6 monitoring using remoting-jmx and Zabbix</a>
</li>
<li><a href="http://blog.akquinet.de/2014/09/18/jboss-eap-wildfly-management-interfaces-and-clients/">JBoss EAP / Wildfly Management Interfaces and Clients</a>
</li>
</ul>
</div>
</div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[レシピ]Kerbroseパスワード変更ためのPAM設定]]></title>
    <link href="http://luozengbin.github.io/blog/2014-08-16-%5B%E3%83%AC%E3%82%B7%E3%83%94%5Dkerbrose%E3%83%91%E3%82%B9%E3%83%AF%E3%83%BC%E3%83%89%E5%A4%89%E6%9B%B4%E3%81%9F%E3%82%81%E3%81%AEpam%E8%A8%AD%E5%AE%9A.html"/>
    <updated>2014-08-16T00:00:00+09:00</updated>
    <id>http://luozengbin.github.io/blog/[レシピ]kerbroseパスワード変更ためのpam設定</id>
    <content type="html"><![CDATA[<p>
前の記事で <code>pam_krb5</code> モジュールでKerbrose認証を実現しました。ここで <code>passwd</code> コマン
ドラインでKDCに登録されたプリンシバル鍵のパスワードを変更する方法を紹介します。
</p>

<p>
<!-- more -->
</p>

<p>
<code>passwd</code> コマンド実行時に裏で動いているのはPAMモジュールですので、
<code>/etc/pam.d./passwd</code> に <code>pam_kbr5</code> モジュールを適用するようにすれば、パスワード変更時
に自動的にKDCのデータベースに反映されます。
</p>

<p>
<code>/etc/pam.d./passwd</code>
</p>
<pre class="example">
#%PAM-1.0
password        requisite       pam_cracklib.so retry=3 difok=1 minlen=8 dcredit=-1
password        sufficient      pam_unix.so sha512 shadow nullok use_authtok
password        sufficient      pam_krb5.so   ★ここです
password        required        pam_deny.so
</pre>

<p>
パスワード変更を実行してみましょう。
</p>
<pre class="example">
[kbr_u01@mimi ~]$ passwd
Kerberos 5 パスワード:                     ★現在のパスワードが聞かれる
新しいパスワード:
新しいパスワードを再入力してください:
passwd: パスワードは正しく更新されました
[kbr_u01@mimi ~]$
</pre>

<p>
パスワード変更時のシスログ
</p>
<pre class="example">
Aug 16 19:01:38 mimi passwd[15359]: pam_unix(passwd:chauthtok): user "kbr_u01" does not exist in /etc/passwd
Aug 16 19:01:38 mimi passwd[15359]: pam_krb5[15359]: password changed for kbr_u01@JIZAI-DOMAIN.JP
Aug 16 19:01:38 mimi passwd[15359]: pam_krb5[15359]: TGT verified using key for 'host/mimi.jizai-domain.jp@JIZAI-DOMAIN.JP'
</pre>

<p>
KDCサーバ側のログ
</p>
<pre class="example">
2014-08-16T19:34:36+09:00 pipi local5 info krb5kdc[28554]:  AS_REQ (6 etypes {18 17 16 23 25 26}) 192.168.100.10: ISSUE: authtime 1408185276, etypes {rep=18 tkt=18 ses=18}, kbr_u01@JIZAI-DOMAIN.JP for kadmin/changepw@JIZAI-DOMAIN.JP
2014-08-16T19:34:36+09:00 pipi local5 info krb5kdc[28554]:  AS_REQ (6 etypes {18 17 16 23 25 26}) 192.168.100.10: ISSUE: authtime 1408185276, etypes {rep=18 tkt=18 ses=18}, kbr_u01@JIZAI-DOMAIN.JP for kadmin/changepw@JIZAI-DOMAIN.JP

2014-08-16T19:34:59+09:00 pipi local5 info krb5kdc[28554]:  AS_REQ (6 etypes {18 17 16 23 25 26}) 192.168.100.10: ISSUE: authtime 1408185299, etypes {rep=18 tkt=18 ses=18}, kbr_u01@JIZAI-DOMAIN.JP for krbtgt/JIZAI-DOMAIN.JP@JIZAI-DOMAIN.JP
2014-08-16T19:34:59+09:00 pipi local5 info krb5kdc[28554]:  AS_REQ (6 etypes {18 17 16 23 25 26}) 192.168.100.10: ISSUE: authtime 1408185299, etypes {rep=18 tkt=18 ses=18}, kbr_u01@JIZAI-DOMAIN.JP for krbtgt/JIZAI-DOMAIN.JP@JIZAI-DOMAIN.JP
2014-08-16T19:34:59+09:00 pipi local5 info krb5kdc[28554]:  TGS_REQ (6 etypes {18 17 16 23 25 26}) 192.168.100.10: ISSUE: authtime 1408185299, etypes {rep=18 tkt=18 ses=18}, kbr_u01@JIZAI-DOMAIN.JP for host/mimi.jizai-domain.jp@JIZAI-DOMAIN.JP
2014-08-16T19:34:59+09:00 pipi local5 info krb5kdc[28554]:  TGS_REQ (6 etypes {18 17 16 23 25 26}) 192.168.100.10: ISSUE: authtime 1408185299, etypes {rep=18 tkt=18 ses=18}, kbr_u01@JIZAI-DOMAIN.JP for host/mimi.jizai-domain.jp@JIZAI-DOMAIN.JP
</pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[レシピ]Kerberos認証環境の構築]]></title>
    <link href="http://luozengbin.github.io/blog/2014-08-15-%5B%E3%83%AC%E3%82%B7%E3%83%94%5Dkerberos%E8%AA%8D%E8%A8%BC%E7%92%B0%E5%A2%83%E3%81%AE%E6%A7%8B%E7%AF%89.html"/>
    <updated>2014-08-15T00:00:00+09:00</updated>
    <id>http://luozengbin.github.io/blog/[レシピ]kerberos認証環境の構築</id>
    <content type="html"><![CDATA[<div id="table-of-contents">
<h2>Table of Contents</h2>
<div id="text-table-of-contents">
<ul>
<li><a href="#sec-1">1. 時刻を合わせる</a>
<ul>
<li><a href="#sec-1-1">1.1. NTPサービス構築手順</a></li>
<li><a href="#sec-1-2">1.2. NTPクライアントの設定</a></li>
</ul>
</li>
<li><a href="#sec-2">2. Kerbroseサービスの構築手順</a></li>
<li><a href="#sec-3">3. KDCにプリンシバルの登録</a></li>
<li><a href="#sec-4">4. KDCデータベースのバックアップ</a></li>
<li><a href="#sec-5">5. Kerberos認証の流れを確認する</a></li>
<li><a href="#sec-6">6. LDAP+pam_krbでLinuxログイン認証</a></li>
<li><a href="#sec-7">7. 参考情報</a></li>
</ul>
</div>
</div>
<p>
夏休み中にKerbrose認証環境の構築復習を行いました。ここでメモしておきます。
<!-- more -->
</p>

<div id="outline-container-sec-1" class="outline-2">
<h2 id="sec-1"><span class="section-number-2">1</span> 時刻を合わせる</h2>
<div class="outline-text-2" id="text-1">
<p>
kerbroseチケットの有効期限及び、クライアントマシンタイムスタンプチェックをより正確に
働けるようにするため。同一レルムのマシンの時刻を同期化しておきましょう。
</p>

<p>
KDCサーバに <code>ntp</code> サービスを立ち上げて、他のマシンからKDCサーバの <code>ntp</code> サービスを使
用するようにする。
</p>
</div>

<div id="outline-container-sec-1-1" class="outline-3">
<h3 id="sec-1-1"><span class="section-number-3">1.1</span> NTPサービス構築手順</h3>
<div class="outline-text-3" id="text-1-1">
<p>
<code>sudo pacman -S ntp</code> でntpパッケージをインストールする。インストールされたファイル一
覧は以下となります。
</p>

<pre class="example">
[akira@pipi ~]$ sudo pacman -Ql ntp
ntp /etc/
ntp /etc/ntp.conf                       ★NTPサービス設定ファイル
ntp /usr/
ntp /usr/bin/
ntp /usr/bin/calc_tickadj
ntp /usr/bin/ntp-keygen
ntp /usr/bin/ntp-wait
ntp /usr/bin/ntpd
ntp /usr/bin/ntpdate
ntp /usr/bin/ntpdc
ntp /usr/bin/ntpq
ntp /usr/bin/ntptime
ntp /usr/bin/ntptrace
ntp /usr/bin/sntp
ntp /usr/bin/tickadj
ntp /usr/lib/
ntp /usr/lib/systemd/
ntp /usr/lib/systemd/ntp-units.d/
ntp /usr/lib/systemd/ntp-units.d/50-ntp.list
ntp /usr/lib/systemd/system/
ntp /usr/lib/systemd/system/ntpd.service     ★ntpdデーモン起動用サービス定義ファイル
ntp /usr/lib/systemd/system/ntpdate.service  ★ntpdプロセスで時刻を同期化するOneShotサービス定義ファイル
ntp /usr/share/
ntp /usr/share/doc/
...中略...
</pre>

<p>
<code>/etc/ntp.conf</code> ファイルサンプル
</p>
<pre class="example">
# With the default settings below, ntpd will only synchronize your clock.
#
# For details, see:
# - the ntp.conf man page
# - http://support.ntp.org/bin/view/Support/GettingStarted
# - https://wiki.archlinux.org/index.php/Network_Time_Protocol_daemon

# Associate to public NTP pool servers; see http://www.pool.ntp.org/
server 0.jp.pool.ntp.org iburst             ★物理的に近いサーバープールを使用する
server 1.jp.pool.ntp.org iburst
server 2.jp.pool.ntp.org iburst
server 3.jp.pool.ntp.org iburst

# ネットが繋がらない時に自身を NTP サーバーに変身する
server 127.127.1.1                          ★LAN内のマシンにntpサービスを継続提供するための設定
fudge  127.127.1.1 stratum 12

# Only allow read-only access from localhost
restrict default noquery nopeer
restrict 127.0.0.1
restrict ::1

# Location of drift file
driftfile /var/lib/ntp/ntp.drift

# Location of lof file
logfile /var/log/ntp.log                     ★ログ出力先の指定

# NOTE: If you run dhcpcd and have lines like 'restrict' and 'fudge' appearing
# here, be sure to add '-Y -N' to the dhcpcd_ethX variables in /etc/conf.d/net
</pre>

<p>
サービスを有効化して起動する。
</p>
<pre class="example">
$ sudo systemctl enable ntpd.service
Created symlink from /etc/systemd/system/multi-user.target.wants/ntpd.service to /usr/lib/systemd/system/ntpd.service.
$ sudo systemctl start ntpd.service
</pre>
</div>
</div>

<div id="outline-container-sec-1-2" class="outline-3">
<h3 id="sec-1-2"><span class="section-number-3">1.2</span> NTPクライアントの設定</h3>
<div class="outline-text-3" id="text-1-2">
<p>
ntpクライアントは <code>ntp</code> パッケージの <code>ntpdate.service</code> サービスを利用してマシン起動時
にLAN内のntpサービスと時刻同期化を行います。
</p>

<p>
LAN内のntpサービスを利用するために <code>/etc/ntp.conf</code> にntpサーバのURLをLAN内のntpサー
バに指すように設定を行う。
</p>
<pre class="example">
[akira@mimi ~]$ cat /etc/ntp.conf
# LAN内のntpサービスを利用する
server 192.168.100.4

# Only allow read-only access from localhost
restrict default noquery nopeer
restrict 127.0.0.1
restrict ::1

# Location of drift file
driftfile /var/lib/ntp/ntp.drift
</pre>

<p>
<code>ntpdate.service</code> を起動する
</p>

<pre class="example">
$ sudo systemctl enable ntpdate.service 
Created symlink from /etc/systemd/system/multi-user.target.wants/ntpdate.service to /usr/lib/systemd/system/ntpdate.service.
$ sudo systemctl start ntpdate.service
</pre>
</div>
</div>
</div>

<div id="outline-container-sec-2" class="outline-2">
<h2 id="sec-2"><span class="section-number-2">2</span> Kerbroseサービスの構築手順</h2>
<div class="outline-text-2" id="text-2">
<p>
MITの <a href="http://web.mit.edu/kerberos/">KerbroseV</a> を用いて構築します。まず、 <code>pacman</code> で <code>kbr5</code> パッケージをインストー
ルしましょう。
</p>
<pre class="example">
$ sudo pacman -S krb5
warning: krb5-1.12.1-1 is up to date -- reinstalling
resolving dependencies...
looking for inter-conflicts...

Packages (1): krb5-1.12.1-1

Total Installed Size:   3.60 MiB
Net Upgrade Size:       0.00 MiB

:: Proceed with installation? [Y/n] 
(1/1) checking keys in keyring                                                                 [########################################################] 100%
(1/1) checking package integrity                                                               [########################################################] 100%
(1/1) loading package files                                                                    [########################################################] 100%
(1/1) checking for file conflicts                                                              [########################################################] 100%
(1/1) checking available disk space                                                            [########################################################] 100%
(1/1) reinstalling krb5                                                                        [########################################################] 100%
synchronizing filesystem...
$
</pre>

<p>
kbr5パッケージの構成を以下のようになります、主要ファイルの説明は <code>★</code> マークにて解説
する。
</p>
<pre class="example">
$ sudo pacman -Ql krb5
krb5 /etc/
krb5 /etc/krb5.conf                  ★Kerbrose認証システム参加するための設定ファイル
krb5 /usr/
krb5 /usr/bin/
krb5 /usr/bin/gss-client
krb5 /usr/bin/gss-server
krb5 /usr/bin/k5srvutil
krb5 /usr/bin/kadmin                 ★Kerbroseの認証データをメンテナンスするためのツール
krb5 /usr/bin/kadmin.local           ★kadminと同じが、ローカルのrootユーザでパスワード入力なしで利用可能
krb5 /usr/bin/kadmind                ★kadminデーモンプロセス、tcp/udpで同じレルムに属するクライアントに管理サービスを提供する
krb5 /usr/bin/kdb5_ldap_util
krb5 /usr/bin/kdb5_util              ★KDCデータベースメンテナンス用のツール
krb5 /usr/bin/kdestroy               ★ローカルマシンに取得済みのKerbroseチケットを破棄するためのツール
krb5 /usr/bin/kinit                  ★TGTチケット取得用
krb5 /usr/bin/klist                  ★取得済みチケット一覧表示用
krb5 /usr/bin/kpasswd                ★プリンシバルの認証パスワード変更用
krb5 /usr/bin/kprop
krb5 /usr/bin/kpropd
krb5 /usr/bin/kproplog
krb5 /usr/bin/krb5-config
krb5 /usr/bin/krb5-send-pr
krb5 /usr/bin/krb5kdc
krb5 /usr/bin/ksu
krb5 /usr/bin/kswitch
krb5 /usr/bin/ktutil
krb5 /usr/bin/kvno
krb5 /usr/bin/sclient
krb5 /usr/bin/sim_client
krb5 /usr/bin/sim_server
krb5 /usr/bin/sserver
krb5 /usr/bin/uuclient
krb5 /usr/bin/uuserver
krb5 /usr/include/
krb5 /usr/include/gssapi.h
krb5 /usr/include/gssapi/
krb5 /usr/include/gssapi/gssapi.h
krb5 /usr/include/gssapi/gssapi_ext.h
krb5 /usr/include/gssapi/gssapi_generic.h
krb5 /usr/include/gssapi/gssapi_krb5.h
krb5 /usr/include/gssapi/mechglue.h
krb5 /usr/include/gssrpc/
krb5 /usr/include/gssrpc/auth.h
krb5 /usr/include/gssrpc/auth_gss.h
krb5 /usr/include/gssrpc/auth_gssapi.h
krb5 /usr/include/gssrpc/auth_unix.h
krb5 /usr/include/gssrpc/clnt.h
krb5 /usr/include/gssrpc/netdb.h
krb5 /usr/include/gssrpc/pmap_clnt.h
krb5 /usr/include/gssrpc/pmap_prot.h
krb5 /usr/include/gssrpc/pmap_rmt.h
krb5 /usr/include/gssrpc/rename.h
krb5 /usr/include/gssrpc/rpc.h
krb5 /usr/include/gssrpc/rpc_msg.h
krb5 /usr/include/gssrpc/svc.h
krb5 /usr/include/gssrpc/svc_auth.h
krb5 /usr/include/gssrpc/types.h
krb5 /usr/include/gssrpc/xdr.h
krb5 /usr/include/kadm5/
krb5 /usr/include/kadm5/admin.h
krb5 /usr/include/kadm5/chpass_util_strings.h
krb5 /usr/include/kadm5/kadm_err.h
krb5 /usr/include/kdb.h
krb5 /usr/include/krad.h
krb5 /usr/include/krb5.h
krb5 /usr/include/krb5/
krb5 /usr/include/krb5/ccselect_plugin.h
krb5 /usr/include/krb5/clpreauth_plugin.h
krb5 /usr/include/krb5/hostrealm_plugin.h
krb5 /usr/include/krb5/kadm5_hook_plugin.h
krb5 /usr/include/krb5/kdcpreauth_plugin.h
krb5 /usr/include/krb5/krb5.h
krb5 /usr/include/krb5/localauth_plugin.h
krb5 /usr/include/krb5/locate_plugin.h
krb5 /usr/include/krb5/plugin.h
krb5 /usr/include/krb5/preauth_plugin.h
krb5 /usr/include/krb5/pwqual_plugin.h
krb5 /usr/include/profile.h
krb5 /usr/include/verto-module.h
krb5 /usr/include/verto.h
krb5 /usr/lib/
krb5 /usr/lib/krb5/
krb5 /usr/lib/krb5/plugins/
krb5 /usr/lib/krb5/plugins/kdb/
krb5 /usr/lib/krb5/plugins/kdb/db2.so
krb5 /usr/lib/krb5/plugins/kdb/kldap.so
krb5 /usr/lib/krb5/plugins/preauth/
krb5 /usr/lib/krb5/plugins/preauth/otp.so
krb5 /usr/lib/krb5/plugins/preauth/pkinit.so
krb5 /usr/lib/libgssapi_krb5.so
krb5 /usr/lib/libgssapi_krb5.so.2
krb5 /usr/lib/libgssapi_krb5.so.2.2
krb5 /usr/lib/libgssrpc.so
krb5 /usr/lib/libgssrpc.so.4
krb5 /usr/lib/libgssrpc.so.4.2
krb5 /usr/lib/libk5crypto.so
krb5 /usr/lib/libk5crypto.so.3
krb5 /usr/lib/libk5crypto.so.3.1
krb5 /usr/lib/libkadm5clnt.so
krb5 /usr/lib/libkadm5clnt_mit.so
krb5 /usr/lib/libkadm5clnt_mit.so.9
krb5 /usr/lib/libkadm5clnt_mit.so.9.0
krb5 /usr/lib/libkadm5srv.so
krb5 /usr/lib/libkadm5srv_mit.so
krb5 /usr/lib/libkadm5srv_mit.so.9
krb5 /usr/lib/libkadm5srv_mit.so.9.0
krb5 /usr/lib/libkdb5.so
krb5 /usr/lib/libkdb5.so.7
krb5 /usr/lib/libkdb5.so.7.0
krb5 /usr/lib/libkdb_ldap.so
krb5 /usr/lib/libkdb_ldap.so.1
krb5 /usr/lib/libkdb_ldap.so.1.0
krb5 /usr/lib/libkrad.so
krb5 /usr/lib/libkrad.so.0
krb5 /usr/lib/libkrad.so.0.0
krb5 /usr/lib/libkrb5.so
krb5 /usr/lib/libkrb5.so.3
krb5 /usr/lib/libkrb5.so.3.3
krb5 /usr/lib/libkrb5support.so
krb5 /usr/lib/libkrb5support.so.0
krb5 /usr/lib/libkrb5support.so.0.1
krb5 /usr/lib/libverto.so
krb5 /usr/lib/libverto.so.0
krb5 /usr/lib/libverto.so.0.0
krb5 /usr/lib/pkgconfig/
krb5 /usr/lib/pkgconfig/gssrpc.pc
krb5 /usr/lib/pkgconfig/kadm-client.pc
krb5 /usr/lib/pkgconfig/kadm-server.pc
krb5 /usr/lib/pkgconfig/kdb.pc
krb5 /usr/lib/pkgconfig/krb5-gssapi.pc
krb5 /usr/lib/pkgconfig/krb5.pc
krb5 /usr/lib/pkgconfig/mit-krb5-gssapi.pc
krb5 /usr/lib/pkgconfig/mit-krb5.pc
krb5 /usr/lib/systemd/
krb5 /usr/lib/systemd/system/
krb5 /usr/lib/systemd/system/krb5-kadmind.service    ★KDCデータ管理サービス
krb5 /usr/lib/systemd/system/krb5-kdc.service        ★KDCサービス
krb5 /usr/lib/systemd/system/krb5-kpropd.service
krb5 /usr/lib/systemd/system/krb5-kpropd.socket
krb5 /usr/lib/systemd/system/krb5-kpropd@.service
krb5 /usr/share/
krb5 /usr/share/aclocal/
krb5 /usr/share/aclocal/ac_check_krb5.m4
krb5 /usr/share/doc/
krb5 /usr/share/doc/krb5/
krb5 /usr/share/doc/krb5/examples/                  ★設定ファイルサンプル
krb5 /usr/share/doc/krb5/examples/kdc.conf
krb5 /usr/share/doc/krb5/examples/kerberos.ldif
krb5 /usr/share/doc/krb5/examples/kerberos.schema
krb5 /usr/share/doc/krb5/examples/krb5.conf
krb5 /usr/share/doc/krb5/examples/services.append
krb5 /usr/share/gnats/
krb5 /usr/share/gnats/mit
krb5 /usr/share/licenses/
krb5 /usr/share/licenses/krb5/
krb5 /usr/share/licenses/krb5/LICENSE
krb5 /usr/share/locale/
krb5 /usr/share/locale/en_US/
krb5 /usr/share/locale/en_US/LC_MESSAGES/
krb5 /usr/share/locale/en_US/LC_MESSAGES/mit-krb5.mo
krb5 /usr/share/man/
krb5 /usr/share/man/man1/
krb5 /usr/share/man/man1/k5srvutil.1.gz
krb5 /usr/share/man/man1/kadmin.1.gz
krb5 /usr/share/man/man1/kdestroy.1.gz
krb5 /usr/share/man/man1/kinit.1.gz
krb5 /usr/share/man/man1/klist.1.gz
krb5 /usr/share/man/man1/kpasswd.1.gz
krb5 /usr/share/man/man1/krb5-config.1.gz
krb5 /usr/share/man/man1/krb5-send-pr.1.gz
krb5 /usr/share/man/man1/ksu.1.gz
krb5 /usr/share/man/man1/kswitch.1.gz
krb5 /usr/share/man/man1/ktutil.1.gz
krb5 /usr/share/man/man1/kvno.1.gz
krb5 /usr/share/man/man1/sclient.1.gz
krb5 /usr/share/man/man5/
krb5 /usr/share/man/man5/.k5identity.5.gz
krb5 /usr/share/man/man5/.k5login.5.gz
krb5 /usr/share/man/man5/k5identity.5.gz
krb5 /usr/share/man/man5/k5login.5.gz
krb5 /usr/share/man/man5/kadm5.acl.5.gz
krb5 /usr/share/man/man5/kdc.conf.5.gz
krb5 /usr/share/man/man5/krb5.conf.5.gz
krb5 /usr/share/man/man8/
krb5 /usr/share/man/man8/kadmin.local.8.gz
krb5 /usr/share/man/man8/kadmind.8.gz
krb5 /usr/share/man/man8/kdb5_ldap_util.8.gz
krb5 /usr/share/man/man8/kdb5_util.8.gz
krb5 /usr/share/man/man8/kprop.8.gz
krb5 /usr/share/man/man8/kpropd.8.gz
krb5 /usr/share/man/man8/kproplog.8.gz
krb5 /usr/share/man/man8/krb5kdc.8.gz
krb5 /usr/share/man/man8/sserver.8.gz
krb5 /var/
krb5 /var/lib/
krb5 /var/lib/krb5kdc/
krb5 /var/lib/krb5kdc/kdc.conf               ★KDC設定ファイル
$
</pre>

<p>
KDCサーバの設定 <code>/var/lib/krb5kdc/kdc.conf</code>
</p>
<pre class="example">
$ cat kdc.conf
[kdcdefaults]
	kdc_ports = 750,88

[realms]
	JIZAI-DOMAIN.JP = {                                       ★レルムの定義
		database_name = /var/lib/krb5kdc/principal            ★KDCデータベースファイルの格納パス
		acl_file = /var/lib/krb5kdc/kadm5.acl                 ★プリンシバルのアクセスコントロール定義
		key_stash_file = /var/lib/krb5kdc/.k5.JIZAI-DOMAIN.JP ★KDCデータベース暗号化パスワードファイル
		kdc_ports = 750,88                                    ★KDCサービスUDPポート
		max_life = 10h 0m 0s                                  ★発行チケットの有効時間
		max_renewable_life = 7d 0h 0m 0s
	}
$
</pre>

<p>
プリンシバルのアクセスコントロールの定義 <code>kadm5.acl</code>
</p>
<pre class="example">
$ cat /var/lib/krb5kdc/kadm5.acl
*/admin@JIZAI-DOMAIN.JP *
$
</pre>


<p>
レルムに参加するホストに対しての設定 <code>/etc/krb5.conf</code>
</p>
<pre class="example">
$ cat /etc/krb5.conf
[libdefaults]
	default_realm = JIZAI-DOMAIN.JP
    dns_lookup_realm = false
	dns_lookup_kdc = false
	ticket_lifetime = 10h
	renew_lifetime = 7d
	forwardable = true                                  ★TGTチケットの転送を可能にする

[realms]
	JIZAI-DOMAIN.JP = {
        kdc = pipi.jizai-domain.jp:88                   ★KDCサーバ接続情報、DNSから自動取得も可能
		admin_server = pipi.jizai-domain.jp:749         ★kadminサービス接続情報
		default_domain = jizai-domain.jp
	}

[domain_realm]
	jizai-domain.jp  = JIZAI-DOMAIN.JP
    .jizai-domain.jp = JIZAI-DOMAIN.JP

[logging]
        kdc = SYSLOG:INFO:LOCAL5
        admin_server = SYSLOG:INFO:LOCAL5
$
</pre>

<p>
KDCサーバでデータベースを初期化する
</p>
<pre class="example">
$ sudo kdb5_util create -s
Loading random data
Initializing database '/var/lib/krb5kdc/principal' for realm 'JIZAI-DOMAIN.JP',
master key name 'K/M@JIZAI-DOMAIN.JP'                           ★データベース暗号化用プリンシバル：K/M@JIZAI-DOMAIN.JP
You will be prompted for the database Master Password.
It is important that you NOT FORGET this password.
Enter KDC database master key:                                  ★データベース暗号化用パスワード
Re-enter KDC database master key to verify: 

$ ls -al /var/lib/krb5kdc                                       ★データベース作成されることを確認する
total 40
drwxr-xr-x  2 root root 4096 Aug 15 15:37 .
drwxr-xr-x 31 root root 4096 Aug 15 00:00 ..
-rw-------  1 root root   76 Aug 15 15:37 .k5.JIZAI-DOMAIN.JP   ★データベースファイルのパスワードファイル
-rw-r--r--  1 root root   26 Aug 15 14:44 kadm5.acl             ★アクセスコントロールファイル
-rw-r--r--  1 root root  288 Aug 15 14:40 kdc.conf
-rw-------  1 root root 8192 Aug 15 15:37 principal             ★データベースファイル本体
-rw-------  1 root root 8192 Aug 15 15:37 principal.kadm5
-rw-------  1 root root    0 Aug 15 15:37 principal.kadm5.lock
-rw-------  1 root root    0 Aug 15 15:37 principal.ok
$
</pre>

<p>
KDCサーバにてrootアカウントでKDC管理用 <code>root/admin</code> プリンシバルを登録する。
</p>
<pre class="example">
$ sudo kadmin.local -p root/admin -q "addprinc root/admin"
Authenticating as principal root/admin with password.
WARNING: no policy specified for root/admin@JIZAI-DOMAIN.JP; defaulting to no policy
Enter password for principal "root/admin@JIZAI-DOMAIN.JP":            ★root/admin プリンシバルのパスワード
Re-enter password for principal "root/admin@JIZAI-DOMAIN.JP": 
Principal "root/admin@JIZAI-DOMAIN.JP" created.                       ★プリンシバルフルネーム：root/admin@JIZAI-DOMAIN.JP
$
</pre>

<p>
KDCサービスを有効化して起動する
</p>
<pre class="example">
$ sudo systemctl enable krb5-kdc.service              ★KDCサービス
Created symlink from /etc/systemd/system/multi-user.target.wants/krb5-kdc.service to /usr/lib/systemd/system/krb5-kdc.service.

$ sudo systemctl enable krb5-kadmind.service          ★KDC管理用サービス
Created symlink from /etc/systemd/system/multi-user.target.wants/krb5-kadmind.service to /usr/lib/systemd/system/krb5-kadmind.service.

$ sudo systemctl start krb5-kdc.service
$ sudo systemctl start krb5-kadmind.service

★ 使用ポート一覧
$ sudo netstat -nutpl | grep k
tcp        0      0 0.0.0.0:749             0.0.0.0:*               LISTEN      29474/kadmind       
tcp        0      0 0.0.0.0:464             0.0.0.0:*               LISTEN      29474/kadmind       
tcp6       0      0 :::749                  :::*                    LISTEN      29474/kadmind       
tcp6       0      0 :::464                  :::*                    LISTEN      29474/kadmind       
udp        0      0 0.0.0.0:464             0.0.0.0:*                           29474/kadmind       
udp        0      0 0.0.0.0:750             0.0.0.0:*                           29470/krb5kdc       
udp        0      0 0.0.0.0:88              0.0.0.0:*                           29470/krb5kdc       
udp6       0      0 fe80::ba27:ebff:fe0:464 :::*                                29474/kadmind       
udp6       0      0 fe80::ba27:ebff:fe0:750 :::*                                29470/krb5kdc       
udp6       0      0 fe80::ba27:ebff:fe0d:88 :::*                                29470/krb5kdc
</pre>

<p>
サービス起動時のログ
</p>
<pre class="example">
$ sudo tail -f /var/log/everything.log

★kdc起動
2014-08-15T15:55:29+09:00 pipi daemon info systemd[1]:  Starting Kerberos 5 KDC...
2014-08-15T15:55:29+09:00 pipi daemon info systemd[1]:  Started Kerberos 5 KDC.
2014-08-15T15:55:30+09:00 pipi local5 info krb5kdc[29867]:  Loaded
2014-08-15T15:55:30+09:00 pipi local5 info krb5kdc[29867]:  Loaded
2014-08-15T15:55:30+09:00 pipi local5 err krb5kdc[29867]:  preauth pkinit failed to initialize: No realms configured correctly for pkinit support
2014-08-15T15:55:30+09:00 pipi local5 err krb5kdc[29867]:  preauth pkinit failed to initialize: No realms configured correctly for pkinit support
2014-08-15T15:55:30+09:00 pipi local5 info krb5kdc[29867]:  setting up network...
2014-08-15T15:55:30+09:00 pipi local5 info krb5kdc[29867]:  setting up network...
2014-08-15T15:55:30+09:00 pipi local5 info krb5kdc[29867]:  listening on fd 7: udp 0.0.0.0.88 (pktinfo)
2014-08-15T15:55:30+09:00 pipi local5 info krb5kdc[29867]:  listening on fd 7: udp 0.0.0.0.88 (pktinfo)
2014-08-15T15:55:30+09:00 pipi local5 info krb5kdc[29867]:  listening on fd 8: udp 0.0.0.0.750 (pktinfo)
2014-08-15T15:55:30+09:00 pipi local5 info krb5kdc[29867]:  listening on fd 8: udp 0.0.0.0.750 (pktinfo)
2014-08-15T15:55:30+09:00 pipi local5 info krb5kdc[29867]:  setsockopt(9,IPV6_V6ONLY,1) worked
2014-08-15T15:55:30+09:00 pipi local5 info krb5kdc[29867]:  setsockopt(9,IPV6_V6ONLY,1) worked
2014-08-15T15:55:30+09:00 pipi local5 info krb5kdc[29867]:  No realms configured correctly for pkinit support - Cannot request packet info for udp socket address :: port 88
2014-08-15T15:55:30+09:00 pipi local5 info krb5kdc[29867]:  No realms configured correctly for pkinit support - Cannot request packet info for udp socket address :: port 88
2014-08-15T15:55:30+09:00 pipi local5 info krb5kdc[29867]:  skipping unrecognized local address family 17
2014-08-15T15:55:30+09:00 pipi local5 info krb5kdc[29867]:  skipping unrecognized local address family 17
2014-08-15T15:55:30+09:00 pipi local5 info krb5kdc[29867]:  skipping unrecognized local address family 17
2014-08-15T15:55:30+09:00 pipi local5 info krb5kdc[29867]:  skipping unrecognized local address family 17
2014-08-15T15:55:30+09:00 pipi local5 info krb5kdc[29867]:  setsockopt(9,IPV6_V6ONLY,1) worked
2014-08-15T15:55:30+09:00 pipi local5 info krb5kdc[29867]:  setsockopt(9,IPV6_V6ONLY,1) worked
2014-08-15T15:55:30+09:00 pipi local5 info krb5kdc[29867]:  listening on fd 9: udp fe80::ba27:ebff:fe0d:8d3a%eth0.88
2014-08-15T15:55:30+09:00 pipi local5 info krb5kdc[29867]:  listening on fd 9: udp fe80::ba27:ebff:fe0d:8d3a%eth0.88
2014-08-15T15:55:30+09:00 pipi local5 info krb5kdc[29867]:  setsockopt(10,IPV6_V6ONLY,1) worked
2014-08-15T15:55:30+09:00 pipi local5 info krb5kdc[29867]:  setsockopt(10,IPV6_V6ONLY,1) worked
2014-08-15T15:55:30+09:00 pipi local5 info krb5kdc[29867]:  listening on fd 10: udp fe80::ba27:ebff:fe0d:8d3a%eth0.750
2014-08-15T15:55:30+09:00 pipi local5 info krb5kdc[29867]:  listening on fd 10: udp fe80::ba27:ebff:fe0d:8d3a%eth0.750
2014-08-15T15:55:30+09:00 pipi local5 info krb5kdc[29867]:  set up 4 sockets
2014-08-15T15:55:30+09:00 pipi local5 info krb5kdc[29867]:  set up 4 sockets
2014-08-15T15:55:30+09:00 pipi local5 info krb5kdc[29867]:  commencing operation
2014-08-15T15:55:30+09:00 pipi local5 info krb5kdc[29867]:  commencing operation
2014-08-15T15:55:30+09:00 pipi daemon info krb5kdc[29867]:  krb5kdc: starting...

★kadmind起動

2014-08-15T15:56:09+09:00 pipi daemon info systemd[1]:  Starting Kerberos 5 administration server...
2014-08-15T15:56:09+09:00 pipi daemon info systemd[1]:  Started Kerberos 5 administration server.
2014-08-15T15:56:09+09:00 pipi local5 info kadmind[29923]:  No dictionary file specified, continuing without one.
2014-08-15T15:56:09+09:00 pipi local5 info kadmind[29923]:  No dictionary file specified, continuing without one.
2014-08-15T15:56:09+09:00 pipi local5 info kadmind[29923]:  setting up network...
2014-08-15T15:56:09+09:00 pipi local5 info kadmind[29923]:  setting up network...
2014-08-15T15:56:09+09:00 pipi local5 info kadmind[29923]:  listening on fd 7: udp 0.0.0.0.464 (pktinfo)
2014-08-15T15:56:09+09:00 pipi local5 info kadmind[29923]:  listening on fd 7: udp 0.0.0.0.464 (pktinfo)
2014-08-15T15:56:09+09:00 pipi local5 info kadmind[29923]:  setsockopt(8,IPV6_V6ONLY,1) worked
2014-08-15T15:56:09+09:00 pipi local5 info kadmind[29923]:  setsockopt(8,IPV6_V6ONLY,1) worked
2014-08-15T15:56:09+09:00 pipi local5 info kadmind[29923]:  Invalid argument - Cannot request packet info for udp socket address :: port 464
2014-08-15T15:56:09+09:00 pipi local5 info kadmind[29923]:  Invalid argument - Cannot request packet info for udp socket address :: port 464
2014-08-15T15:56:09+09:00 pipi local5 info kadmind[29923]:  skipping unrecognized local address family 17
2014-08-15T15:56:09+09:00 pipi local5 info kadmind[29923]:  skipping unrecognized local address family 17
2014-08-15T15:56:09+09:00 pipi local5 info kadmind[29923]:  skipping unrecognized local address family 17
2014-08-15T15:56:09+09:00 pipi local5 info kadmind[29923]:  skipping unrecognized local address family 17
2014-08-15T15:56:09+09:00 pipi local5 info kadmind[29923]:  setsockopt(8,IPV6_V6ONLY,1) worked
2014-08-15T15:56:09+09:00 pipi local5 info kadmind[29923]:  setsockopt(8,IPV6_V6ONLY,1) worked
2014-08-15T15:56:09+09:00 pipi local5 info kadmind[29923]:  listening on fd 8: udp fe80::ba27:ebff:fe0d:8d3a%eth0.464
2014-08-15T15:56:09+09:00 pipi local5 info kadmind[29923]:  listening on fd 8: udp fe80::ba27:ebff:fe0d:8d3a%eth0.464
2014-08-15T15:56:09+09:00 pipi local5 info kadmind[29923]:  setsockopt(9,IPV6_V6ONLY,1) worked
2014-08-15T15:56:09+09:00 pipi local5 info kadmind[29923]:  setsockopt(9,IPV6_V6ONLY,1) worked
2014-08-15T15:56:09+09:00 pipi local5 info kadmind[29923]:  listening on fd 10: tcp 0.0.0.0.464
2014-08-15T15:56:09+09:00 pipi local5 info kadmind[29923]:  listening on fd 10: tcp 0.0.0.0.464
2014-08-15T15:56:09+09:00 pipi local5 info kadmind[29923]:  listening on fd 9: tcp ::.464
2014-08-15T15:56:09+09:00 pipi local5 info kadmind[29923]:  listening on fd 9: tcp ::.464
2014-08-15T15:56:09+09:00 pipi local5 info kadmind[29923]:  listening on fd 11: rpc 0.0.0.0.749
2014-08-15T15:56:09+09:00 pipi local5 info kadmind[29923]:  listening on fd 11: rpc 0.0.0.0.749
2014-08-15T15:56:09+09:00 pipi local5 info kadmind[29923]:  setsockopt(12,IPV6_V6ONLY,1) worked
2014-08-15T15:56:09+09:00 pipi local5 info kadmind[29923]:  setsockopt(12,IPV6_V6ONLY,1) worked
2014-08-15T15:56:09+09:00 pipi local5 info kadmind[29923]:  listening on fd 12: rpc ::.749
2014-08-15T15:56:09+09:00 pipi local5 info kadmind[29923]:  listening on fd 12: rpc ::.749
2014-08-15T15:56:09+09:00 pipi local5 info kadmind[29923]:  set up 6 sockets
2014-08-15T15:56:09+09:00 pipi local5 info kadmind[29923]:  set up 6 sockets
2014-08-15T15:56:09+09:00 pipi local5 info kadmind[29923]:  Seeding random number generator
2014-08-15T15:56:09+09:00 pipi local5 info kadmind[29923]:  Seeding random number generator
2014-08-15T15:56:09+09:00 pipi local5 info kadmind[29923]:  starting
2014-08-15T15:56:09+09:00 pipi local5 info kadmind[29923]:  starting
2014-08-15T15:56:09+09:00 pipi daemon info kadmind[29923]:  kadmind: starting...
</pre>
</div>
</div>

<div id="outline-container-sec-3" class="outline-2">
<h2 id="sec-3"><span class="section-number-2">3</span> KDCにプリンシバルの登録</h2>
<div class="outline-text-2" id="text-3">
<p>
<code>kadmin.local</code> 登録した <code>root/admin@JIZAI-DOMAIN.JP</code> 管理プリンシバルを用いて、レルム
に参加している任意のマシンからテスト用プリンシバル登録操作を行います。以下の操作は全
てKDCサーバ側のデータベースに反映される、クライアント側には何も影響しない。
</p>

<pre class="example">
★kadminサービスへ接続する
$ kadmin -p root/admin
Authenticating as principal root/admin with password.
Password for root/admin@JIZAI-DOMAIN.JP:

★１：プリンシバル認証用パスワードのポリシーを作成する
kadmin:  add_policy -maxlife 180day -minlife 0day -minlength 8 -minclasses 2 -history 8 users_policy

★２：作成したポリシーを用いてkbr_u01プリンシバルを登録する
kadmin:  addprinc -policy users_policy kbr_u01
Enter password for principal "kbr_u01@JIZAI-DOMAIN.JP": 
Re-enter password for principal "kbr_u01@JIZAI-DOMAIN.JP": 
Principal "kbr_u01@JIZAI-DOMAIN.JP" created.                     ★プリンシバルのフルネーム

★３：kbr_u02プリンシバルを登録する
kadmin:  addprinc -policy users_policy kbr_u02
Enter password for principal "kbr_u02@JIZAI-DOMAIN.JP": 
Re-enter password for principal "kbr_u02@JIZAI-DOMAIN.JP": 
Principal "kbr_u02@JIZAI-DOMAIN.JP" created.

★４：：プリンシバル一覧の表示
kadmin:  list_principals 
K/M@JIZAI-DOMAIN.JP
kadmin/admin@JIZAI-DOMAIN.JP
kadmin/changepw@JIZAI-DOMAIN.JP
kadmin/pipi.jizai-domain.jp@JIZAI-DOMAIN.JP                      ★kadminサービスプリンシバル
kbr_u01@JIZAI-DOMAIN.JP                                          ★通常アカウント
kbr_u02@JIZAI-DOMAIN.JP
krbtgt/JIZAI-DOMAIN.JP@JIZAI-DOMAIN.JP                           ★TGSサービスプリンシバル
root/admin@JIZAI-DOMAIN.JP                                       ★管理用プリンシバル
kadmin:
</pre>

<p>
プリンシバル登録時、kadminサービス側のログ
</p>
<pre class="example">
★接続時
2014-08-15T15:57:35+09:00 pipi local5 info krb5kdc[29867]:  AS_REQ (6 etypes {18 17 16 23 25 26}) 192.168.100.4: ISSUE: authtime 1408085855, etypes {rep=18 tkt=18 ses=18}, root/admin@JIZAI-DOMAIN.JP for kadmin/pipi.jizai-domain.jp@JIZAI-DOMAIN.JP
2014-08-15T15:57:35+09:00 pipi local5 info krb5kdc[29867]:  AS_REQ (6 etypes {18 17 16 23 25 26}) 192.168.100.4: ISSUE: authtime 1408085855, etypes {rep=18 tkt=18 ses=18}, root/admin@JIZAI-DOMAIN.JP for kadmin/pipi.jizai-domain.jp@JIZAI-DOMAIN.JP
2014-08-15T15:57:39+09:00 pipi local5 notice kadmind[29923]:  Request: kadm5_init, root/admin@JIZAI-DOMAIN.JP, success, client=root/admin@JIZAI-DOMAIN.JP, service=kadmin/pipi.jizai-domain.jp@JIZAI-DOMAIN.JP, addr=192.168.100.4, vers=4, flavor=6
2014-08-15T15:57:39+09:00 pipi local5 notice kadmind[29923]:  Request: kadm5_init, root/admin@JIZAI-DOMAIN.JP, success, client=root/admin@JIZAI-DOMAIN.JP, service=kadmin/pipi.jizai-domain.jp@JIZAI-DOMAIN.JP, addr=192.168.100.4, vers=4, flavor=6

★１
2014-08-15T16:01:55+09:00 pipi local5 notice kadmind[29923]:  Request: kadm5_create_policy, users_policy, success, client=root/admin@JIZAI-DOMAIN.JP, service=kadmin/pipi.jizai-domain.jp@JIZAI-DOMAIN.JP, addr=192.168.100.4
2014-08-15T16:01:55+09:00 pipi local5 notice kadmind[29923]:  Request: kadm5_create_policy, users_policy, success, client=root/admin@JIZAI-DOMAIN.JP, service=kadmin/pipi.jizai-domain.jp@JIZAI-DOMAIN.JP, addr=192.168.100.4

★２
2014-08-15T16:03:18+09:00 pipi local5 notice kadmind[29923]:  Request: kadm5_get_policy, users_policy, success, client=root/admin@JIZAI-DOMAIN.JP, service=kadmin/pipi.jizai-domain.jp@JIZAI-DOMAIN.JP, addr=192.168.100.4
2014-08-15T16:03:18+09:00 pipi local5 notice kadmind[29923]:  Request: kadm5_get_policy, users_policy, success, client=root/admin@JIZAI-DOMAIN.JP, service=kadmin/pipi.jizai-domain.jp@JIZAI-DOMAIN.JP, addr=192.168.100.4
2014-08-15T16:03:27+09:00 pipi local5 notice kadmind[29923]:  Request: kadm5_create_principal, kbr_u01@JIZAI-DOMAIN.JP, success, client=root/admin@JIZAI-DOMAIN.JP, service=kadmin/pipi.jizai-domain.jp@JIZAI-DOMAIN.JP, addr=192.168.100.4
2014-08-15T16:03:27+09:00 pipi local5 notice kadmind[29923]:  Request: kadm5_create_principal, kbr_u01@JIZAI-DOMAIN.JP, success, client=root/admin@JIZAI-DOMAIN.JP, service=kadmin/pipi.jizai-domain.jp@JIZAI-DOMAIN.JP, addr=192.168.100.4

★３
2014-08-15T16:04:11+09:00 pipi local5 notice kadmind[29923]:  Request: kadm5_get_policy, users_policy, success, client=root/admin@JIZAI-DOMAIN.JP, service=kadmin/pipi.jizai-domain.jp@JIZAI-DOMAIN.JP, addr=192.168.100.4
2014-08-15T16:04:11+09:00 pipi local5 notice kadmind[29923]:  Request: kadm5_get_policy, users_policy, success, client=root/admin@JIZAI-DOMAIN.JP, service=kadmin/pipi.jizai-domain.jp@JIZAI-DOMAIN.JP, addr=192.168.100.4
2014-08-15T16:04:18+09:00 pipi local5 notice kadmind[29923]:  Request: kadm5_create_principal, kbr_u02@JIZAI-DOMAIN.JP, success, client=root/admin@JIZAI-DOMAIN.JP, service=kadmin/pipi.jizai-domain.jp@JIZAI-DOMAIN.JP, addr=192.168.100.4
2014-08-15T16:04:18+09:00 pipi local5 notice kadmind[29923]:  Request: kadm5_create_principal, kbr_u02@JIZAI-DOMAIN.JP, success, client=root/admin@JIZAI-DOMAIN.JP, service=kadmin/pipi.jizai-domain.jp@JIZAI-DOMAIN.JP, addr=192.168.100.4

★４
2014-08-15T16:05:27+09:00 pipi local5 notice kadmind[29923]:  Request: kadm5_get_principals, *, success, client=root/admin@JIZAI-DOMAIN.JP, service=kadmin/pipi.jizai-domain.jp@JIZAI-DOMAIN.JP, addr=192.168.100.4
2014-08-15T16:05:27+09:00 pipi local5 notice kadmind[29923]:  Request: kadm5_get_principals, *, success, client=root/admin@JIZAI-DOMAIN.JP, service=kadmin/pipi.jizai-domain.jp@JIZAI-DOMAIN.JP, addr=192.168.100.4
</pre>
</div>
</div>

<div id="outline-container-sec-4" class="outline-2">
<h2 id="sec-4"><span class="section-number-2">4</span> KDCデータベースのバックアップ</h2>
<div class="outline-text-2" id="text-4">
<p>
<code>kdb5_util dump</code> 、 <code>kdb5_util load</code> コマンドを用いてKDCデータベースをバックアップと
リストアすることができる。リストア時にKDCサービスを停止する必要があります。
</p>

<pre class="example">
$ sudo kdb5_util dump /var/lib/krb5kdc/kdc_dump
$ ls -al /var/lib/krb5kdc/
total 52
drwxr-xr-x  2 root root 4096 Aug 15 16:11 .
drwxr-xr-x 31 root root 4096 Aug 15 00:00 ..
-rw-------  1 root root   76 Aug 15 15:37 .k5.JIZAI-DOMAIN.JP
-rw-r--r--  1 root root   26 Aug 15 14:44 kadm5.acl
-rw-r--r--  1 root root  288 Aug 15 14:40 kdc.conf
-rw-r--r--  1 root root  304 Aug 15 14:28 kdc.conf.ogin
-rw-------  1 root root 5167 Aug 15 16:11 kdc_dump             ★バックアップ
-rw-------  1 root root    1 Aug 15 16:11 kdc_dump.dump_ok
-rw-------  1 root root 8192 Aug 15 16:04 principal
-rw-------  1 root root 8192 Aug 15 16:01 principal.kadm5
-rw-------  1 root root    0 Aug 15 15:37 principal.kadm5.lock
-rw-------  1 root root    0 Aug 15 16:04 principal.ok
$
</pre>
</div>
</div>

<div id="outline-container-sec-5" class="outline-2">
<h2 id="sec-5"><span class="section-number-2">5</span> Kerberos認証の流れを確認する</h2>
<div class="outline-text-2" id="text-5">
<p>
シナリオ、レルムに参考しているホスト <code>mimi</code> にて <code>kinit kbr_u01</code> でkbr_u01ユーザプリン
シバル認証を通してTGTチケットして、TGTチケットを用いてレルムに参考している別のホスト
<code>jizai</code> にSSHでSSOを実現する。
</p>

<pre class="example">
[レルム:JIZAI=DOMAIN.JP]

                                           &lt;&lt;KDC&gt;&gt; pipi.jizai-domain.jp
+---------------------+  ①kinit kbr_u01   +----------------------------------------------------+
|mimi.jizai-domain.jp |-------------------&gt;| A|ユーザ  ：kbr_u01@JIZAI-DOMAIN.JP                |
|                     |&lt;---TGTチケット-----| B|ホスト  ：jizai/jizai-domain.jp@JIZAI-DOMAIN.JP  |
|                     |                    | C|サービス：krbgtg/JIZAI-DOMAIN.JP@JIZAI-DOMAIN.JP |
|                     |------TGS-REQ------&gt;|                                                    |
|                     |&lt;-----TGS-RES-------|                                                    |
|                     |  ③Bホストチケット |                                                    |
+---------+-----------+                    +----------------------------------------------------+
          |
     ②ssh -o GSSAPIAuthentication=yes kbr_u01@jizai.jizai-domai.jp
          |
+---------+-----------+
|jizai.jizai-domain.jp|
|                     |
|                     |
+---------------------+
</pre>

<p>
検証の前提条件
</p>
<ul class="org-ul">
<li>KDCにkbr_u01ユーザプリンシバルが登録済み
</li>
<li>KDCに <code>jizai</code> ホストプリンシバルが登録済み
</li>
<li><code>jizai</code> ホストにsshdのGSSAPIAuthenticationオプションが有効である
</li>
<li><code>jizai</code> ホストの <code>/etc/passwd</code> ファイルに <code>kbr_u01</code> アカウントが登録済み
</li>
</ul>


<p>
<code>jizai</code> ホストプリンシバルの登録
</p>
<pre class="example">
★以下の作業は jizai ホストで行う

★KDCのkadminサービスへ接続する
$ sudo kadmin -p root/admin
Authenticating as principal root/admin with password.
Password for root/admin@JIZAI-DOMAIN.JP: 

★１：randkeyオプションでランダムなパスワードを用いて、ホストプリンシバルを登録する
kadmin:  addprinc -randkey host/jizai.jizai-domain.jp
WARNING: no policy specified for host/jizai.jizai-domain.jp@JIZAI-DOMAIN.JP; defaulting to no policy
Principal "host/jizai.jizai-domain.jp@JIZAI-DOMAIN.JP" created.

★２：ホストプリンシバル認証用鍵（パスワード）をローカルシステムに保存する
kadmin:  ktadd host/jizai.jizai-domain.jp
Entry for principal host/mimi.jizai-domain.jp with kvno 5, encryption type aes256-cts-hmac-sha1-96 added to keytab FILE:/etc/krb5.keytab.
Entry for principal host/mimi.jizai-domain.jp with kvno 5, encryption type aes128-cts-hmac-sha1-96 added to keytab FILE:/etc/krb5.keytab.
Entry for principal host/mimi.jizai-domain.jp with kvno 5, encryption type des3-cbc-sha1 added to keytab FILE:/etc/krb5.keytab.
Entry for principal host/mimi.jizai-domain.jp with kvno 5, encryption type arcfour-hmac added to keytab FILE:/etc/krb5.keytab.

kadmin: quit

★４：ローカルシステムに保存されたホストプリンシバルの鍵を確認する
$ sudo klist -k /etc/krb5.keytab
Keytab name: FILE:/etc/krb5.keytab
KVNO Principal
---- --------------------------------------------------------------------------
   7 host/jizai.jizai-domain.jp@JIZAI-DOMAIN.JP
   7 host/jizai.jizai-domain.jp@JIZAI-DOMAIN.JP
   7 host/jizai.jizai-domain.jp@JIZAI-DOMAIN.JP
   7 host/jizai.jizai-domain.jp@JIZAI-DOMAIN.JP
$
</pre>

<p>
<code>jizai</code> ホストにテスト用プリンシバル <code>kbr_u01</code> をシステムローカルユーザとして登録する。
</p>
<pre class="example">
[akira@jizai ~]$ sudo useradd kbr_u01           ★kbr_u01ユーザ登録
[akira@jizai ~]$ getent passwd | grep kbr       ★kbr_u01ユーザ登録の確認
kbr_u01:x:5013:5013::/home/kbr_u01:/bin/bash
[akira@jizai ~]$
</pre>

<p>
<code>mimi</code> ホストにて <code>kinit</code> コマンドで <code>kbr_u01</code> プリンシバル認証して TGTチケットを取得
する。
</p>
<pre class="example">
[root@mimi-air ~]# klist -5                                   ★チケット一覧確認
klist: Credentials cache file '/tmp/krb5cc_0' not found

[root@mimi-air ~]# kinit kbr_u01                              ★kbr_u01プリンシバル認証する
Password for kbr_u01@JIZAI-DOMAIN.JP:                         ★kbr_u01プリンシバルに対応する鍵のパスワードを入力する

[akira@mimi ~]$ klist -5                                      ★チケット一覧確認
Ticket cache: FILE:/tmp/krb5cc_1000
Default principal: kbr_u01@JIZAI-DOMAIN.JP                    ★← ユーザプリンシバルkbr_u01として認証

Valid starting       Expires              Service principal
2014-08-16T16:01:31  2014-08-17T02:01:31  krbtgt/JIZAI-DOMAIN.JP@JIZAI-DOMAIN.JP  ★←TGTチケット
	renew until 2014-08-23T16:01:31
[root@mimi-air ~]#
</pre>

<p>
<code>mimi</code> から <code>jizai</code> へSSO
</p>
<pre class="example">
★GSSAPIAuthenticationオプション有効でSSHログインする
[akira@mimi ~]$ ssh -vvv -o GSSAPIAuthentication=yes kbr_u01@jizai.jizai-domain.jp
OpenSSH_6.6.1, OpenSSL 1.0.1i 6 Aug 2014
debug1: Reading configuration data /home/akira/.ssh/config
debug1: Reading configuration data /etc/ssh/ssh_config
debug2: ssh_connect: needpriv 0
debug1: Connecting to jizai.jizai-domain.jp [192.168.100.3] port 22.
debug1: Connection established.
debug1: identity file /home/akira/.ssh/id_rsa type -1
debug1: identity file /home/akira/.ssh/id_rsa-cert type -1
debug3: Incorrect RSA1 identifier
debug3: Could not load "/home/akira/.ssh/id_dsa" as a RSA1 public key
debug1: identity file /home/akira/.ssh/id_dsa type 2
debug1: identity file /home/akira/.ssh/id_dsa-cert type -1
debug1: identity file /home/akira/.ssh/id_ecdsa type -1
debug1: identity file /home/akira/.ssh/id_ecdsa-cert type -1
debug1: identity file /home/akira/.ssh/id_ed25519 type -1
debug1: identity file /home/akira/.ssh/id_ed25519-cert type -1
debug1: Enabling compatibility mode for protocol 2.0
debug1: Local version string SSH-2.0-OpenSSH_6.6.1
debug1: Remote protocol version 2.0, remote software version OpenSSH_6.6.1
debug1: match: OpenSSH_6.6.1 pat OpenSSH_6.6.1* compat 0x04000000
debug2: fd 3 setting O_NONBLOCK
debug3: load_hostkeys: loading entries for host "jizai.jizai-domain.jp" from file "/home/akira/.ssh/known_hosts"
debug3: load_hostkeys: found key type ECDSA in file /home/akira/.ssh/known_hosts:16
debug3: load_hostkeys: loaded 1 keys
debug3: order_hostkeyalgs: prefer hostkeyalgs: ecdsa-sha2-nistp256-cert-v01@openssh.com,ecdsa-sha2-nistp384-cert-v01@openssh.com,ecdsa-sha2-nistp521-cert-v01@openssh.com,ecdsa-sha2-nistp256,ecdsa-sha2-nistp384,ecdsa-sha2-nistp521
debug1: SSH2_MSG_KEXINIT sent
debug1: SSH2_MSG_KEXINIT received
debug2: kex_parse_kexinit: curve25519-sha256@libssh.org,ecdh-sha2-nistp256,ecdh-sha2-nistp384,ecdh-sha2-nistp521,diffie-hellman-group-exchange-sha256,diffie-hellman-group-exchange-sha1,diffie-hellman-group14-sha1,diffie-hellman-group1-sha1
debug2: kex_parse_kexinit: ecdsa-sha2-nistp256-cert-v01@openssh.com,ecdsa-sha2-nistp384-cert-v01@openssh.com,ecdsa-sha2-nistp521-cert-v01@openssh.com,ecdsa-sha2-nistp256,ecdsa-sha2-nistp384,ecdsa-sha2-nistp521,ssh-ed25519-cert-v01@openssh.com,ssh-rsa-cert-v01@openssh.com,ssh-dss-cert-v01@openssh.com,ssh-rsa-cert-v00@openssh.com,ssh-dss-cert-v00@openssh.com,ssh-ed25519,ssh-rsa,ssh-dss
debug2: kex_parse_kexinit: aes128-ctr,aes192-ctr,aes256-ctr,arcfour256,arcfour128,aes128-gcm@openssh.com,aes256-gcm@openssh.com,chacha20-poly1305@openssh.com,aes128-cbc,3des-cbc,blowfish-cbc,cast128-cbc,aes192-cbc,aes256-cbc,arcfour,rijndael-cbc@lysator.liu.se
debug2: kex_parse_kexinit: aes128-ctr,aes192-ctr,aes256-ctr,arcfour256,arcfour128,aes128-gcm@openssh.com,aes256-gcm@openssh.com,chacha20-poly1305@openssh.com,aes128-cbc,3des-cbc,blowfish-cbc,cast128-cbc,aes192-cbc,aes256-cbc,arcfour,rijndael-cbc@lysator.liu.se
debug2: kex_parse_kexinit: hmac-md5-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-ripemd160-etm@openssh.com,hmac-sha1-96-etm@openssh.com,hmac-md5-96-etm@openssh.com,hmac-md5,hmac-sha1,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-ripemd160,hmac-ripemd160@openssh.com,hmac-sha1-96,hmac-md5-96
debug2: kex_parse_kexinit: hmac-md5-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-ripemd160-etm@openssh.com,hmac-sha1-96-etm@openssh.com,hmac-md5-96-etm@openssh.com,hmac-md5,hmac-sha1,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-ripemd160,hmac-ripemd160@openssh.com,hmac-sha1-96,hmac-md5-96
debug2: kex_parse_kexinit: none,zlib@openssh.com,zlib
debug2: kex_parse_kexinit: none,zlib@openssh.com,zlib
debug2: kex_parse_kexinit: 
debug2: kex_parse_kexinit: 
debug2: kex_parse_kexinit: first_kex_follows 0 
debug2: kex_parse_kexinit: reserved 0 
debug2: kex_parse_kexinit: curve25519-sha256@libssh.org,ecdh-sha2-nistp256,ecdh-sha2-nistp384,ecdh-sha2-nistp521,diffie-hellman-group-exchange-sha256,diffie-hellman-group-exchange-sha1,diffie-hellman-group14-sha1,diffie-hellman-group1-sha1
debug2: kex_parse_kexinit: ssh-rsa,ssh-dss,ecdsa-sha2-nistp256,ssh-ed25519
debug2: kex_parse_kexinit: aes128-ctr,aes192-ctr,aes256-ctr,arcfour256,arcfour128,aes128-gcm@openssh.com,aes256-gcm@openssh.com,chacha20-poly1305@openssh.com,aes128-cbc,3des-cbc,blowfish-cbc,cast128-cbc,aes192-cbc,aes256-cbc,arcfour,rijndael-cbc@lysator.liu.se
debug2: kex_parse_kexinit: aes128-ctr,aes192-ctr,aes256-ctr,arcfour256,arcfour128,aes128-gcm@openssh.com,aes256-gcm@openssh.com,chacha20-poly1305@openssh.com,aes128-cbc,3des-cbc,blowfish-cbc,cast128-cbc,aes192-cbc,aes256-cbc,arcfour,rijndael-cbc@lysator.liu.se
debug2: kex_parse_kexinit: hmac-md5-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-ripemd160-etm@openssh.com,hmac-sha1-96-etm@openssh.com,hmac-md5-96-etm@openssh.com,hmac-md5,hmac-sha1,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-ripemd160,hmac-ripemd160@openssh.com,hmac-sha1-96,hmac-md5-96
debug2: kex_parse_kexinit: hmac-md5-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-ripemd160-etm@openssh.com,hmac-sha1-96-etm@openssh.com,hmac-md5-96-etm@openssh.com,hmac-md5,hmac-sha1,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-ripemd160,hmac-ripemd160@openssh.com,hmac-sha1-96,hmac-md5-96
debug2: kex_parse_kexinit: none,zlib@openssh.com
debug2: kex_parse_kexinit: none,zlib@openssh.com
debug2: kex_parse_kexinit: 
debug2: kex_parse_kexinit: 
debug2: kex_parse_kexinit: first_kex_follows 0 
debug2: kex_parse_kexinit: reserved 0 
debug2: mac_setup: setup hmac-md5-etm@openssh.com
debug1: kex: server-&gt;client aes128-ctr hmac-md5-etm@openssh.com none
debug2: mac_setup: setup hmac-md5-etm@openssh.com
debug1: kex: client-&gt;server aes128-ctr hmac-md5-etm@openssh.com none
debug1: sending SSH2_MSG_KEX_ECDH_INIT
debug1: expecting SSH2_MSG_KEX_ECDH_REPLY
debug1: Server host key: ECDSA 35:6c:0a:2e:7e:c2:5a:45:a0:05:f6:69:7b:7a:15:d0
debug3: load_hostkeys: loading entries for host "jizai.jizai-domain.jp" from file "/home/akira/.ssh/known_hosts"
debug3: load_hostkeys: found key type ECDSA in file /home/akira/.ssh/known_hosts:16
debug3: load_hostkeys: loaded 1 keys
debug3: load_hostkeys: loading entries for host "192.168.100.3" from file "/home/akira/.ssh/known_hosts"
debug3: load_hostkeys: found key type ECDSA in file /home/akira/.ssh/known_hosts:3
debug3: load_hostkeys: loaded 1 keys
debug1: Host 'jizai.jizai-domain.jp' is known and matches the ECDSA host key.
debug1: Found key in /home/akira/.ssh/known_hosts:16
debug1: ssh_ecdsa_verify: signature correct
debug2: kex_derive_keys
debug2: set_newkeys: mode 1
debug1: SSH2_MSG_NEWKEYS sent
debug1: expecting SSH2_MSG_NEWKEYS
debug2: set_newkeys: mode 0
debug1: SSH2_MSG_NEWKEYS received
debug1: Roaming not allowed by server
debug1: SSH2_MSG_SERVICE_REQUEST sent
debug2: service_accept: ssh-userauth
debug1: SSH2_MSG_SERVICE_ACCEPT received
debug2: key: /home/akira/.ssh/id_dsa (0x7f87e82679a0),
debug2: key: /home/akira/.ssh/id_rsa ((nil)),
debug2: key: /home/akira/.ssh/id_ecdsa ((nil)),
debug2: key: /home/akira/.ssh/id_ed25519 ((nil)),
debug1: Authentications that can continue: publickey,gssapi-with-mic
debug3: start over, passed a different list publickey,gssapi-with-mic
debug3: preferred gssapi-with-mic,publickey,keyboard-interactive,password
debug3: authmethod_lookup gssapi-with-mic
debug3: remaining preferred: publickey,keyboard-interactive,password
debug3: authmethod_is_enabled gssapi-with-mic
debug1: Next authentication method: gssapi-with-mic
debug2: we sent a gssapi-with-mic packet, wait for reply
debug1: Authentication succeeded (gssapi-with-mic).                     ★GSSAPIによるKerbrose認証が成功
Authenticated to jizai.jizai-domain.jp ([192.168.100.3]:22).            ★
debug1: channel 0: new [client-session]
debug3: ssh_session2_open: channel_new: 0
debug2: channel 0: send open
debug1: Requesting no-more-sessions@openssh.com
debug1: Entering interactive session.
debug2: callback start
debug2: fd 3 setting TCP_NODELAY
debug3: packet_set_tos: set IP_TOS 0x10
debug2: client_session2_setup: id 0
debug2: channel 0: request pty-req confirm 1
debug2: channel 0: request shell confirm 1
debug2: callback done
debug2: channel 0: open confirm rwindow 0 rmax 32768
debug2: channel_input_status_confirm: type 99 id 0
debug2: PTY allocation request accepted on channel 0
debug2: channel 0: rcvd adjust 2097152
debug2: channel_input_status_confirm: type 99 id 0
debug2: shell request accepted on channel 0
Last login: Sat Aug 16 12:36:44 2014 from mimi.jizai-domain.jp
[kbr_u01@jizai ~]$ 

[kbr_u01@jizai ~]$ exit
ログアウト

[akira@mimi ~]$ klist -5                                                 ★チケット一覧確認
Ticket cache: FILE:/tmp/krb5cc_1000
Default principal: kbr_u01@JIZAI-DOMAIN.JP

Valid starting       Expires              Service principal
2014-08-16T16:01:31  2014-08-17T02:01:31  krbtgt/JIZAI-DOMAIN.JP@JIZAI-DOMAIN.JP
	renew until 2014-08-23T16:01:31
2014-08-16T16:01:39  2014-08-17T02:01:31  host/jizai.jizai-domain.jp@JIZAI-DOMAIN.JP    ★jizaiのホストアクセス用のチケットが取得された
	renew until 2014-08-23T16:01:31
[akira@mimi ~]$
</pre>

<p>
以下はkinitからsshグインまでKDC側で取得したkerbroseパケット通信の状況です。
</p>



<div class="figure">
<p><img src="img/2014-08-15-berbrose-01.png" alt="2014-08-15-berbrose-01.png" />
</p>
</div>


<div class="figure">
<p><img src="img/2014-08-15-berbrose-02.png" alt="2014-08-15-berbrose-02.png" />
</p>
</div>


<div class="figure">
<p><img src="img/2014-08-15-berbrose-03.png" alt="2014-08-15-berbrose-03.png" />
</p>
</div>


<div class="figure">
<p><img src="img/2014-08-15-berbrose-04.png" alt="2014-08-15-berbrose-04.png" />
</p>
</div>
</div>
</div>

<div id="outline-container-sec-6" class="outline-2">
<h2 id="sec-6"><span class="section-number-2">6</span> LDAP+pam_krbでLinuxログイン認証</h2>
<div class="outline-text-2" id="text-6">
<p>
LDAPサーバにユーザエントリの登録を行う。
</p>

<p>
ユーザエントリの定義
</p>
<pre class="example">
# --- kbr_u01 ---
dn: uid=kbr_u01,ou=User,o=Linux Users,dc=jizai-domain,dc=jp
uid: kbr_u01
cn: Kerberose Test User01
uidNumber: 5101
gidNumber: 3101
userPassword: {CRYPT}x                          ★LDAPの簡易パスワード認証を利用しない
homeDirectory: /home/kbr_u01
loginShell: /bin/bash
gecos: Kerberose User01
objectClass: account
objectClass: posixAccount

# --- kbr_u02 ---
dn: uid=kbr_u02,ou=User,o=Linux Users,dc=jizai-domain,dc=jp
uid: kbr_u02
cn: Kerberose Test User02
uidNumber: 5102
gidNumber: 3102
userPassword: {CRYPT}x
homeDirectory: /home/kbr_u02
loginShell: /bin/bash
gecos: Kerberose User02
objectClass: account
objectClass: posixAccount
</pre>

<p>
<code>ldapadd</code> で登録を行う
</p>
<pre class="example">
$ ldapadd -x -W -D "cn=Manager,dc=jizai-domain,dc=jp" -f 01.users.ldif
Enter LDAP Password: 
adding new entry "uid=kbr_u01,ou=User,o=Linux Users,dc=jizai-domain,dc=jp"

adding new entry "uid=kbr_u02,ou=User,o=Linux Users,dc=jizai-domain,dc=jp"
</pre>

<p>
LinuxホストからLDAPユーザエントリ情報を参照するするようにする
</p>

<p>
<code>nss-pam-ldapd</code> をインストールして、 <code>/etc/nslcd.conf</code> にてLDAPサーバ接続設定を行う。
<code>/etc/nsswitch.conf</code> に以下のように情報源にldapを追加する。
</p>
<pre class="example">
$ cat /etc/nsswitch.conf
passwd:    files ldap
group:     files ldap
shadow:    files ldap
netgroup:  files ldap

★以上以外の内容、ここでは省略します。
</pre>

<p>
<code>nslcd.service</code> サービスを起動して、LDAPからユーザ情報参照できることを確認する。
</p>
<pre class="example">
$ sudo systemctl start nslcd.service
$ getent passwd
root:x:0:0:root:/root:/bin/bash
.....省略.....
★LDAPのユーザエントリ情報が表示されている
kbr_u01:*:5101:3101:Kerberose User01:/home/kbr_u01:/bin/bash
kbr_u02:*:5102:3102:Kerberose User02:/home/kbr_u02:/bin/bash
</pre>

<p>
AURリポジトリからLinuxホストに <code>pam_krb5</code> 認証モジュールをインストールする
</p>
<pre class="example">
$ yaourt -S pam_krb5
==&gt; AUR から pam_krb5 の PKGBUILD をダウンロード...
...中略...
==&gt; インストールを整理...
  -&gt; 不要なファイルを削除...
  -&gt; libtool ファイルを削除...
  -&gt; static library ファイルを削除...
  -&gt; man と info ページを圧縮...
  -&gt; バイナリとライブラリから不要なシンボルを削除...
==&gt; パッケージを作成 "pam_krb5"...
  -&gt; .PKGINFO ファイルを生成...
  -&gt; .MTREE ファイルを生成...
  -&gt; パッケージの圧縮...
==&gt; fakeroot 環境を終了。
==&gt; 作成完了: pam_krb5 2.4.9-1 (2014年  8月 16日 土曜日 16:38:32 JST)

==&gt; pam_krb5 のインストールを続行しますか ? [Y/n]
==&gt; [v]パッケージの中身確認 [c]heck package with namcap
==&gt; -----------------------------------------
==&gt; y

パッケージをロード...
警告: pam_krb5-2.4.9-1 は最新です -- 再インストール
依存関係を解決しています...
相互衝突をチェックしています...

パッケージ (1): pam_krb5-2.4.9-1

Total Installed Size:   0.27 MiB
Net Upgrade Size:       0.00 MiB

:: インストールを行いますか？ [Y/n] 
(1/1) キーリングのキーを確認                                                                   [########################################################] 100%
(1/1) パッケージの整合性をチェック                                                             [########################################################] 100%
(1/1) パッケージファイルのロード                                                               [########################################################] 100%
(1/1) ファイルの衝突をチェック                                                                 [########################################################] 100%
(1/1) 空き容量を確認                                                                           [########################################################] 100%
(1/1) 再インストール pam_krb5                                                                  [########################################################] 100%
[akira@jizai ~]$
</pre>


<p>
<code>pam_krb5</code> モジュールの確認
</p>
<pre class="example">
[akira@jizai ~]$ pacman -Ql pam_krb5
pam_krb5 /usr/
pam_krb5 /usr/bin/
pam_krb5 /usr/bin/afs5log
pam_krb5 /usr/lib/
pam_krb5 /usr/lib/security/
pam_krb5 /usr/lib/security/pam_krb5.so      ★モジュール自体
pam_krb5 /usr/lib/security/pam_krb5/
pam_krb5 /usr/lib/security/pam_krb5/pam_krb5_cchelper
pam_krb5 /usr/share/
pam_krb5 /usr/share/locale/
...中略...
[akira@jizai ~]$
</pre>

<p>
PAM認証設定１： <code>/etc/pam.d/system-auth</code>
</p>
<pre class="example">
#%PAM-1.0

auth      sufficient pam_krb5.so                   ★Kerbrose認証連携
auth      required  pam_env.so
auth      required  pam_unix.so     try_first_pass nullok
auth      optional  pam_permit.so

account   sufficient pam_krb5.so                   ★Kerbrose認証連携
account   required  pam_unix.so
account   optional  pam_permit.so
account   required  pam_time.so

password  sufficient pam_krb5.so                   ★Kerbrose認証連携
password  required  pam_unix.so     try_first_pass nullok sha512 shadow
password  optional  pam_permit.so

#ユーザ、グループ単位にリソース制限を行う
session   required  pam_limits.so
session   required  pam_env.so

#ログイン時にホームディレクトリが存在していなければ自動で生成する指定
session   required  pam_mkhomedir.so umask=077

#ログイン、ログアウト情報をauthログに出力する
session   required  pam_unix.so

session   optional  pam_krb5.so                    ★Kerbrose認証連携
session   optional  pam_permit.so
</pre>

<p>
PAM認証設定２： <code>/etc/pam.d/other</code>
</p>
<pre class="example">
#%PAM-1.0
auth            sufficient      pam_krb5.so
auth		required	pam_unix.so

account         sufficient      pam_krb5.so
account		required	pam_unix.so

password        sufficient      pam_krb5.so
password	required	pam_unix.so

session		required	pam_unix.so
</pre>


<p>
Linuxホストに <code>kbr_u01</code> アカウントでログインする
</p>
<pre class="example">
$ ssh kbr_u01@jizai.jizai-domain.jp
kbr_u01@jizai.jizai-domain.jp's password:       ★KDCに登録されたkbr_u01プリンシバルのパスワードを入力する
Last login: Sat Aug 16 16:29:21 2014 from mimi.jizai-domain.jp

[kbr_u01@jizai ~]$ klist -5                     ★チケット一覧を確認する
Ticket cache: FILE:/tmp/krb5cc_5101_557rnl
Default principal: kbr_u01@JIZAI-DOMAIN.JP

Valid starting       Expires              Service principal
2014-08-16T16:46:53  2014-08-17T02:46:53  krbtgt/JIZAI-DOMAIN.JP@JIZAI-DOMAIN.JP    ★TGTチケット
	renew until 2014-08-23T16:46:53
2014-08-16T16:46:53  2014-08-17T02:46:53  krbtgt/JIZAI-DOMAIN.JP@JIZAI-DOMAIN.JP    ★なぜ２枚なのかは不明
	renew until 2014-08-23T16:46:53


[kbr_u01@jizai ~]$ env  | grep KRB5CCNAME
KRB5CCNAME=FILE:/tmp/krb5cc_5101_557rnl               ★Kerbrose認証チケットの保管場所は環境変数KRB5CCNAMEで参照できる
[kbr_u01@jizai ~]$
</pre>

<p>
ログイン時Linuxホストのログ
</p>
<pre class="example">
Aug 16 16:46:53 jizai sshd[22872]: pam_krb5[22872]: TGT verified using key for 'host/jizai.jizai-domain.jp@JIZAI-DOMAIN.JP'
Aug 16 16:46:53 jizai sshd[22872]: pam_krb5[22872]: authentication succeeds for 'kbr_u01' (kbr_u01@JIZAI-DOMAIN.JP)    ★Kerbrose認証成功
Aug 16 16:46:53 jizai sshd[22872]: Accepted password for kbr_u01 from 192.168.100.10 port 58136 ssh2
Aug 16 16:46:55 jizai sshd[22872]: pam_unix(sshd:session): session opened for user kbr_u01 by (uid=0)
Aug 16 16:46:55 jizai systemd-logind[655]: New session c17 of user kbr_u01.
</pre>
</div>
</div>

<div id="outline-container-sec-7" class="outline-2">
<h2 id="sec-7"><span class="section-number-2">7</span> 参考情報</h2>
<div class="outline-text-2" id="text-7">
<ul class="org-ul">
<li><a href="http://www.amazon.co.jp/%25E3%2583%2597%25E3%2583%25AD%25E3%2581%25AE%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AE-Linux%25E3%2582%25B7%25E3%2582%25B9%25E3%2583%2586%25E3%2583%25A0%25E3%2583%25BB%25E3%2583%258D%25E3%2583%2583%25E3%2583%2588%25E3%2583%25AF%25E3%2583%25BC%25E3%2582%25AF%25E7%25AE%25A1%25E7%2590%2586%25E6%258A%2580%25E8%25A1%2593-Software-Design-plus/dp/4774146757">プロのためのLinuxシステムネットワーク管理技術</a>
</li>
<li><a href="https://nsrc.org/workshops/ws-files/2011/sanog17/exercises/ex2-kerberos-host.html">Exercise2 : enable Kerberos logins to a host</a>
</li>
<li><a href="http://www.l2tp.org/?p=2358">CentOSでSSHのログインがとても遅かった件</a>
</li>
<li><a href="http://plone.uconn.edu/workspaces/uits-linux/facts/troubleshooting-sshd-and-gssapi">SSHD and Kerberos GSSAPI Troubleshooting</a>
</li>
<li><a href="https://wiki.archlinux.org/index.php/Network_Time_Protocol_daemon_%2528%25E6%2597%25A5%25E6%259C%25AC%25E8%25AA%259E%2529#systemd_.E3.82.B5.E3.83.BC.E3.83.93.E3.82.B9">Network Time Protocol daemon (日本語)</a>
</li>
<li><a href="https://wiki.archlinux.org/index.php/LDAP_authentication#NSS_Configuration">LDAP authentication</a>
</li>
</ul>
</div>
</div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[レシピ]ローカルシステムのUIDの抽出]]></title>
    <link href="http://luozengbin.github.io/blog/2014-08-12-%5B%E3%83%AC%E3%82%B7%E3%83%94%5D%E3%83%AD%E3%83%BC%E3%82%AB%E3%83%AB%E3%82%B7%E3%82%B9%E3%83%86%E3%83%A0%E3%81%AEuid%E3%81%AE%E6%8A%BD%E5%87%BA.html"/>
    <updated>2014-08-12T00:00:00+09:00</updated>
    <id>http://luozengbin.github.io/blog/[レシピ]ローカルシステムのuidの抽出</id>
    <content type="html"><![CDATA[<p>
LDAPにユーザID定義時にローカルシステムのUIDと被らないように、ローカルシステムのUIDと
GIDを抽出してみた。
</p>

<p>
ユーザID、1000番代以下はシステム予約番号のことがすぐわかる。
</p>
<pre class="example">
$ cat /etc/passwd | awk -F: '{print $3 "\t" $1}' | sort -n
0	root
1	bin
2	daemon
8	mail
14	ftp
32	rpc
33	http
40	named
68	uuidd
74	dovenull
76	dovecot
81	dbus
84	avahi
87	ntp
89	mysql
99	nobody
102	polkitd
124	colord
169	transmission
191	systemd-journal-gateway
192	systemd-timesync
193	systemd-network
194	systemd-bus-proxy
195	systemd-resolve
241	mediatomb
439	ldap
998	dnsmasq
999	git
1000	akira
1002	amule
</pre>

<p>
グループID一覧
</p>
<pre class="example">
$ cat /etc/group | awk -F: '{print $3 "\t" $1}' | sort -n
0	root
1	bin
2	daemon
3	sys
4	adm
5	tty
6	disk
7	lp
8	mem
9	kmem
10	wheel
11	ftp
12	mail
14	uucp
19	log
20	utmp
21	locate
24	rfkill
25	smmsp
32	rpc
33	http
40	named
50	games
54	lock
68	uuidd
74	dovenull
76	dovecot
81	dbus
84	avahi
87	ntp
89	mysql
90	network
91	video
92	audio
93	optical
94	floppy
95	storage
96	scanner
97	input
98	power
99	nobody
100	users
102	polkitd
124	colord
169	transmission
190	systemd-journal
191	systemd-journal-gateway
192	systemd-timesync
193	systemd-network
194	systemd-bus-proxy
195	systemd-resolve
241	mediatomb
439	ldap
998	dnsmasq
999	git
1002	g001
1003	g002
1004	g003
1005	amule
</pre>

<p>
<code>sort</code> コマンドで数字順でソートするためのオプションが <code>-n</code> であることを復習致しました。
</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[レシピ]LDAPサーバの構築]]></title>
    <link href="http://luozengbin.github.io/blog/2014-08-12-%5B%E3%83%AC%E3%82%B7%E3%83%94%5Dldap%E3%82%B5%E3%83%BC%E3%83%90%E3%81%AE%E6%A7%8B%E7%AF%89.html"/>
    <updated>2014-08-12T00:00:00+09:00</updated>
    <id>http://luozengbin.github.io/blog/[レシピ]ldapサーバの構築</id>
    <content type="html"><![CDATA[<div id="table-of-contents">
<h2>Table of Contents</h2>
<div id="text-table-of-contents">
<ul>
<li><a href="#sec-1">1. 知識のおさらい</a>
<ul>
<li><a href="#sec-1-1">1.1. 用語</a></li>
<li><a href="#sec-1-2">1.2. LDAPの役割</a></li>
<li><a href="#sec-1-3">1.3. LDAPへ接続時（バインド）の認証方式</a></li>
<li><a href="#sec-1-4">1.4. LDAPによるLinuxのログイン認証</a></li>
<li><a href="#sec-1-5">1.5. LDAPによるSambaサーバのユーザ認証</a></li>
<li><a href="#sec-1-6">1.6. LDAPデータ構造サンプル</a></li>
<li><a href="#sec-1-7">1.7. よく使用するObjectClass</a></li>
<li><a href="#sec-1-8">1.8. ldapsearchの使い方</a></li>
<li><a href="#sec-1-9">1.9. ldapaddの使い方</a></li>
<li><a href="#sec-1-10">1.10. ldapdeleteの使い方</a></li>
<li><a href="#sec-1-11">1.11. ldapmodifyの使い方</a></li>
<li><a href="#sec-1-12">1.12. slapindexの使い方</a></li>
</ul>
</li>
<li><a href="#sec-2">2. 環境構成</a></li>
<li><a href="#sec-3">3. OpenLDAPのインストール</a></li>
<li><a href="#sec-4">4. OpenLDAPサーバ設定と起動</a></li>
<li><a href="#sec-5">5. OpenLDAPログ出力設定</a></li>
<li><a href="#sec-6">6. LDAPクライアントの設定</a></li>
<li><a href="#sec-7">7. LDAPクライアントとサーバ間の通信内容</a></li>
<li><a href="#sec-8">8. LDAPによるLinuxのログイン認証設定</a>
<ul>
<li><a href="#sec-8-1">8.1. LDAP連携用ライブラリの導入</a></li>
<li><a href="#sec-8-2">8.2. LDAP認証PAMモジュールの設定</a></li>
<li><a href="#sec-8-3">8.3. パスワード変更時の挙動</a></li>
<li><a href="#sec-8-4">8.4. ログイン時の挙動</a></li>
</ul>
</li>
<li><a href="#sec-9">9. 宿題</a></li>
<li><a href="#sec-10">10. 参考情報</a></li>
</ul>
</div>
</div>
<p>
夏休み中にOpenLDAPの構築復習を行いました。ここでメモしておきます。
</p>

<p>
<!-- more -->
</p>

<div id="outline-container-sec-1" class="outline-2">
<h2 id="sec-1"><span class="section-number-2">1</span> 知識のおさらい</h2>
<div class="outline-text-2" id="text-1">
</div><div id="outline-container-sec-1-1" class="outline-3">
<h3 id="sec-1-1"><span class="section-number-3">1.1</span> 用語</h3>
<div class="outline-text-3" id="text-1-1">
<ul class="org-ul">
<li>LDAP: Lightweight Directory Access Protocol、ディレクトリ・サービス
ツリー構造、検索中心としたサービス
</li>
<li>DIT: Directory information Tree、ディレクトリ情報ツリー
</li>
<li>DN: Distinguished Name、ツリーの頂点に向かって全てのエントリを表す主キーのようなもの
</li>
<li>エントリ: LDAPに保存されるデータのこと
</li>
<li>ObjectClass: エントリの種類、エントリにどんな情報を持たせるかの定義、一つエントリに
複数ObjectClasの指定は可能です。また、ObjectClass自身は構造型(Structural)と補助型
(Auxiliary)の２種類があります、各エントリは少なくても１つの構造型ObjectClassに属する
必要があります
</li>
</ul>
</div>
</div>

<div id="outline-container-sec-1-2" class="outline-3">
<h3 id="sec-1-2"><span class="section-number-3">1.2</span> LDAPの役割</h3>
<div class="outline-text-3" id="text-1-2">
<ul class="org-ul">
<li>ユーザ情報参照機能
</li>
<li>ユーザ認証機能
</li>
</ul>
</div>
</div>

<div id="outline-container-sec-1-3" class="outline-3">
<h3 id="sec-1-3"><span class="section-number-3">1.3</span> LDAPへ接続時（バインド）の認証方式</h3>
<div class="outline-text-3" id="text-1-3">
<ul class="org-ul">
<li>簡易認証: 接続時のユーザDNに加えてパスワードが平文でLDAPサーバに送られる、そのため
SSL/TLSで通信経路の暗号化しておく必要があります。
</li>
<li>SASL認証: Simple Authentication and Security Layer、外部の認証システム（モジュール）
に認証処理を委譲する。ただし、LDAP内のエントリのDNと外部認証システムのユーザ識別子
のマッピング定義が必要となります。
</li>
</ul>
</div>
</div>

<div id="outline-container-sec-1-4" class="outline-3">
<h3 id="sec-1-4"><span class="section-number-3">1.4</span> LDAPによるLinuxのログイン認証</h3>
<div class="outline-text-3" id="text-1-4">
<ul class="org-ul">
<li>ログイン認証をLDAPサーバに委譲するためにPAMモジュールにpam_ldapを利用します。また、
  pam_ldapの仕様上LDAP認証バインド時に簡易認証しかできない。
</li>
<li>LDAPで認証させるために、ログインユーザIDでLDAP認証バインドを行う
</li>
</ul>

<p>
認証メカニズム、Linuxサーバでpam_ldapmoモジュールでSSHクライアントから入力されたユーザ
IDとパスワードをLDAPサーバに認証バインドを実施する。
</p>
<pre class="example">
                   userid:akira               dn    : uid=akira,ou=User,dc=jizai-domain,dc=jp
                   passwd:xxxxxx              passwd: xxxxxx
+---------------+                +-------------+                    +------------+
|SSHクライアント+---------------&gt;| Linuxサーバ +-------------------&gt;| LDAPサーバ |
+---------------+   ログイン     +-------------+  LDAP認証バインド  +------------+
</pre>
</div>
</div>

<div id="outline-container-sec-1-5" class="outline-3">
<h3 id="sec-1-5"><span class="section-number-3">1.5</span> LDAPによるSambaサーバのユーザ認証</h3>
<div class="outline-text-3" id="text-1-5">
<p>
認証メカニズム、Sambaサーバは管理者権限でWindows PCから入力されたユーザIDを検索条件で
LDAPサーバから該当ユーザのパスワード情報を取得して、比較を行う。
</p>
<pre class="example">
                   userid:akira               rootdn: uid=Manager,dc=jizai-domain,dc=jp
                   passwd:xxxxxx              passwd: xxxxxx
+---------------+                +-------------+                    +------------+
|Windows PC     +---------------&gt;| Sambaサーバ +&lt;-------------------| LDAPサーバ |
+---------------+   ユーザID     +-------------+   管理者権限で     +------------+
                    パスワード     パスワード      LDAP認証バインドして、
                                   確認を行う      ユーザパスワード情報を取得する
</pre>

<p>
簡易認証時のtcpdumpの結果
</p>
<pre class="example">
</pre>
</div>
</div>

<div id="outline-container-sec-1-6" class="outline-3">
<h3 id="sec-1-6"><span class="section-number-3">1.6</span> LDAPデータ構造サンプル</h3>
<div class="outline-text-3" id="text-1-6">
<p>
ルートエントリ直下の <code>cn=Manager</code> エントリはrootdnと呼ばれる、LDAPの特権ユーザです。
このユーザでLDAPとバインドすると任意のデータ操作が可能になります。rootdnエントリは
<code>/etc/openaldap/slapd.conf</code> にて定義される、実際にDITになくてもよいです。
</p>
<pre class="example">
                            ┏━━━━━━━━━━━┓
                            ┃dc=jizai-domain,dc=jp ┃
                            ┗━━━━━┳━━━━━┛
                                        ┃
                    ┏━━━━━━━━━╋━━━━━━━━━━━━━━━━━━━━━━┓
                    ┃                  ┃                                            ┃
            ┏━━━┻━━┓    ┏━━━┻━━━┓                          ┏━━━━┻━━━┓
    rootdn→┃ cn=Manager ┃    ┃o=Linux Users ┃                          ┃ o=Samba Users  ┃ ← アプリケーション毎に分ける管理する
特権ユーザ  ┗━━━━━━┛    ┗━━━┳━━━┛                          ┗━━━━┯━━━┛
                                        ┃                                            │
                          ┏━━━━━━┻━━━━━━━┓                            │
                    ┏━━┻━━┓              ┏━━━┻━━┓            Sambaサーバユーザ情報
                    ┃ou=User   ┃              ┃ ou=Group   ┃
                    ┗━━┳━━┛              ┗━━━┳━━┛
                  ┏━━━┻━━┓              ┏━━━┻━━━┓
            ┏━━┻━━┓┏━━┻━━┓  ┏━━┻━━┓  ┏━━┻━━┓
            ┃uid=user01┃┃uid=user02┃  ┃cn=group01┃  ┃cn=group02┃
            ┗━━━━━┛┗━━━━━┛  ┗━━━━━┛  ┗━━━━━┛

※ユーザとグループの紐付けはユーザエントリやグループエントリの属性値に表現される。
</pre>

<p>
ルートエントリの定義
</p>
<pre class="example">
dn: dc=jizai-domain,dc=jp
dc: jizai-domain             ★ dcObjectの属性
o: jizai-domain Corporation  ★ organizationの属性
objectClass: dcObject
objectClass: organization
</pre>

<p>
rootdnの定義
</p>
<pre class="example">
dn: cn=Manager,dc=jizai-domain,dc=jp
cn: Manager
objectClass: organizationalRole
</pre>

<p>
Linux系ユーザとSamba系ユーザの親エントリの定義
</p>
<pre class="example">
dn: o=Linux Users,dc=jizai-domain,dc=jp
o: Linux Users
objectClass: organization

dn: o=Smaba Users,dc=jizai-domain,dc=jp
o: Smaba Users
objectClass: organization
</pre>


<p>
Linuxユーザとグループの親エントリの定義
</p>
<pre class="example">
dn: ou=User,o=Linux Users,dc=jizai-domain,dc=jp
ou: User
objectClass: organizationalUnit

dn: ou=Group,o=Linux Users,dc=jizai-domain,dc=jp
ou: Group
objectClass: organizationalUnit
</pre>

<p>
Linuxユーザのエントリ定義
</p>
<pre class="example">
# --- user01 ---
dn: uid=user01,ou=User,o=Linux Users,dc=jizai-domain,dc=jp
uid: user01                 ★accountオブジェクトの属性
cn: Test User01
uidNumber: 5001
gidNumber: 3001
homeDirectory: /home/user01
loginShell: /bin/bash
userPassword: P@ssw0rd      ★パスワードが平文で登録される
gecos: Test User No01       ★ユーザのフルネーム
shadowLastChange: 0         ★パスワードの最終更新日
shadowMin: 0                ★パスワード変更可能になるまでの日数
shadowMax: 99999            ★パスワードの有効期限日数
shadowWarning: 7            ★パスワード期限切れ警告表示開始日数
objectClass: account        ★構造型ObjectClass
objectClass: posixAccount   ★補助型ObjectClass
objectClass: shadowAccount  ★補助型ObjectClass

# --- user02 ---
dn: uid=user02,ou=User,o=Linux Users,dc=jizai-domain,dc=jp
uid: user02
cn: Test User02
uidNumber: 5002
gidNumber: 3002
homeDirectory: /home/user02
loginShell: /bin/bash
userPassword: {SSHA}KpJwwA2Sbt29GGNZxdasq5XRml6J5q2Z   ★Salted SHA-1方式で暗号化された
gecos: Test User No02  ★ユーザのフルネーム
shadowLastChange: 0    ★パスワードの最終更新日、0で指定すると初回ログイン時にパスワードの変更を求めます
shadowMin: 0           ★パスワード変更可能になるまでの日数
shadowMax: 99999       ★パスワードの有効期限日数
shadowWarning: 7       ★パスワード期限切れ警告表示開始日数
objectClass: account
objectClass: posixAccount
objectClass: shadowAccount
</pre>

<p>
userPasswordの暗号化文字列は次のコマンドで得ることができる。
</p>
<pre class="example">
$ slappasswd -h {SSHA} -s P@ssw0rd
{SSHA}KpJwwA2Sbt29GGNZxdasq5XRml6J5q2Z

$ slappasswd -h {SMD5} -s P@ssw0rd
{SMD5}AIZvIadIpJbgKPQ7DtjZ4U6xBVY=
</pre>
<p>
<code>-h</code> の後ろに暗号化方式を指定する。j
</p>

<p>
Linuxグループのエントリ定義
</p>
<pre class="example">
#--- group01 ---
dn: cn=group01,ou=Group,o=Linux Users,dc=jizai-domain,dc=jp
cn: group01
gidNumber: 3001
objectClass: posixGroup

#--- group02 ---
dn: cn=group02,ou=Group,o=Linux Users,dc=jizai-domain,dc=jp
cn: group02
gidNumber: 3002
memberUid: 5001  ★group02をuser01のセカンドグループとして使う
objectClass: posixGroup
</pre>
</div>
</div>

<div id="outline-container-sec-1-7" class="outline-3">
<h3 id="sec-1-7"><span class="section-number-3">1.7</span> よく使用するObjectClass</h3>
<div class="outline-text-3" id="text-1-7">
<table border="2" cellspacing="0" cellpadding="6" rules="groups" frame="hsides">


<colgroup>
<col  class="left" />

<col  class="left" />

<col  class="left" />
</colgroup>
<thead>
<tr>
<th scope="col" class="left">スキーマ</th>
<th scope="col" class="left">ObjectClass</th>
<th scope="col" class="left">用途</th>
</tr>
</thead>
<tbody>
<tr>
<td class="left">core</td>
<td class="left">dcObject</td>
<td class="left">ルートの定義</td>
</tr>

<tr>
<td class="left">&#xa0;</td>
<td class="left">organization</td>
<td class="left">アプリケーションの区分に使用</td>
</tr>

<tr>
<td class="left">&#xa0;</td>
<td class="left">organizationalRole</td>
<td class="left">rootdn定義に使用</td>
</tr>

<tr>
<td class="left">&#xa0;</td>
<td class="left">organizationalUnit</td>
<td class="left">ユーザ情報とグループ情報の区別に使用</td>
</tr>

<tr>
<td class="left">consine</td>
<td class="left">account</td>
<td class="left">ユーザID定義に使用する</td>
</tr>

<tr>
<td class="left">nis</td>
<td class="left">posixAccount</td>
<td class="left">POSIXユーザ定義に使用する</td>
</tr>

<tr>
<td class="left">&#xa0;</td>
<td class="left">shadowAccount</td>
<td class="left">パスワード定義に使用する</td>
</tr>

<tr>
<td class="left">&#xa0;</td>
<td class="left">posixGroup</td>
<td class="left">グループ定義に使用する</td>
</tr>
</tbody>
</table>

<p>
ユーザのプライマリグループはposixAccountのgidNumber属性にて指定する、セカンドグ
ループはposixGroupのmemberUidにて指定する。posixGroupのmemberUidは複数指定可能。
</p>

<p>
そのなか汎用的な属性
</p>
<table border="2" cellspacing="0" cellpadding="6" rules="groups" frame="hsides">


<colgroup>
<col  class="left" />

<col  class="left" />
</colgroup>
<thead>
<tr>
<th scope="col" class="left">属性名</th>
<th scope="col" class="left">説明</th>
</tr>
</thead>
<tbody>
<tr>
<td class="left">dc</td>
<td class="left">Domain Component/ ドメイン名の要素</td>
</tr>

<tr>
<td class="left">o</td>
<td class="left">Organization/ 組織名</td>
</tr>

<tr>
<td class="left">ou</td>
<td class="left">OrganizationUnit/ 部署名</td>
</tr>

<tr>
<td class="left">cn</td>
<td class="left">Common Name/ 氏名</td>
</tr>
</tbody>
</table>
</div>
</div>

<div id="outline-container-sec-1-8" class="outline-3">
<h3 id="sec-1-8"><span class="section-number-3">1.8</span> ldapsearchの使い方</h3>
<div class="outline-text-3" id="text-1-8">
<p>
アクセスコントロール設定でユーザ毎に検索結果の絞り込みが可能です。
以下は簡易認証を用いた検索のコマンド書式です。
</p>
<pre class="example">
$ ldapsearch -x -D &lt;バインドDN&gt; -b &lt;サーチベース&gt; -s &lt;スコープ&gt; -w &lt;パスワード&gt; &lt;検索フィルタ&gt; &lt;取得する属性&gt;
</pre>
<ul class="org-ul">
<li><code>-x</code> 簡易認証でバインドする
</li>
<li><code>-D</code> 認証バインドで使用するDNの指定
</li>
<li><code>-b</code> サーチベース、検索の起点とするエントリの指定
</li>
<li><code>-s</code> 検索スコープの指定
</li>
<li><code>-w</code> 簡易認証のパスワード指定、 <code>-W</code> （大文字）で指定した場合、対話式でパスワードの
が求められる
</li>
</ul>

<p>
指定可能な検索スコープ
</p>
<table border="2" cellspacing="0" cellpadding="6" rules="groups" frame="hsides">


<colgroup>
<col  class="left" />

<col  class="left" />
</colgroup>
<thead>
<tr>
<th scope="col" class="left">スコープ</th>
<th scope="col" class="left">説明</th>
</tr>
</thead>
<tbody>
<tr>
<td class="left">base</td>
<td class="left">サーチベース自身に対して検索する</td>
</tr>

<tr>
<td class="left">one</td>
<td class="left">サーチベース直下のエントリを検索する</td>
</tr>

<tr>
<td class="left">sub</td>
<td class="left">サーチベースを含むその下の全てのエントリを検索する</td>
</tr>

<tr>
<td class="left">children</td>
<td class="left">subの範囲からサーチベースを除く</td>
</tr>
</tbody>
</table>

<p>
検索フィルタの組み合わせ方法
</p>
<table border="2" cellspacing="0" cellpadding="6" rules="groups" frame="hsides">


<colgroup>
<col  class="left" />

<col  class="left" />
</colgroup>
<thead>
<tr>
<th scope="col" class="left">記法</th>
<th scope="col" class="left">意味</th>
</tr>
</thead>
<tbody>
<tr>
<td class="left">(&amp;(A)(B))</td>
<td class="left">A and B</td>
</tr>

<tr>
<td class="left">(&vert;(A)(B))</td>
<td class="left">A or B</td>
</tr>

<tr>
<td class="left">(!(A))</td>
<td class="left">not A</td>
</tr>
</tbody>
</table>

<p>
<code>user01</code> の定義を検索する例
</p>
<pre class="example">
$ ldapsearch -x -D "cn=Manager,dc=jizai-domain,dc=jp" -b "dc=jizai-domain,dc=jp" "uid=user01" -W -LLL
Enter LDAP Password: 
dn: uid=user01,ou=User,dc=jizai-domain,dc=jp
uid: user01
cn: Test User 01
objectClass: account
objectClass: posixAccount
objectClass: top
userPassword:: dXNlcjAx  ★Base64形式で表示される
loginShell: /bin/bash
uidNumber: 5001
gidNumber: 3001
homeDirectory: /home/user01
</pre>
<p>
<code>-LLL</code> オプションは検索結果以外の余計な除法を落とすオプションです。
</p>

<p>
匿名で検索する例
</p>
<pre class="example">
$ ldapsearch -x -b "dc=jizai-domain,dc=jp" "(cn=group01)" -LLL
dn: cn=group01,ou=Group,dc=jizai-domain,dc=jp
objectClass: posixGroup
cn: group01
gidNumber: 3001
</pre>
</div>
</div>

<div id="outline-container-sec-1-9" class="outline-3">
<h3 id="sec-1-9"><span class="section-number-3">1.9</span> ldapaddの使い方</h3>
<div class="outline-text-3" id="text-1-9">
<p>
<code>ldapadd</code> エントリ登録するためのコマンドです。以下はLDAPに新規登録するエントリの定義ファ
イル <code>01.base.ldif</code> を <code>-f</code> オプションで指定して登録する例です。
</p>

<pre class="example">
$  ldapadd -x -D "cn=Manager,dc=jizai-domain,dc=jp" -W -f 01.base.ldif
Enter LDAP Password: 
adding new entry "o=Linux Users,dc=jizai-domain,dc=jp"

adding new entry "o=Smaba Users,dc=jizai-domain,dc=jp"

adding new entry "ou=User,o=Linux Users,dc=jizai-domain,dc=jp"

adding new entry "ou=Group,o=Linux Users,dc=jizai-domain,dc=jp"
</pre>

<p>
<code>ldapadd</code> コマンド実行時のログ
</p>
<pre class="example">
2014-08-13T14:43:35+09:00 pipi local4 debug slapd[172]:  conn=1044 fd=10 ACCEPT from IP=[::1]:58644 (IP=[::]:389)
2014-08-13T14:43:35+09:00 pipi local4 debug slapd[172]:  conn=1044 op=0 BIND dn="cn=Manager,dc=jizai-domain,dc=jp" method=128
2014-08-13T14:43:35+09:00 pipi local4 debug slapd[172]:  conn=1044 op=0 BIND dn="cn=Manager,dc=jizai-domain,dc=jp" mech=SIMPLE ssf=0
2014-08-13T14:43:35+09:00 pipi local4 debug slapd[172]:  conn=1044 op=0 RESULT tag=97 err=0 text=
2014-08-13T14:43:35+09:00 pipi local4 debug slapd[172]:  conn=1044 op=1 ADD dn="o=Linux Users,dc=jizai-domain,dc=jp"
2014-08-13T14:43:35+09:00 pipi local4 debug slapd[172]:  conn=1044 op=2 ADD dn="o=Smaba Users,dc=jizai-domain,dc=jp"
2014-08-13T14:43:35+09:00 pipi local4 debug slapd[172]:  conn=1044 op=1 RESULT tag=105 err=0 text=
2014-08-13T14:43:35+09:00 pipi local4 debug slapd[172]:  conn=1044 op=3 ADD dn="ou=User,o=Linux Users,dc=jizai-domain,dc=jp"
2014-08-13T14:43:35+09:00 pipi local4 debug slapd[172]:  conn=1044 op=2 RESULT tag=105 err=0 text=
2014-08-13T14:43:35+09:00 pipi local4 debug slapd[172]:  conn=1044 op=4 ADD dn="ou=Group,o=Linux Users,dc=jizai-domain,dc=jp"
2014-08-13T14:43:35+09:00 pipi local4 debug slapd[172]:  conn=1044 op=3 RESULT tag=105 err=0 text=
2014-08-13T14:43:35+09:00 pipi local4 debug slapd[172]:  conn=1044 op=5 UNBIND
2014-08-13T14:43:35+09:00 pipi local4 debug slapd[172]:  conn=1044 op=4 RESULT tag=105 err=0 text=
2014-08-13T14:43:35+09:00 pipi local4 debug slapd[172]:  conn=1044 fd=10 closed
</pre>
</div>
</div>

<div id="outline-container-sec-1-10" class="outline-3">
<h3 id="sec-1-10"><span class="section-number-3">1.10</span> ldapdeleteの使い方</h3>
<div class="outline-text-3" id="text-1-10">
<p>
<code>ldapdelete</code> コマンドでLDAPに登録されたエントリの削除することができる。 <code>-r</code> オプショ
ンでサブツリーを含めて削除することも可能です。
</p>
<pre class="example">
$ ldapdelete -x -W -D "cn=Manager,dc=jizai-domain,dc=jp" "ou=User,dc=jizai-domain,dc=jp" -r
</pre>

<p>
以下は実行時のログです。
</p>
<pre class="example">
2014-08-13T00:05:27+09:00 pipi local4 debug slapd[172]:  conn=1027 fd=10 ACCEPT from IP=[::1]:58548 (IP=[::]:389)
2014-08-13T00:05:27+09:00 pipi local4 debug slapd[172]:  conn=1027 op=0 BIND dn="cn=Manager,dc=jizai-domain,dc=jp" method=128
2014-08-13T00:05:27+09:00 pipi local4 debug slapd[172]:  conn=1027 op=0 BIND dn="cn=Manager,dc=jizai-domain,dc=jp" mech=SIMPLE ssf=0
2014-08-13T00:05:27+09:00 pipi local4 debug slapd[172]:  conn=1027 op=0 RESULT tag=97 err=0 text=
2014-08-13T00:05:27+09:00 pipi local4 debug slapd[172]:  conn=1027 op=1 SRCH base="ou=User,dc=jizai-domain,dc=jp" scope=1 deref=0 filter="(objectClass=*)"
2014-08-13T00:05:27+09:00 pipi local4 debug slapd[172]:  conn=1027 op=1 SRCH attr=1.1
2014-08-13T00:05:28+09:00 pipi local4 debug slapd[172]:  conn=1027 op=2 SRCH base="uid=user01,ou=User,dc=jizai-domain,dc=jp" scope=1 deref=0 filter="(objectClass=*)"
2014-08-13T00:05:28+09:00 pipi local4 debug slapd[172]:  conn=1027 op=2 SRCH attr=1.1
2014-08-13T00:05:28+09:00 pipi local4 debug slapd[172]:  conn=1027 op=2 SEARCH RESULT tag=101 err=0 nentries=0 text=
2014-08-13T00:05:28+09:00 pipi local4 debug slapd[172]:  conn=1027 op=1 SEARCH RESULT tag=101 err=0 nentries=5 text=
2014-08-13T00:05:28+09:00 pipi local4 debug slapd[172]:  conn=1027 op=3 DEL dn="uid=user01,ou=User,dc=jizai-domain,dc=jp"    ★削除さエントリ
2014-08-13T00:05:28+09:00 pipi local4 debug slapd[172]:  conn=1027 op=3 RESULT tag=107 err=0 text=
2014-08-13T00:05:28+09:00 pipi local4 debug slapd[172]:  conn=1027 op=4 SRCH base="uid=user02,ou=User,dc=jizai-domain,dc=jp" scope=1 deref=0 filter="(objectClass=*)"
2014-08-13T00:05:28+09:00 pipi local4 debug slapd[172]:  conn=1027 op=4 SRCH attr=1.1
2014-08-13T00:05:28+09:00 pipi local4 debug slapd[172]:  conn=1027 op=4 SEARCH RESULT tag=101 err=0 nentries=0 text=
2014-08-13T00:05:28+09:00 pipi local4 debug slapd[172]:  conn=1027 op=5 DEL dn="uid=user02,ou=User,dc=jizai-domain,dc=jp"
2014-08-13T00:05:28+09:00 pipi local4 debug slapd[172]:  conn=1027 op=5 RESULT tag=107 err=0 text=
2014-08-13T00:05:28+09:00 pipi local4 debug slapd[172]:  conn=1027 op=6 SRCH base="uid=user03,ou=User,dc=jizai-domain,dc=jp" scope=1 deref=0 filter="(objectClass=*)"
2014-08-13T00:05:28+09:00 pipi local4 debug slapd[172]:  conn=1027 op=6 SRCH attr=1.1
2014-08-13T00:05:28+09:00 pipi local4 debug slapd[172]:  conn=1027 op=7 DEL dn="uid=user03,ou=User,dc=jizai-domain,dc=jp"
2014-08-13T00:05:28+09:00 pipi local4 debug slapd[172]:  conn=1027 op=6 SEARCH RESULT tag=101 err=0 nentries=0 text=
2014-08-13T00:05:28+09:00 pipi local4 debug slapd[172]:  conn=1027 op=8 SRCH base="uid=hoge01,ou=User,dc=jizai-domain,dc=jp" scope=1 deref=0 filter="(objectClass=*)"
2014-08-13T00:05:28+09:00 pipi local4 debug slapd[172]:  conn=1027 op=8 SRCH attr=1.1
2014-08-13T00:05:28+09:00 pipi local4 debug slapd[172]:  conn=1027 op=7 RESULT tag=107 err=0 text=
2014-08-13T00:05:28+09:00 pipi local4 debug slapd[172]:  conn=1027 op=9 DEL dn="uid=hoge01,ou=User,dc=jizai-domain,dc=jp"
2014-08-13T00:05:28+09:00 pipi local4 debug slapd[172]:  conn=1027 op=8 SEARCH RESULT tag=101 err=0 nentries=0 text=
2014-08-13T00:05:28+09:00 pipi local4 debug slapd[172]:  conn=1027 op=10 SRCH base="uid=hoge02,ou=User,dc=jizai-domain,dc=jp" scope=1 deref=0 filter="(objectClass=*)"
2014-08-13T00:05:28+09:00 pipi local4 debug slapd[172]:  conn=1027 op=10 SRCH attr=1.1
2014-08-13T00:05:28+09:00 pipi local4 debug slapd[172]:  conn=1027 op=10 SEARCH RESULT tag=101 err=0 nentries=0 text=
2014-08-13T00:05:28+09:00 pipi local4 debug slapd[172]:  conn=1027 op=9 RESULT tag=107 err=0 text=
2014-08-13T00:05:28+09:00 pipi local4 debug slapd[172]:  conn=1027 op=11 DEL dn="uid=hoge02,ou=User,dc=jizai-domain,dc=jp"
2014-08-13T00:05:28+09:00 pipi local4 debug slapd[172]:  conn=1027 op=11 RESULT tag=107 err=0 text=
2014-08-13T00:05:28+09:00 pipi local4 debug slapd[172]:  conn=1027 op=12 DEL dn="ou=User,dc=jizai-domain,dc=jp"
2014-08-13T00:05:28+09:00 pipi local4 debug slapd[172]:  conn=1027 op=13 UNBIND
2014-08-13T00:05:28+09:00 pipi local4 debug slapd[172]:  conn=1027 op=12 RESULT tag=107 err=0 text=
2014-08-13T00:05:28+09:00 pipi local4 debug slapd[172]:  conn=1027 fd=10 closed
</pre>
</div>
</div>

<div id="outline-container-sec-1-11" class="outline-3">
<h3 id="sec-1-11"><span class="section-number-3">1.11</span> ldapmodifyの使い方</h3>
<div class="outline-text-3" id="text-1-11">
<p>
<code>modify_top.ldif</code> に変更内容を記述する
</p>
<pre class="example">
$ cat modify_top.ldif
dn: dc=jizai-domain,dc=jp
changetype: modify
replace: o                    ★変更対象属性
o: jizai-domain Corporation   ★変更内容
-                             ★複数変更対象間のセパレーター
add: description
description: this is my first test suffix
</pre>

<p>
<code>ldapmodify</code> コマンドで変更を実施する
</p>
<pre class="example">
$ ldapmodify -x -W -D "cn=Manager,dc=jizai-domain,dc=jp" -f modify_top.ldif
Enter LDAP Password: 
modifying entry "dc=jizai-domain,dc=jp"
</pre>

<p>
以下は変更時の動作ログです。
</p>
<pre class="example">
2014-08-13T00:20:58+09:00 pipi local4 debug slapd[172]:  conn=1036 fd=10 ACCEPT from IP=[::1]:58557 (IP=[::]:389)
2014-08-13T00:20:58+09:00 pipi local4 debug slapd[172]:  conn=1036 op=0 BIND dn="cn=Manager,dc=jizai-domain,dc=jp" method=128
2014-08-13T00:20:58+09:00 pipi local4 debug slapd[172]:  conn=1036 op=0 BIND dn="cn=Manager,dc=jizai-domain,dc=jp" mech=SIMPLE ssf=0
2014-08-13T00:20:58+09:00 pipi local4 debug slapd[172]:  conn=1036 op=0 RESULT tag=97 err=0 text=
2014-08-13T00:20:58+09:00 pipi local4 debug slapd[172]:  conn=1036 op=1 MOD dn="dc=jizai-domain,dc=jp"
2014-08-13T00:20:58+09:00 pipi local4 debug slapd[172]:  conn=1036 op=1 MOD attr=o description   ★変更や追加された属性
2014-08-13T00:20:58+09:00 pipi local4 debug slapd[172]:  conn=1036 op=1 RESULT tag=103 err=0 text=
2014-08-13T00:20:58+09:00 pipi local4 debug slapd[172]:  conn=1036 op=2 UNBIND
2014-08-13T00:20:58+09:00 pipi local4 debug slapd[172]:  conn=1036 fd=10 closed
</pre>
</div>
</div>

<div id="outline-container-sec-1-12" class="outline-3">
<h3 id="sec-1-12"><span class="section-number-3">1.12</span> slapindexの使い方</h3>
<div class="outline-text-3" id="text-1-12">
<p>
<code>slapindex</code> は <code>slapd.conf</code> 設定ファイルに定義されたインデックスメタ情報を元にインデッ
クスの作成/再作成をするコマンドです。このコマンドを実行時に <code>slapd</code>  デーモンプロセス
を停止しておく必要があります。
</p>

<pre class="example">
akira@pipi ~]$ sudo systemctl stop slapd
[sudo] password for akira: 
[akira@pipi ~]$ sudo -u ldap slapindex -b dc=jizai-domain,dc=jp -v
53ef16ba bdb_monitor_db_open: monitoring disabled; configure monitor database to enable
indexing id=00000001
indexing id=00000002
indexing id=00000003
indexing id=00000004
indexing id=00000005
indexing id=00000006
indexing id=00000007
indexing id=00000008
indexing id=00000009
indexing id=0000000a
indexing id=0000000b
indexing id=0000000c
[akira@pipi ~]$ sudo systemctl start slapd
[akira@pipi ~]$
</pre>
</div>
</div>
</div>

<div id="outline-container-sec-2" class="outline-2">
<h2 id="sec-2"><span class="section-number-2">2</span> 環境構成</h2>
</div>

<div id="outline-container-sec-3" class="outline-2">
<h2 id="sec-3"><span class="section-number-2">3</span> OpenLDAPのインストール</h2>
<div class="outline-text-2" id="text-3">
<p>
<code>sudo pacman -S openldap</code> でインストールを行うと、openldapパッケージが以下の形でシス
テムに展開される。
</p>
<pre class="example">
$ pacman -Ql openldap
openldap /etc/
openldap /etc/openldap/
openldap /etc/openldap/DB_CONFIG.example
openldap /etc/openldap/schema/              ★ 予め用意されたスキーマ
openldap /etc/openldap/schema/README
openldap /etc/openldap/schema/collective.ldif
openldap /etc/openldap/schema/collective.schema
openldap /etc/openldap/schema/corba.ldif
openldap /etc/openldap/schema/corba.schema
openldap /etc/openldap/schema/core.ldif
openldap /etc/openldap/schema/core.schema
openldap /etc/openldap/schema/cosine.ldif
openldap /etc/openldap/schema/cosine.schema
openldap /etc/openldap/schema/duaconf.ldif
openldap /etc/openldap/schema/duaconf.schema
openldap /etc/openldap/schema/dyngroup.ldif
openldap /etc/openldap/schema/dyngroup.schema
openldap /etc/openldap/schema/inetorgperson.ldif
openldap /etc/openldap/schema/inetorgperson.schema
openldap /etc/openldap/schema/java.ldif
openldap /etc/openldap/schema/java.schema
openldap /etc/openldap/schema/ldapns.schema
openldap /etc/openldap/schema/misc.ldif
openldap /etc/openldap/schema/misc.schema
openldap /etc/openldap/schema/nis.ldif
openldap /etc/openldap/schema/nis.schema
openldap /etc/openldap/schema/openldap.ldif
openldap /etc/openldap/schema/openldap.schema
openldap /etc/openldap/schema/pmi.ldif
openldap /etc/openldap/schema/pmi.schema
openldap /etc/openldap/schema/ppolicy.ldif
openldap /etc/openldap/schema/ppolicy.schema
openldap /etc/openldap/slapd.conf   ★LDAP設定ファイル
openldap /etc/openldap/slapd.d/
openldap /etc/openldap/slapd.ldif
openldap /usr/
openldap /usr/bin/
openldap /usr/bin/ldapadd         ★エントリの登録に使う
openldap /usr/bin/ldapcompare
openldap /usr/bin/ldapdelete      ★エントリの削除に使う
openldap /usr/bin/ldapexop
openldap /usr/bin/ldapmodify      ★エントリ属性の変更使う
openldap /usr/bin/ldapmodrdn
openldap /usr/bin/ldappasswd
openldap /usr/bin/ldapsearch      ★エントリの検索に使う
openldap /usr/bin/ldapurl
openldap /usr/bin/ldapwhoami
openldap /usr/bin/slapacl
openldap /usr/bin/slapadd
openldap /usr/bin/slapauth
openldap /usr/bin/slapcat
openldap /usr/bin/slapd            ★デーモンプロセスのバイナリ →  stand-alone LDAP daemon (server)
openldap /usr/bin/slapdn
openldap /usr/bin/slapindex        ★インデックス作成/再作成
openldap /usr/bin/slappasswd
openldap /usr/bin/slapschema
openldap /usr/bin/slaptest         ★設定ファイルの検証に使う
openldap /usr/lib/
openldap /usr/lib/openldap/
openldap /usr/lib/openldap/accesslog-2.4.so.2
openldap /usr/lib/openldap/accesslog-2.4.so.2.10.2
openldap /usr/lib/openldap/accesslog.so
openldap /usr/lib/openldap/auditlog-2.4.so.2
openldap /usr/lib/openldap/auditlog-2.4.so.2.10.2
openldap /usr/lib/openldap/auditlog.so
openldap /usr/lib/openldap/collect-2.4.so.2
openldap /usr/lib/openldap/collect-2.4.so.2.10.2
openldap /usr/lib/openldap/collect.so
openldap /usr/lib/openldap/constraint-2.4.so.2
openldap /usr/lib/openldap/constraint-2.4.so.2.10.2
openldap /usr/lib/openldap/constraint.so
openldap /usr/lib/openldap/dds-2.4.so.2
openldap /usr/lib/openldap/dds-2.4.so.2.10.2
openldap /usr/lib/openldap/dds.so
openldap /usr/lib/openldap/deref-2.4.so.2
openldap /usr/lib/openldap/deref-2.4.so.2.10.2
openldap /usr/lib/openldap/deref.so
openldap /usr/lib/openldap/dyngroup-2.4.so.2
openldap /usr/lib/openldap/dyngroup-2.4.so.2.10.2
openldap /usr/lib/openldap/dyngroup.so
openldap /usr/lib/openldap/dynlist-2.4.so.2
openldap /usr/lib/openldap/dynlist-2.4.so.2.10.2
openldap /usr/lib/openldap/dynlist.so
openldap /usr/lib/openldap/memberof-2.4.so.2
openldap /usr/lib/openldap/memberof-2.4.so.2.10.2
openldap /usr/lib/openldap/memberof.so
openldap /usr/lib/openldap/nssov.so
openldap /usr/lib/openldap/nssov.so.0
openldap /usr/lib/openldap/nssov.so.0.0.0
openldap /usr/lib/openldap/pcache-2.4.so.2
openldap /usr/lib/openldap/pcache-2.4.so.2.10.2
openldap /usr/lib/openldap/pcache.so
openldap /usr/lib/openldap/ppolicy-2.4.so.2
openldap /usr/lib/openldap/ppolicy-2.4.so.2.10.2
openldap /usr/lib/openldap/ppolicy.so
openldap /usr/lib/openldap/refint-2.4.so.2
openldap /usr/lib/openldap/refint-2.4.so.2.10.2
openldap /usr/lib/openldap/refint.so
openldap /usr/lib/openldap/retcode-2.4.so.2
openldap /usr/lib/openldap/retcode-2.4.so.2.10.2
openldap /usr/lib/openldap/retcode.so
openldap /usr/lib/openldap/rwm-2.4.so.2
openldap /usr/lib/openldap/rwm-2.4.so.2.10.2
openldap /usr/lib/openldap/rwm.so
openldap /usr/lib/openldap/seqmod-2.4.so.2
openldap /usr/lib/openldap/seqmod-2.4.so.2.10.2
openldap /usr/lib/openldap/seqmod.so
openldap /usr/lib/openldap/sssvlv-2.4.so.2
openldap /usr/lib/openldap/sssvlv-2.4.so.2.10.2
openldap /usr/lib/openldap/sssvlv.so
openldap /usr/lib/openldap/syncprov-2.4.so.2
openldap /usr/lib/openldap/syncprov-2.4.so.2.10.2
openldap /usr/lib/openldap/syncprov.so
openldap /usr/lib/openldap/translucent-2.4.so.2
openldap /usr/lib/openldap/translucent-2.4.so.2.10.2
openldap /usr/lib/openldap/translucent.so
openldap /usr/lib/openldap/unique-2.4.so.2
openldap /usr/lib/openldap/unique-2.4.so.2.10.2
openldap /usr/lib/openldap/unique.so
openldap /usr/lib/openldap/valsort-2.4.so.2
openldap /usr/lib/openldap/valsort-2.4.so.2.10.2
openldap /usr/lib/openldap/valsort.so
openldap /usr/lib/slapd
openldap /usr/lib/systemd/
openldap /usr/lib/systemd/system/
openldap /usr/lib/systemd/system/slapd.service ★サービス定義ファイル
openldap /usr/lib/tmpfiles.d/
openldap /usr/lib/tmpfiles.d/slapd.conf
openldap /usr/share/
openldap /usr/share/licenses/
openldap /usr/share/licenses/openldap/
openldap /usr/share/licenses/openldap/LICENSE  ★ライセンスファイル
openldap /usr/share/man/
openldap /usr/share/man/man1/
openldap /usr/share/man/man1/ldapadd.1.gz
openldap /usr/share/man/man1/ldapcompare.1.gz
openldap /usr/share/man/man1/ldapdelete.1.gz
openldap /usr/share/man/man1/ldapexop.1.gz
openldap /usr/share/man/man1/ldapmodify.1.gz
openldap /usr/share/man/man1/ldapmodrdn.1.gz
openldap /usr/share/man/man1/ldappasswd.1.gz
openldap /usr/share/man/man1/ldapsearch.1.gz
openldap /usr/share/man/man1/ldapurl.1.gz
openldap /usr/share/man/man1/ldapwhoami.1.gz
openldap /usr/share/man/man5/
openldap /usr/share/man/man5/ldif.5.gz
openldap /usr/share/man/man5/slapd-bdb.5.gz
openldap /usr/share/man/man5/slapd-config.5.gz
openldap /usr/share/man/man5/slapd-dnssrv.5.gz
openldap /usr/share/man/man5/slapd-hdb.5.gz
openldap /usr/share/man/man5/slapd-ldap.5.gz
openldap /usr/share/man/man5/slapd-ldbm.5.gz
openldap /usr/share/man/man5/slapd-ldif.5.gz
openldap /usr/share/man/man5/slapd-mdb.5.gz
openldap /usr/share/man/man5/slapd-meta.5.gz
openldap /usr/share/man/man5/slapd-monitor.5.gz
openldap /usr/share/man/man5/slapd-ndb.5.gz
openldap /usr/share/man/man5/slapd-null.5.gz
openldap /usr/share/man/man5/slapd-passwd.5.gz
openldap /usr/share/man/man5/slapd-perl.5.gz
openldap /usr/share/man/man5/slapd-relay.5.gz
openldap /usr/share/man/man5/slapd-shell.5.gz
openldap /usr/share/man/man5/slapd-sock.5.gz
openldap /usr/share/man/man5/slapd-sql.5.gz
openldap /usr/share/man/man5/slapd.access.5.gz
openldap /usr/share/man/man5/slapd.backends.5.gz
openldap /usr/share/man/man5/slapd.conf.5.gz
openldap /usr/share/man/man5/slapd.overlays.5.gz
openldap /usr/share/man/man5/slapd.plugin.5.gz
openldap /usr/share/man/man5/slapo-accesslog.5.gz
openldap /usr/share/man/man5/slapo-auditlog.5.gz
openldap /usr/share/man/man5/slapo-chain.5.gz
openldap /usr/share/man/man5/slapo-collect.5.gz
openldap /usr/share/man/man5/slapo-constraint.5.gz
openldap /usr/share/man/man5/slapo-dds.5.gz
openldap /usr/share/man/man5/slapo-dyngroup.5.gz
openldap /usr/share/man/man5/slapo-dynlist.5.gz
openldap /usr/share/man/man5/slapo-memberof.5.gz
openldap /usr/share/man/man5/slapo-pbind.5.gz
openldap /usr/share/man/man5/slapo-pcache.5.gz
openldap /usr/share/man/man5/slapo-ppolicy.5.gz
openldap /usr/share/man/man5/slapo-refint.5.gz
openldap /usr/share/man/man5/slapo-retcode.5.gz
openldap /usr/share/man/man5/slapo-rwm.5.gz
openldap /usr/share/man/man5/slapo-sock.5.gz
openldap /usr/share/man/man5/slapo-sssvlv.5.gz
openldap /usr/share/man/man5/slapo-syncprov.5.gz
openldap /usr/share/man/man5/slapo-translucent.5.gz
openldap /usr/share/man/man5/slapo-unique.5.gz
openldap /usr/share/man/man5/slapo-valsort.5.gz
openldap /usr/share/man/man8/
openldap /usr/share/man/man8/slapacl.8.gz
openldap /usr/share/man/man8/slapadd.8.gz
openldap /usr/share/man/man8/slapauth.8.gz
openldap /usr/share/man/man8/slapcat.8.gz
openldap /usr/share/man/man8/slapd.8.gz
openldap /usr/share/man/man8/slapdn.8.gz
openldap /usr/share/man/man8/slapindex.8.gz
openldap /usr/share/man/man8/slappasswd.8.gz
openldap /usr/share/man/man8/slapschema.8.gz
openldap /usr/share/man/man8/slaptest.8.gz
openldap /var/
openldap /var/lib/
openldap /var/lib/openldap/
openldap /var/lib/openldap/openldap-data/                  ★LDAPに保存するデータがBerkeley DB形式でここで管理される
openldap /var/lib/openldap/openldap-data/DB_CONFIG.example ★データ保管バックエンドBerkeley DBの設定ファイルテンプレート
</pre>

<p>
また、 <code>slapd</code> デーモンプロセスを動かすユーザとグループ <code>ldap</code> が自動的に
<code>/etc/passwd</code> と <code>/etc/group</code> に登録される。
</p>
<pre class="example">
★ldapユーザ
$ cat /etc/passwd | grep ldap
ldap:x:439:439::/var/lib/openldap:/bin/false

★ldapグループ
$ cat /etc/group | grep ldap
ldap:x:439:
</pre>
</div>
</div>

<div id="outline-container-sec-4" class="outline-2">
<h2 id="sec-4"><span class="section-number-2">4</span> OpenLDAPサーバ設定と起動</h2>
<div class="outline-text-2" id="text-4">
<p>
OpenLDAPのサーバ設定情報は基本的 <code>/etc/openldap/slapd.conf</code> に記載される。
この設定ファイルは主に以下の情報を定義します。
</p>
<ul class="org-ul">
<li>OpenLDAPに使用するスキーマファイルの指定
</li>
<li>ルートエントリとrootdnの定義
</li>
<li>インデックスの定義(検索を向上するための設定)
</li>
<li>アクセスコントロール
</li>
<li>SSL/TLS通信暗号化時の設定情報
</li>
<li>パスワード暗号化方式の指定
</li>
</ul>

<p>
以下は <code>/etc/openldap/slapd.conf</code> 設定例です.
</p>
<pre class="example">
#
# See slapd.conf(5) for details on configuration options.
# This file should NOT be world readable.
#
#######################################################################
# 使用するスキーマファイルのインクルード
#######################################################################
include	    /etc/openldap/schema/core.schema
include     /etc/openldap/schema/cosine.schema
include     /etc/openldap/schema/nis.schema
include     /etc/openldap/schema/inetorgperson.schema
include     /etc/openldap/schema/postfix.schema

# Define global ACLs to disable default read access.

# Do not enable referrals until AFTER you have a working directory
# service AND an understanding of referrals.
#referral	ldap://root.openldap.org

pidfile		/run/openldap/slapd.pid
argsfile	/run/openldap/slapd.args

# Load dynamic backend modules:
# modulepath	/usr/lib/openldap
# moduleload	back_bdb.la
# moduleload	back_hdb.la
# moduleload	back_ldap.la

# Sample security restrictions
#	Require integrity protection (prevent hijacking)
#	Require 112-bit (3DES or better) encryption for updates
#	Require 63-bit encryption for simple bind
# security ssf=1 update_ssf=112 simple_bind=64

#######################################################################
# アクセスコントロール
#######################################################################
# Sample access control policy:
#	Root DSE: allow anyone to read it
#	Subschema (sub)entry DSE: allow anyone to read it
#	Other DSEs:
#		Allow self write access
#		Allow authenticated users read access
#		Allow anonymous users to authenticate
#	Directives needed to implement policy:
# access to dn.base="" by * read
# access to dn.base="cn=Subschema" by * read
# access to *
#	by self write
#	by users read
#	by anonymous auth
#
# if no access controls are present, the default policy
# allows anyone and everyone to read anything but restricts
# updates to rootdn.  (e.g., "access to * by * read")
#
# rootdn can always read and write EVERYTHING!

#ユーザが自分のパスワード変更できるようにアクセス権を設定
access to attrs=userPassword
  by dn="cn=Manager,dc=jizai-domain,dc=jp" write
  by self write
  by anonymous auth              ★簡易認証では一度匿名でバンドしてuserPassword属性による認証を行うため
  by * none

#管理者は書き込み可能、その他のユーザは読み取り専用
access to *
  by dn="cn=Manager,dc=jizai-domain,dc=jp" write
  by self write
  by * read

#######################################################################
# BDB database definitions (ルートエントリとrootdnの定義)
#######################################################################
database	bdb
suffix		"dc=jizai-domain,dc=jp"                    ★ルートエントリの定義
rootdn		"cn=Manager,dc=jizai-domain,dc=jp"         ★rootdnの定義
# Cleartext passwords, especially for the rootdn, should
# be avoid.  See slappasswd(8) and slapd.conf(5) for details.
# Use of strong authentication encouraged.
rootpw		{SSHA}mMRwA4mPL7hIet11pVaXdK1AaV49J7Iy
# The database directory MUST exist prior to running slapd AND
# should only be accessible by the slapd and slap tools.
# Mode 700 recommended.
directory	/var/lib/openldap/jizai-domain             ★BDBファイル格納先の指定、ディレクトリを予め作成してお必要があります

#######################################################################
# インデックスの定義
#######################################################################
# Indices to maintain
index	objectClass	                     eq,pres        ★eq:   属性値が一致する
index   uidNumber,gidNumber,loginShell   eq,pres        ★pres: 属性が存在する
index	uid,memberUid            	     eq,pres,sub    ★sub:  属性値の一部が一致する
index	ou,cn,mail,surname,givenname     eq,pres,sub
index	nisMapName,nisMapEntry    	     eq,pres,sub

#######################################################################
# SSL/TLS通信暗号化
#######################################################################

#######################################################################
# パスワード暗号化方式
#######################################################################
password-hash {SSHA}          ★パスワード属性値の暗号化方式
</pre>

<p>
設定ファイル編集完了後、director項目で指定したディレクトリを <code>ldap</code> ユーザ権限で作成しましょう。
</p>
<pre class="example">
$ sudo -u ldap mkdir /var/lib/openldap/jizai-domain
</pre>

<p>
またこのディレクトリの直下にDBDのパラメータファイル <code>DB_CONFIG</code> を予め定義しましょう。
</p>

<pre class="example">
$ sudo -u ldap touch /var/lib/openldap/jizai-domain/DB_CONFIG
$ sudo -u ldap cat /var/lib/openldap/jizai-domain/DB_CONFIG
# $OpenLDAP$
# Example DB_CONFIG file for use with slapd(8) BDB/HDB databases.
#
# See the Oracle Berkeley DB documentation
#   &lt;http://www.oracle.com/technology/documentation/berkeley-db/db/ref/env/db_config.html&gt;
# for detail description of DB_CONFIG syntax and semantics.
#
# Hints can also be found in the OpenLDAP Software FAQ
#	&lt;http://www.openldap.org/faq/index.cgi?file=2&gt;
# in particular:
#   &lt;http://www.openldap.org/faq/index.cgi?file=1075&gt;

# Note: most DB_CONFIG settings will take effect only upon rebuilding
# the DB environment.

# one 0.25 GB cache
set_cachesize 0 268435456 1

# Data Directory
#set_data_dir db

# Transaction Log settings
set_lg_regionmax 262144
set_lg_bsize 2097152
#set_lg_dir logs

set_flags DB_LOG_AUTOREMOVE

# Note: special DB_CONFIG flags are no longer needed for "quick"
# slapadd(8) or slapindex(8) access (see their -q option).
</pre>

<p>
サービスを起動する前に、=slaptest= コマンドで設定ファイルの文法検証を行いましょう。
</p>
<pre class="example">
$ sudo -u ldap slaptest
/etc/openldap/slapd.conf: line 94: index attribute "givename" undefined
slaptest: bad configuration file!  ★文法検証NGの場合、このメッセージが表示される。
</pre>

<p>
初回起動前に <code>id2entry.bdb</code> ファイルがないため、検証時に以下のようなメッセージが表示される。
これは設定ファイルの問題ではありません。気にせずに前に進みましょう。
</p>
<pre class="example">
$ sudo -u ldap slaptest
53eb0121 bdb_db_open: database "dc=jizai-domain,dc=jp": db_open(/var/lib/openldap/jizai-domain/id2entry.bdb) failed: No such file or directory (2).
53eb0121 backend_startup_one (type=bdb, suffix="dc=jizai-domain,dc=jp"): bi_db_open failed! (2)
slap_startup failed (test would succeed using the -u switch)

★-uオプションでdry-runモードで実行すると警告がなくなる
$ sudo -u ldap slaptest -u
config file testing succeeded
$
</pre>

<p>
いよいよ、サービスを起動します。
</p>
<pre class="example">
★systemctlでサービスを起動します
$ sudo systemctl start slapd.service

★ログを確認する
$ sudo tail -f /var/log/everything.log
2014-08-13T15:10:24+09:00 pipi daemon info systemd[1]:  Starting OpenLDAP server daemon...
2014-08-13T15:10:25+09:00 pipi local4 debug slapd[9780]:  @(#) $OpenLDAP: slapd 2.4.39 (Feb  2 2014 15:15:20) $
	nobody@root-armv6-copy:/build/openldap/src/openldap-2.4.39/servers/slapd
2014-08-13T15:10:25+09:00 pipi local4 debug slapd[9781]:  bdb_monitor_db_open: monitoring disabled; configure monitor database to enable
2014-08-13T15:10:25+09:00 pipi local4 debug slapd[9781]:  slapd starting
2014-08-13T15:10:25+09:00 pipi daemon info systemd[1]:  Started OpenLDAP server daemon.
</pre>

<p>
正常に起動された感じですね。 <code>monitoring disabled</code> 部分が気にされるかも知れないが、こ
れはOpenLDAPのモニタ機能が無効化の状態で起動されたのことです。今度機会があれば、モニ
タ機能に関して取り上げたいと思います。
</p>

<p>
試しにrootdnでバインドしてldapsearchを実行してみましょう。
</p>
<pre class="example">
$ ldapsearch -x -W -D "cn=Manager,dc=jizai-domain,dc=jp" -b "dc=jizai-domain,dc=jp"
Enter LDAP Password: 
# extended LDIF
#
# LDAPv3
# base &lt;dc=jizai-domain,dc=jp&gt; with scope subtree
# filter: (objectclass=*)
# requesting: ALL
#

# search result
search: 2
result: 32 No such object

# numResponses: 1
$
</pre>

<p>
エントリが登録されていないため空の検索結果が表示されましたね。
また、director項目で指定したディレクトリに自動的にDBDファイルが作成される。
</p>

<pre class="example">
$ sudo -u ldap ls -al /var/lib/openldap/jizai-domain
total 14264
drwx------ 2 ldap ldap     4096 Aug 13 15:10 .
drwx------ 4 ldap ldap     4096 Aug 13 14:51 ..
-rwx------ 1 ldap ldap      874 Aug 13 14:59 DB_CONFIG
-rw------- 1 ldap ldap  2310144 Aug 13 15:29 __db.001
-rw------- 1 ldap ldap 12861440 Aug 13 15:29 __db.002
-rw------- 1 ldap ldap  1490944 Aug 13 15:29 __db.003
-rw-r--r-- 1 ldap ldap     4096 Aug 13 15:10 alock
-rw------- 1 ldap ldap     8192 Aug 13 15:10 dn2id.bdb
-rw------- 1 ldap ldap    32768 Aug 13 15:10 id2entry.bdb
-rw------- 1 ldap ldap 10485760 Aug 13 15:10 log.0000000001
</pre>

<p>
続いて、 <a href="#sec-1-6">1.6</a> で説明したデータを登録してましょう。
</p>
<pre class="example">
$ ldapadd -x -D "cn=Manager,dc=jizai-domain,dc=jp" -W -f 01.base.ldif 
Enter LDAP Password: 
adding new entry "dc=jizai-domain,dc=jp"

adding new entry "cn=Manager,dc=jizai-domain,dc=jp"

adding new entry "o=Linux Users,dc=jizai-domain,dc=jp"

adding new entry "o=Smaba Users,dc=jizai-domain,dc=jp"

adding new entry "ou=User,o=Linux Users,dc=jizai-domain,dc=jp"

adding new entry "ou=Group,o=Linux Users,dc=jizai-domain,dc=jp"

★ユーザエントリの登録
$ ldapadd -x -D "cn=Manager,dc=jizai-domain,dc=jp" -W -f 02.users.ldif 
Enter LDAP Password: 
adding new entry "uid=user01,ou=User,o=Linux Users,dc=jizai-domain,dc=jp"

adding new entry "uid=user02,ou=User,o=Linux Users,dc=jizai-domain,dc=jp"

★グループエントリの登録
$ ldapadd -x -D "cn=Manager,dc=jizai-domain,dc=jp" -W -f 03.groups.ldif 
Enter LDAP Password: 
adding new entry "cn=group01,ou=Group,o=Linux Users,dc=jizai-domain,dc=jp"

adding new entry "cn=group02,ou=Group,o=Linux Users,dc=jizai-domain,dc=jp"

$
</pre>
<p>
無地に登録出来ました！匿名ユーザで検索してましょう。
</p>

<pre class="example">
$ ldapsearch -x -b "dc=jizai-domain,dc=jp" -LLL
dn: dc=jizai-domain,dc=jp
dc: jizai-domain
o: jizai-domain Corporation
objectClass: dcObject
objectClass: organization

dn: cn=Manager,dc=jizai-domain,dc=jp
cn: Manager
objectClass: organizationalRole

dn: o=Linux Users,dc=jizai-domain,dc=jp
o: Linux Users
objectClass: organization

dn: o=Smaba Users,dc=jizai-domain,dc=jp
o: Smaba Users
objectClass: organization

dn: ou=User,o=Linux Users,dc=jizai-domain,dc=jp
ou: User
objectClass: organizationalUnit

dn: ou=Group,o=Linux Users,dc=jizai-domain,dc=jp
ou: Group
objectClass: organizationalUnit

dn: uid=user01,ou=User,o=Linux Users,dc=jizai-domain,dc=jp
uid: user01
cn: Test User01
uidNumber: 5001
gidNumber: 3001
homeDirectory: /home/user01
loginShell: /bin/bash
gecos: Test User No01
shadowLastChange: 0
shadowMin: 0
shadowMax: 99999
shadowWarning: 7
objectClass: account
objectClass: posixAccount
objectClass: shadowAccount

dn: uid=user02,ou=User,o=Linux Users,dc=jizai-domain,dc=jp
uid: user02
cn: Test User02
uidNumber: 5002
gidNumber: 3002
homeDirectory: /home/user02
loginShell: /bin/bash
gecos: Test User No02
shadowLastChange: 0
shadowMin: 0
shadowMax: 99999
shadowWarning: 7
objectClass: account
objectClass: posixAccount
objectClass: shadowAccount

dn: cn=group01,ou=Group,o=Linux Users,dc=jizai-domain,dc=jp
cn: group01
gidNumber: 3001
objectClass: posixGroup

dn: cn=group02,ou=Group,o=Linux Users,dc=jizai-domain,dc=jp
cn: group02
gidNumber: 3002
memberUid: 5001
objectClass: posixGroup
</pre>
<p>
匿名でアクセスする場合 <code>userPassword</code> 属性が表示されないことを確認しました。
次は曖昧検索ウィ練習してみたいと思います。
</p>

<pre class="example">
★uidで前方一致検索する、検索結果にgecosのみを表示する
$ ldapsearch -x -b "dc=jizai-domain,dc=jp" "uid=user*" "uid" -LLL
dn: uid=user01,ou=User,o=Linux Users,dc=jizai-domain,dc=jp
gecos: Test User No01

dn: uid=user02,ou=User,o=Linux Users,dc=jizai-domain,dc=jp
gecos: Test User No02
</pre>
</div>
</div>

<div id="outline-container-sec-5" class="outline-2">
<h2 id="sec-5"><span class="section-number-2">5</span> OpenLDAPログ出力設定</h2>
<div class="outline-text-2" id="text-5">
<p>
デフォルトではサービスのログが <code>journal</code> ログシステムでバイナリ形式でログ収集される。
次はコマンドで <code>/usr/bin/slapd</code> プロセスのログ出力を確認することができます。
</p>
<pre class="example">
$ journalctl /usr/bin/slapd
-- Logs begin at Tue 2014-01-28 15:40:27 JST, end at Tue 2014-08-12 22:05:05 JST. --
Jan 28 22:08:32 pipi slapd[175]: conn=1000 fd=9 ACCEPT from IP=192.168.100.7:35520 (IP=0.0.0.0:389)
Jan 28 22:08:32 pipi slapd[175]: conn=1000 op=0 BIND dn="" method=128
Jan 28 22:08:32 pipi slapd[175]: conn=1000 op=0 RESULT tag=97 err=0 text=
Jan 28 22:08:32 pipi slapd[175]: conn=1000 op=1 SRCH base="dc=jizai-domain,dc=jp" scope=2 deref=0 filter="(&amp;(objectClass=posixAccount)(u
........
</pre>

<p>
journald と syslog のを結合して運用している場合以下手順でsyslogの設定を行うでopenldap
のログを別ファイルに出力させることができる。
</p>

<p>
<code>/etc/syslog-ng/syslog-ng.conf</code> に以下の定義の追加して、 <code>syslog-ng</code> サービスを再起動
する。
</p>

<pre class="example">
template t_1 {
        template("$ISODATE $FULLHOST $FACILITY $PRIORITY $MSGHDR $MSG\n"); templat$
};

destination d_ldap { file("/var/log/ldap.log" template(t_1)); };

filter f_ldap { facility(local4); };   ★ここが肝です、openldapのログはlocal4ファシリティを用いて出力する仕様となっている

log { source(src); filter(f_ldap); destination(d_ldap); };
</pre>

<p>
<code>/etc/logrotate.d/syslog-ng</code> にローテーション対象に追加する。
</p>
<pre class="example">
                            ★最後に追加する
/var/log/messages.log ..... /var/log/ldap.log  {
	missingok
	sharedscripts
	postrotate
		/bin/kill -HUP $(cat /run/syslog-ng.pid 2&gt;/dev/null) 2&gt;/dev/null || true
	endscript
}
</pre>

<p>
### TODO
loglevel
</p>
</div>
</div>

<div id="outline-container-sec-6" class="outline-2">
<h2 id="sec-6"><span class="section-number-2">6</span> LDAPクライアントの設定</h2>
<div class="outline-text-2" id="text-6">
<p>
LDAPクライアントはいろいろありますが、ここでは <code>ldapsearch</code> などOpenLDAPに付属したツー
ルから参照されるクライアント設定ファイルについて紹介します。
</p>

<p>
OpenLDAPサーバを参照するためにLDAPクライアントに <code>libldap</code> をインストールしましょう。
<code>OpenLDAP</code> インストール時もすでにインストールされていると思いますが、ここでは再イン
ストールことになります。
</p>

<pre class="example">
$ sudo pacman -S libldap
[sudo] password for akira: 
警告: libldap-2.4.39-1 は最新です -- 再インストール
依存関係を解決しています...
相互衝突をチェックしています...

パッケージ (1): libldap-2.4.39-1

Total Installed Size:   0.94 MiB
Net Upgrade Size:       0.00 MiB

:: インストールを行いますか？ [Y/n]
(1/1) キーリングのキーを確認                                                                   [########################################################] 100%
(1/1) パッケージの整合性をチェック                                                             [########################################################] 100%
(1/1) パッケージファイルのロード                                                               [########################################################] 100%
(1/1) ファイルの衝突をチェック                                                                 [########################################################] 100%
(1/1) 空き容量を確認                                                                           [########################################################] 100%
(1/1) 再インストール libldap                                                                   [########################################################] 100%
$ pacman -Ql libldap
libldap /etc/
libldap /etc/openldap/
libldap /etc/openldap/ldap.conf  ★LDAPクライアント設定ファイル
......省略......
</pre>

<p>
<code>/etc/openldap/ldap.conf</code> はLDAPクライアントの設定ファイルとなります。このファイルう
に最低限に以下のLDAPサーバ接続する情報を記述しましょう。
</p>
<pre class="example">
BASE   dc=jizai-domain,dc=jp
URI    ldap://pipi.home/
</pre>

<p>
これで <code>ldapsearch</code> コマンド実行時にデフォルトの接続先として付与されることになります。
</p>
</div>
</div>

<div id="outline-container-sec-7" class="outline-2">
<h2 id="sec-7"><span class="section-number-2">7</span> LDAPクライアントとサーバ間の通信内容</h2>
<div class="outline-text-2" id="text-7">
<p>
LDAPクライアントとサーバ間通経路が暗号化されていない時のパケット内容を確認しましょう。
以下は <code>ldapsearch</code> コマンドでユーザエントリの <code>userPassword</code> 属性の検索結果となりま
す。 <code>userPassword</code> の値がBase64エンコード形式で出力されていることが分かりました。
</p>
<pre class="example">
$ ldapsearch -x -W  -D "cn=Manager,dc=jizai-domain,dc=jp" -b "ou=User,o=Linux Users,dc=jizai-domain,dc=jp" "userPassword" -LLL
Enter LDAP Password: 
dn: ou=User,o=Linux Users,dc=jizai-domain,dc=jp

dn: uid=user01,ou=User,o=Linux Users,dc=jizai-domain,dc=jp
userPassword:: UEBzc3cwcmQ=

dn: uid=user02,ou=User,o=Linux Users,dc=jizai-domain,dc=jp
userPassword:: e1NTSEF9S3BKd3dBMlNidDI5R0dOWnhkYXNxNVhSbWw2SjVxMlo=
</pre>

<p>
<code>wireshark</code> の監視結果
</p>


<div class="figure">
<p><img src="img/2014-08-12-openldap-01.png" alt="2014-08-12-openldap-01.png" />
</p>
</div>

<p>
<code>tcpdump</code> の監視結果（一部情報を落としている）
</p>
<pre class="example">
$ sudo tcpdump -n -i wlp2s0 port 389 -X
tcpdump: verbose output suppressed, use -v or -vv for full protocol decode
listening on wlp2s0, link-type EN10MB (Ethernet), capture size 65535 bytes
16:38:54.494320 IP 192.168.100.10.37832 &gt; 192.168.100.4.389: Flags [S], seq 1466415103, win 29200, options [mss 1460,sackOK,TS val 23258407 ecr 0,nop,wscale 7], length 0
...省略...
16:38:54.495465 IP 192.168.100.4.389 &gt; 192.168.100.10.37832: Flags [S.], seq 206831997, ack 1466415104, win 28960, options [mss 1460,sackOK,TS val 10688865 ecr 23258407,nop,wscale 5], length 0
...省略...
16:38:54.495515 IP 192.168.100.10.37832 &gt; 192.168.100.4.389: Flags [.], ack 1, win 229, options [nop,nop,TS val 23258407 ecr 10688865], length 0
...省略...
16:38:54.495602 IP 192.168.100.10.37832 &gt; 192.168.100.4.389: Flags [P.], seq 1:55, ack 1, win 229, options [nop,nop,TS val 23258407 ecr 10688865], length 54
	0x0000:  4500 006a 52da 4000 4006 9e54 c0a8 640a  E..jR.@.@..T..d.
	0x0010:  c0a8 6404 93c8 0185 5767 b800 0c54 017e  ..d.....Wg...T.~
	0x0020:  8018 00e5 082b 0000 0101 080a 0162 e527  .....+.......b.'
	0x0030:  00a3 1961 3034 0201 0160 2f02 0103 0420  ...a04...`/.....
	0x0040:  636e 3d4d 616e 6167 6572 2c64 633d 6a69  cn=Manager,dc=ji
	0x0050:  7a61 692d 646f 6d61 696e 2c64 633d 6a70  zai-domain,dc=jp
	0x0060:  8008 5040 7373 7730 7264                 ..P@ssw0rd                 ★rootdnバインド時のパスワード

16:38:54.497192 IP 192.168.100.4.389 &gt; 192.168.100.10.37832: Flags [.], ack 55, win 905, options [nop,nop,TS val 10688865 ecr 23258407], length 0
...省略...
16:38:54.505926 IP 192.168.100.4.389 &gt; 192.168.100.10.37832: Flags [P.], seq 1:15, ack 55, win 905, options [nop,nop,TS val 10688866 ecr 23258407], length 14
...省略...
16:38:54.505948 IP 192.168.100.10.37832 &gt; 192.168.100.4.389: Flags [.], ack 15, win 229, options [nop,nop,TS val 23258410 ecr 10688866], length 0
...省略...
16:38:54.506029 IP 192.168.100.10.37832 &gt; 192.168.100.4.389: Flags [P.], seq 55:151, ack 15, win 229, options [nop,nop,TS val 23258410 ecr 10688866], length 96
16:38:54.511339 IP 192.168.100.4.389 &gt; 192.168.100.10.37832: Flags [P.], seq 15:69, ack 151, win 905, options [nop,nop,TS val 10688866 ecr 23258410], length 54
16:38:54.517492 IP 192.168.100.4.389 &gt; 192.168.100.10.37832: Flags [P.], seq 69:162, ack 151, win 905, options [nop,nop,TS val 10688867 ecr 23258410], length 93
	0x0000:  4500 0091 1822 4000 4006 d8e5 c0a8 6404  E...."@.@.....d.
	0x0010:  c0a8 640a 0185 93c8 0c54 01c2 5767 b896  ..d......T..Wg..
	0x0020:  8018 0389 7d44 0000 0101 080a 00a3 1963  ....}D.........c
	0x0030:  0162 e52a 305b 0201 0264 5604 3675 6964  .b.*0[...dV.6uid
	0x0040:  3d75 7365 7230 312c 6f75 3d55 7365 722c  =user01,ou=User,
	0x0050:  6f3d 4c69 6e75 7820 5573 6572 732c 6463  o=Linux.Users,dc
	0x0060:  3d6a 697a 6169 2d64 6f6d 6169 6e2c 6463  =jizai-domain,dc
	0x0070:  3d6a 7030 1c30 1a04 0c75 7365 7250 6173  =jp0.0...userPas
	0x0080:  7377 6f72 6431 0a04 0850 4073 7377 3072  sword1...P@ssw0r          ★検索結果にuser01のパスワード
	0x0090:  64                                       d
16:38:54.517536 IP 192.168.100.10.37832 &gt; 192.168.100.4.389: Flags [.], ack 162, win 229, options [nop,nop,TS val 23258414 ecr 10688866], length 0
16:38:54.518197 IP 192.168.100.4.389 &gt; 192.168.100.10.37832: Flags [P.], seq 162:285, ack 151, win 905, options [nop,nop,TS val 10688867 ecr 23258410], length 123
	0x0000:  4500 00af 1823 4000 4006 d8c6 c0a8 6404  E....#@.@.....d.
	0x0010:  c0a8 640a 0185 93c8 0c54 021f 5767 b896  ..d......T..Wg..
	0x0020:  8018 0389 682f 0000 0101 080a 00a3 1963  ....h/.........c
	0x0030:  0162 e52a 3079 0201 0264 7404 3675 6964  .b.*0y...dt.6uid
	0x0040:  3d75 7365 7230 322c 6f75 3d55 7365 722c  =user02,ou=User,
	0x0050:  6f3d 4c69 6e75 7820 5573 6572 732c 6463  o=Linux.Users,dc
	0x0060:  3d6a 697a 6169 2d64 6f6d 6169 6e2c 6463  =jizai-domain,dc
	0x0070:  3d6a 7030 3a30 3804 0c75 7365 7250 6173  =jp0:08..userPas
	0x0080:  7377 6f72 6431 2804 267b 5353 4841 7d4b  sword1(.&amp;{SSHA}K          ★検索結果にuser02のパスワード
	0x0090:  704a 7777 4132 5362 7432 3947 474e 5a78  pJwwA2Sbt29GGNZx
	0x00a0:  6461 7371 3558 526d 6c36 4a35 7132 5a    dasq5XRml6J5q2Z
16:38:54.518549 IP 192.168.100.4.389 &gt; 192.168.100.10.37832: Flags [P.], seq 285:299, ack 151, win 905, options [nop,nop,TS val 10688867 ecr 23258414], length 14
</pre>

<p>
検証結果の通り、バインド時のパスワードや検索結果中のパスワード情報がバレバレですね。
本番運用ではこの状態だと好ましくないでしょうか。ちゃんとSSL/TLSで暗号化しましょう。
</p>
</div>
</div>

<div id="outline-container-sec-8" class="outline-2">
<h2 id="sec-8"><span class="section-number-2">8</span> LDAPによるLinuxのログイン認証設定</h2>
<div class="outline-text-2" id="text-8">
</div><div id="outline-container-sec-8-1" class="outline-3">
<h3 id="sec-8-1"><span class="section-number-3">8.1</span> LDAP連携用ライブラリの導入</h3>
<div class="outline-text-3" id="text-8-1">
<p>
LDAPサーバと連携してログイン認証するために <code>libnss_ldap</code> と <code>pam_ldap</code> ライブラリが必
要とします。２つライブラリの役割は
</p>
<ul class="org-ul">
<li>libnss_ldap: Name Service Switch によるLDAPユーザ情報を引けるようにする
</li>
<li>pam_ldap: 簡易パスワード認証や <code>passwd</code> によるパスワード変更のLDAP対応
</li>
</ul>

<p>
この２つライブラリは別々プロジェクトで開発されているため、設定ファイルも別々
となっている。
</p>
<table border="2" cellspacing="0" cellpadding="6" rules="groups" frame="hsides">


<colgroup>
<col  class="left" />

<col  class="left" />

<col  class="left" />
</colgroup>
<tbody>
<tr>
<td class="left">pam_ldap</td>
<td class="left"><a href="http://www.padl.com/OSS/pam_ldap.html">http://www.padl.com/OSS/pam_ldap.html</a></td>
<td class="left">nss_ldap.conf</td>
</tr>

<tr>
<td class="left">nss_ldap</td>
<td class="left"><a href="http://www.padl.com/OSS/nss_ldap.html">http://www.padl.com/OSS/nss_ldap.html</a></td>
<td class="left">pam_ldap.conf</td>
</tr>
</tbody>
</table>
<p>
実際にこの２つ設定ファイルに記述する内容はほどんどん変わらない、設定情報が二重管理と
なってしまいます。 この問題を解決してくれるのは <code>nss-pam-ldapd</code> です。以下は
<code>nss-pam-ldapd</code> プロジェクトサイトからの説明引用です。
</p>

<pre class="example">
This is implemented using thin NSS and PAM modules which delegate to a dedicated
service (nslcd) that queries the LDAP server with persistent connections,
authentication, attribute translation, etc.
</pre>

<p>
つまり、２モジュールを仲良くする代理人的なものですね。
</p>

<pre class="example">
$ sudo pacman -S nss-pam-ldapd
依存関係を解決しています...
相互衝突をチェックしています...
:: nss-pam-ldapd と pam_ldap が衝突しています。pam_ldap を削除しますか？ [y/N] y

パッケージ (2): pam_ldap-186-5 [削除]  nss-pam-ldapd-0.8.14-1

Total Installed Size:   0.23 MiB
Net Upgrade Size:       0.14 MiB

:: インストールを行いますか？ [Y/n]
(1/1) キーリングのキーを確認                                                                   [########################################################] 100%
(1/1) パッケージの整合性をチェック                                                             [########################################################] 100%
(1/1) パッケージファイルのロード                                                               [########################################################] 100%
(1/1) ファイルの衝突をチェック                                                                 [########################################################] 100%
(2/2) 空き容量を確認                                                                           [########################################################] 100%
(1/1) 削除 pam_ldap                                                                            [########################################################] 100%
警告: /etc/pam_ldap.conf は /etc/pam_ldap.conf.pacsave として保存されました
(1/1) インストール nss-pam-ldapd                                                               [########################################################] 100%

★インストールされたファイル一覧
$ sudo pacman -Ql nss-pam-ldapd 
nss-pam-ldapd /etc/
nss-pam-ldapd /etc/nslcd.conf                        ★LDAPサーバ接続情報はここに載せる
nss-pam-ldapd /usr/
nss-pam-ldapd /usr/bin/
nss-pam-ldapd /usr/bin/nslcd                         ★[local LDAP name service daemon]、LDAP連携時の代理デーモンプロセス
nss-pam-ldapd /usr/lib/
nss-pam-ldapd /usr/lib/libnss_ldap.so.2              ★NSSのLDAP対応
nss-pam-ldapd /usr/lib/security/
nss-pam-ldapd /usr/lib/security/pam_ldap.so          ★LDAP認証PAMモジュール
nss-pam-ldapd /usr/lib/systemd/
nss-pam-ldapd /usr/lib/systemd/system/
nss-pam-ldapd /usr/lib/systemd/system/nslcd.service  ★nslcdサービスファイル
nss-pam-ldapd /usr/lib/tmpfiles.d/
nss-pam-ldapd /usr/lib/tmpfiles.d/nslcd.conf
nss-pam-ldapd /usr/share/
nss-pam-ldapd /usr/share/man/
nss-pam-ldapd /usr/share/man/man5/
nss-pam-ldapd /usr/share/man/man5/nslcd.conf.5.gz
nss-pam-ldapd /usr/share/man/man8/
nss-pam-ldapd /usr/share/man/man8/nslcd.8.gz
nss-pam-ldapd /usr/share/man/man8/pam_ldap.8.gz
$
</pre>

<p>
<code>nslcd</code> は <code>libnss_ldap</code> や <code>pam_ldap</code> からLDAPと連携時の中継代理デーモンプロセス
となります。LDAPサーバへの接続情報は <code>/etc/nslcd.conf</code> にて記述します。
</p>

<pre class="example">
$ cat /etc/nslcd.conf
uri ldap://pipi.home/
base dc=jizai-domain,dc=jp                    ★ユーザエントリ検索の起点
rootpwmoddn cn=Manager,dc=jizai-domain,dc=jp  ★rootユーザでLDAPユーザのパスワード変更時の認証バインドに使われる
</pre>

<p>
<code>/etc/nslcd.conf</code> とは別に <code>/etc/nscd.conf</code> が存在します、このファイルは <code>glibc</code> が提供してい
るものです、混乱しないように注意しましょう。
</p>

<p>
<code>/etc/nsswitch.conf</code> に以下のように情報源にldapを追加する。
</p>
<pre class="example">
$ cat /etc/nsswitch.conf
passwd:    files ldap
group:     files ldap
shadow:    files ldap
netgroup:  files ldap

★以上以外の内容、ここでは省略します。
</pre>

<p>
<code>nslcd.service</code> サービスを起動して、 <code>getent passwd</code> でLDAPのユーザ情報ちゃんと参照で
きることを確認しましょう。ちなみに、getentはNSSライブラリからエントリーを取得するコマ
ンドです。
</p>

<pre class="example">
$ sudo systemctl start nslcd.service
$ getent passwd
root:x:0:0:root:/root:/bin/bash
.....省略.....
nslcd:x:997:996::/var/run/nslcd:/bin/false

★LDAPのユーザエントリ情報が表示されている
user01:x:5001:3001:Test User No01:/home/user01:/bin/bash
user02:x:5002:3002:Test User No02:/home/user02:/bin/bash
</pre>

<pre class="example">
★サービス起動時のログ
Aug 14 00:14:31 mimi-air systemd[1]: Starting Naming services LDAP client daemon....
Aug 14 00:14:31 mimi-air nslcd[8554]: version 0.8.14 starting
Aug 14 00:14:31 mimi-air nslcd[8554]: accepting connections
Aug 14 00:14:31 mimi-air systemd[1]: Started Naming services LDAP client daemon..

★getent passwd実行時のログ
Aug 14 00:14:35 mimi-air nslcd[8554]: [8b4567] &lt;passwd(all)&gt; (re)loading /etc/nsswitch.conf
</pre>
</div>
</div>

<div id="outline-container-sec-8-2" class="outline-3">
<h3 id="sec-8-2"><span class="section-number-3">8.2</span> LDAP認証PAMモジュールの設定</h3>
<div class="outline-text-3" id="text-8-2">
<p>
次はLDAP認証するためのPAMモジュール設定を行います。対象となる設定ファイルは次の表にま
とめます。
</p>

<table border="2" cellspacing="0" cellpadding="6" rules="groups" frame="hsides">


<colgroup>
<col  class="left" />

<col  class="left" />
</colgroup>
<thead>
<tr>
<th scope="col" class="left">ファイル</th>
<th scope="col" class="left">用途</th>
</tr>
</thead>
<tbody>
<tr>
<td class="left">/etc/pam.d/system-auth</td>
<td class="left">通常のログインで利用する</td>
</tr>

<tr>
<td class="left">/etc/pam.d/su</td>
<td class="left">su user01 でユーザ切り替え時に使われる</td>
</tr>

<tr>
<td class="left">/etc/pam.d/su-l</td>
<td class="left">su - user01 でユーザ切り替え時に使われる</td>
</tr>

<tr>
<td class="left">/etc/pam.d/passwd</td>
<td class="left">passwdコマンドでパスワード変更時に使う</td>
</tr>

<tr>
<td class="left">/etc/pam.d/other</td>
<td class="left">PAMデフォルト設定ファイル</td>
</tr>
</tbody>
</table>

<p>
<code>/etc/pam.d/system-auth</code> 設定例
</p>
<pre class="example">
#%PAM-1.0

auth      sufficient pam_ldap.so     ★LDAP連携用
auth      required  pam_env.so
auth      required  pam_unix.so     try_first_pass nullok
auth      optional  pam_permit.so


account   sufficient pam_ldap.so    ★LDAP連携用
account   required  pam_unix.so
account   optional  pam_permit.so
account   required  pam_time.so

password  sufficient pam_ldap.so    ★LDAP連携用
password  required  pam_unix.so     try_first_pass nullok sha512 shadow
password  optional  pam_permit.so

#ユーザ、グループ単位にリソース制限を行う
session   required  pam_limits.so
session   required  pam_env.so

#ログイン時にホームディレクトリが存在していなければ自動で生成する指定
session   required  pam_mkhomedir.so skel=/etc/skel umask=0077

#ログイン、ログアウト情報をauthログに出力する
session   required  pam_unix.so

session   optional  pam_ldap.so   ★LDAP連携用
session   optional  pam_permit.so
</pre>

<p>
<code>/etc/pam.d/su</code> と <code>/etc/pam.d/su-l</code> 設定例
</p>
<pre class="example">
#%PAM-1.0
auth        sufficient  pam_ldap.so   ★LDAP連携
auth		sufficient	pam_rootok.so
# Uncomment the following line to implicitly trust users in the "wheel" group.
#auth		sufficient	pam_wheel.so trust use_uid
# Uncomment the following line to require a user to be in the "wheel" group.
#auth		required	pam_wheel.so use_uid
auth		required	pam_unix.so use_first_pass   ★use_first_pass→ユーザーから取得済みのパスワードを再利用する

account     sufficient  pam_ldap.so  ★LDAP連携
account		required	pam_unix.so

session     required    pam_mkhomedir.so skel=/etc/skel umask=0022  ★ホームディレクトリを自動作成する
session     sufficient  pam_ldap.so                                 ★LDAP連携
session		required	pam_unix.so
</pre>

<p>
<code>/etc/pam.d/passwd</code> 設定例
</p>
<pre class="example">
#%PAM-1.0
password        sufficient      pam_ldap.so          ★LDAPパスワード変更連携
password        required        pam_cracklib.so retry=3 difok=1 minlen=8 dcredit=-1
password        required        pam_unix.so sha512 shadow nullok use_authtok
</pre>

<p>
<code>/etc/pam.d/other</code> 設定例
</p>
<pre class="example">
#%PAM-1.0
auth            sufficient      pam_ldap.so    ★LDAP連携
auth            required        pam_unix.so

account         sufficient      pam_ldap.so    ★LDAP連携
account         required        pam_unix.so

password        sufficient      pam_ldap.so    ★LDAP連携
password        required        pam_unix.so

session         required        pam_unix.so
</pre>

<p>
初回ログイン時にパスワード変更を求める場合、 <code>other</code> の設定は必須です。
つまり、LDAPユーザエントリの <code>shadowLastChange: 0</code> を運用する時に要注意です。
</p>

<p>
設定しない時の挙動
</p>
<pre class="example">
$ su - user02
パスワード:
need a new password
su: 基礎となる認証モジュールを知らないユーザー         ★新パスワードを求める事ができない、ログインできない
$
</pre>
</div>
</div>

<div id="outline-container-sec-8-3" class="outline-3">
<h3 id="sec-8-3"><span class="section-number-3">8.3</span> パスワード変更時の挙動</h3>
<div class="outline-text-3" id="text-8-3">
<p>
LDAPユーザのパスワード変更は次のような方法があります。
</p>
<table border="2" cellspacing="0" cellpadding="6" rules="groups" frame="hsides">


<colgroup>
<col  class="left" />

<col  class="left" />
</colgroup>
<tbody>
<tr>
<td class="left">LDAPユーザ権限でpasswd</td>
<td class="left">LDAPユーザ自身のパスワードを変更する</td>
</tr>

<tr>
<td class="left">root権限でpasswd</td>
<td class="left">任意のユーザのパスワードを変更する</td>
</tr>

<tr>
<td class="left">ldappasswd</td>
<td class="left">バインドユーザによる変更できる範囲が変わる</td>
</tr>

<tr>
<td class="left">ldapmodify</td>
<td class="left">バインドユーザによる変更できる範囲が変わる</td>
</tr>
</tbody>
</table>
</div>
</div>

<div id="outline-container-sec-8-4" class="outline-3">
<h3 id="sec-8-4"><span class="section-number-3">8.4</span> ログイン時の挙動</h3>
<div class="outline-text-3" id="text-8-4">
<ol class="org-ol">
<li>匿名でユーザエントリ情報を取得する
</li>
<li>ユーザエントリを用いてLDAP認証バインドを行う
</li>
<li>何度もユーザエントリの情報を取得する
</li>
</ol>

<p>
ログイン時LDAPサーバ側のログ
</p>
<pre class="example">
★ユーザID入力後、パスワード入力前
2014-08-16T17:34:16+09:00 pipi local4 debug slapd[21557]:  conn=1001 fd=18 ACCEPT from IP=192.168.100.10:53485 (IP=0.0.0.0:389)
2014-08-16T17:34:16+09:00 pipi local4 debug slapd[21557]:  conn=1001 op=0 BIND dn="" method=128
2014-08-16T17:34:16+09:00 pipi local4 debug slapd[21557]:  conn=1001 op=0 RESULT tag=97 err=0 text=
★★１： LDAP検索条件 objectClassとuidが付与された
2014-08-16T17:34:16+09:00 pipi local4 debug slapd[21557]:  conn=1001 op=1 SRCH base="dc=jizai-domain,dc=jp" scope=2 deref=0 filter="(&amp;(objectClass=posixAccount)(uid=user01))"
2014-08-16T17:34:16+09:00 pipi local4 debug slapd[21557]:  conn=1001 op=1 SRCH attr=loginShell cn gidNumber uidNumber objectClass homeDirectory gecos uid
2014-08-16T17:34:16+09:00 pipi local4 debug slapd[21557]:  conn=1001 op=1 SEARCH RESULT tag=101 err=0 nentries=1 text=

★パスワード入力後
2014-08-16T17:34:28+09:00 pipi local4 debug slapd[21557]:  conn=1001 op=2 SRCH base="dc=jizai-domain,dc=jp" scope=2 deref=0 filter="(&amp;(objectClass=posixAccount)(uid=user01))"
2014-08-16T17:34:28+09:00 pipi local4 debug slapd[21557]:  conn=1001 op=2 SRCH attr=uid uidNumber
2014-08-16T17:34:28+09:00 pipi local4 debug slapd[21557]:  conn=1001 op=2 SEARCH RESULT tag=101 err=0 nentries=1 text=
2014-08-16T17:34:28+09:00 pipi local4 debug slapd[21557]:  conn=1002 fd=19 ACCEPT from IP=192.168.100.10:53487 (IP=0.0.0.0:389)
★★２： ユーザエントリでバインドが行われた
2014-08-16T17:34:28+09:00 pipi local4 debug slapd[21557]:  conn=1002 op=0 BIND dn="uid=user01,ou=User,o=Linux Users,dc=jizai-domain,dc=jp" method=128
2014-08-16T17:34:28+09:00 pipi local4 debug slapd[21557]:  conn=1002 op=0 BIND dn="uid=user01,ou=User,o=Linux Users,dc=jizai-domain,dc=jp" mech=SIMPLE ssf=0
2014-08-16T17:34:28+09:00 pipi local4 debug slapd[21557]:  conn=1002 op=0 RESULT tag=97 err=0 text=
2014-08-16T17:34:28+09:00 pipi local4 debug slapd[21557]:  conn=1002 op=1 SRCH base="uid=user01,ou=User,o=Linux Users,dc=jizai-domain,dc=jp" scope=0 deref=0 filter="(objectClass=*)"
2014-08-16T17:34:28+09:00 pipi local4 debug slapd[21557]:  conn=1002 op=1 SRCH attr=dn
2014-08-16T17:34:28+09:00 pipi local4 debug slapd[21557]:  conn=1002 op=1 SEARCH RESULT tag=101 err=0 nentries=1 text=
2014-08-16T17:34:28+09:00 pipi local4 debug slapd[21557]:  conn=1002 op=2 ABANDON msg=2
2014-08-16T17:34:28+09:00 pipi local4 debug slapd[21557]:  conn=1002 op=3 UNBIND

★★３：パスワード期限などの問い合わせる
2014-08-16T17:34:28+09:00 pipi local4 debug slapd[21557]:  conn=1001 op=3 SRCH base="dc=jizai-domain,dc=jp" scope=2 deref=0 filter="(&amp;(objectClass=shadowAccount)(uid=user01))"
2014-08-16T17:34:28+09:00 pipi local4 debug slapd[21557]:  conn=1001 op=3 SRCH attr=shadowExpire shadowInactive shadowFlag shadowWarning shadowLastChange uid shadowMin shadowMax
2014-08-16T17:34:28+09:00 pipi local4 debug slapd[21557]:  conn=1001 op=3 SEARCH RESULT tag=101 err=0 nentries=1 text=
2014-08-16T17:34:28+09:00 pipi local4 debug slapd[21557]:  conn=1002 fd=19 closed
2014-08-16T17:34:28+09:00 pipi local4 debug slapd[21557]:  conn=1001 op=4 ABANDON msg=4
2014-08-16T17:34:28+09:00 pipi local4 debug slapd[21557]:  conn=1000 op=2 SRCH base="dc=jizai-domain,dc=jp" scope=2 deref=0 filter="(&amp;(objectClass=posixAccount)(uid=user01))"
2014-08-16T17:34:28+09:00 pipi local4 debug slapd[21557]:  conn=1000 op=2 SRCH attr=uid uidNumber
2014-08-16T17:34:28+09:00 pipi local4 debug slapd[21557]:  conn=1000 op=2 SEARCH RESULT tag=101 err=0 nentries=1 text=
2014-08-16T17:34:28+09:00 pipi local4 debug slapd[21557]:  conn=1000 op=3 SRCH base="dc=jizai-domain,dc=jp" scope=2 deref=0 filter="(&amp;(objectClass=shadowAccount)(uid=user01))"
2014-08-16T17:34:28+09:00 pipi local4 debug slapd[21557]:  conn=1000 op=3 SRCH attr=shadowExpire shadowInactive shadowFlag shadowWarning shadowLastChange uid shadowMin shadowMax
2014-08-16T17:34:28+09:00 pipi local4 debug slapd[21557]:  conn=1000 op=3 SEARCH RESULT tag=101 err=0 nentries=1 text=
2014-08-16T17:34:28+09:00 pipi local4 debug slapd[21557]:  conn=1000 op=4 ABANDON msg=4
2014-08-16T17:34:28+09:00 pipi local4 debug slapd[21557]:  conn=1000 op=5 SRCH base="dc=jizai-domain,dc=jp" scope=2 deref=0 filter="(&amp;(objectClass=posixAccount)(uid=user01))"
2014-08-16T17:34:29+09:00 pipi local4 debug slapd[21557]:  conn=1000 op=5 SRCH attr=uid uidNumber
2014-08-16T17:34:29+09:00 pipi local4 debug slapd[21557]:  conn=1000 op=5 SEARCH RESULT tag=101 err=0 nentries=1 text=
2014-08-16T17:34:29+09:00 pipi local4 debug slapd[21557]:  conn=1000 op=6 SRCH base="dc=jizai-domain,dc=jp" scope=2 deref=0 filter="(&amp;(objectClass=posixGroup)(|(memberUid=user01)(member=uid=user01,ou=user,o=linux users,dc=jizai-domain,dc=jp)))"
2014-08-16T17:34:29+09:00 pipi local4 debug slapd[21557]:  conn=1000 op=6 SRCH attr=memberUid cn gidNumber member
2014-08-16T17:34:29+09:00 pipi local4 debug slapd[21557]:  &lt;= bdb_equality_candidates: (member) not indexed
2014-08-16T17:34:29+09:00 pipi local4 debug slapd[21557]:  conn=1000 op=6 SEARCH RESULT tag=101 err=0 nentries=0 text=
</pre>

<p>
LDAPからユーザエントリの検索範囲を限定する方法
</p>
<ul class="org-ul">
<li>DITベースで検索範囲を限定する
</li>
<li>pam_filterで検索結果を絞り込む
</li>
</ul>
</div>
</div>
</div>

<div id="outline-container-sec-9" class="outline-2">
<h2 id="sec-9"><span class="section-number-2">9</span> 宿題</h2>
<div class="outline-text-2" id="text-9">
<ul class="org-ul">
<li>shadowLastChange変更ポリシー
</li>
<li>通信暗号化
</li>
</ul>
</div>
</div>
<div id="outline-container-sec-10" class="outline-2">
<h2 id="sec-10"><span class="section-number-2">10</span> 参考情報</h2>
<div class="outline-text-2" id="text-10">
<ul class="org-ul">
<li>プロのためのLinuxシステムネットワーク管理技術
</li>
</ul>
</div>
</div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[メモ]syslog-ngのログ出力形式の変更]]></title>
    <link href="http://luozengbin.github.io/blog/2014-08-12-%5B%E3%83%A1%E3%83%A2%5Dsyslog-ng%E3%81%AE%E3%83%AD%E3%82%B0%E5%87%BA%E5%8A%9B%E5%BD%A2%E5%BC%8F%E3%81%AE%E5%A4%89%E6%9B%B4.html"/>
    <updated>2014-08-12T00:00:00+09:00</updated>
    <id>http://luozengbin.github.io/blog/[メモ]syslog-ngのログ出力形式の変更</id>
    <content type="html"><![CDATA[<div id="table-of-contents">
<h2>Table of Contents</h2>
<div id="text-table-of-contents">
<ul>
<li><a href="#sec-1">1. デフォルトの出力形式</a></li>
<li><a href="#sec-2">2. 出力形式変更手順</a></li>
<li><a href="#sec-3">3. 参考情報</a></li>
</ul>
</div>
</div>
<p>
Archlinuxでsyslog-ngのデフォルト出力形式は以下のようなイメージになります。ちょっと物
足りない気がして、形式の変更方法を調べてみました。
</p>

<p>
<!-- more -->
</p>

<div id="outline-container-sec-1" class="outline-2">
<h2 id="sec-1"><span class="section-number-2">1</span> デフォルトの出力形式</h2>
<div class="outline-text-2" id="text-1">
<p>
デフォルトの出力形式、 <code>時刻 ホスト名 プロセス名[PID] メッセージ</code>
</p>
<pre class="example">
Aug 12 18:01:01 pipi CROND[19011]: (root) CMD (run-parts /etc/cron.hourly)
Aug 12 19:01:02 pipi CROND[21549]: (root) CMD (run-parts /etc/cron.hourly)
Aug 12 20:01:01 pipi CROND[24082]: (root) CMD (run-parts /etc/cron.hourly)
Aug 12 21:01:01 pipi CROND[26609]: (root) CMD (run-parts /etc/cron.hourly)
Aug 12 22:01:01 pipi CROND[29189]: (root) CMD (run-parts /etc/cron.hourly)
Aug 12 22:14:00 pipi slapd[172]: conn=1015 fd=10 ACCEPT from IP=[::1]:58536 (IP=[::]:389)
Aug 12 22:14:00 pipi slapd[172]: conn=1015 op=0 BIND dn="cn=Manager,dc=jizai-domain,dc=jp" method=128
Aug 12 22:14:00 pipi slapd[172]: conn=1015 op=0 BIND dn="cn=Manager,dc=jizai-domain,dc=jp" mech=SIMPLE ssf=0
Aug 12 22:14:00 pipi slapd[172]: conn=1015 op=0 RESULT tag=97 err=0 text=
Aug 12 22:14:00 pipi slapd[172]: conn=1015 op=1 SRCH base="dc=jizai-domain,dc=jp" scope=2 deref=0 filter="(uid=user01)"
Aug 12 22:14:01 pipi slapd[172]: &lt;= bdb_equality_candidates: (uid) not indexed
Aug 12 22:14:01 pipi slapd[172]: conn=1015 op=2 UNBIND
Aug 12 22:14:01 pipi slapd[172]: conn=1015 op=1 SEARCH RESULT tag=101 err=0 nentries=1 text=
Aug 12 22:14:01 pipi slapd[172]: conn=1015 fd=10 closed
Aug 12 11:10:21 pipi systemd[1131]: Reached target Default.
Aug 12 11:10:21 pipi systemd[1131]: Startup finished in 227ms.
Aug 12 11:10:21 pipi systemd[1]: Started User Manager for UID 1000.
Aug 12 11:10:23 pipi systemd[1]: Starting Session c2 of user akira.
Aug 12 11:10:23 pipi systemd[1]: Started Session c2 of user akira.
</pre>
</div>
</div>

<div id="outline-container-sec-2" class="outline-2">
<h2 id="sec-2"><span class="section-number-2">2</span> 出力形式変更手順</h2>
<div class="outline-text-2" id="text-2">
<p>
syslog-ngに <code>template</code> の定義にマクロを用いることができる。このマクロ機能を利用してロ
グ出力形式をカスタマイズすることを実現する。以下は <code>everything.log</code> を例として設定変更
の手順を紹介します。
</p>

<p>
<code>/etc/syslog-ng/syslog-ng.conf</code> 変更前
</p>
<pre class="example">
source src {
  system();
  internal();
};

destination d_everything { file("/var/log/everything.log"); };

filter f_everything { level(debug..emerg) and not facility(auth, authpriv); };

log { source(src); filter(f_everything); destination(d_everything); };
</pre>

<p>
<code>template</code> 定義を追加して、 <code>destination</code> にテンプレートと紐付ける。
</p>
<pre class="example">
source src {
  system();
  internal();
};

template t_1 {
        template("$ISODATE $FULLHOST $FACILITY $PRIORITY $MSGHDR $MSG\n"); templat$
};

destination d_everything { file("/var/log/everything.log" template(t_1)); };

filter f_everything { level(debug..emerg) and not facility(auth, authpriv); };

log { source(src); filter(f_everything); destination(d_everything); };
</pre>

<p>
<code>sudo systemctl restart syslog-ng.service</code> でサービスを再起動して、ログの出力を確認知
すると出力形式が以下のようになります。
</p>

<pre class="example">
2014-08-12T22:34:19+09:00 pipi syslog syslog-ng[31533] notice syslog-ng starting up; version='3.5.5'
2014-08-12T22:34:18+09:00 pipi daemon systemd[1] info Starting System Logger Daemon...
2014-08-12T22:34:19+09:00 pipi daemon systemd[1] info Started System Logger Daemon.
2014-08-12T22:34:32+09:00 pipi local4 slapd[172] debug conn=1019 fd=10 ACCEPT from IP=[::1]:58540 (IP=[::]:389)
2014-08-12T22:34:32+09:00 pipi local4 slapd[172] debug conn=1019 op=0 BIND dn="cn=Manager,dc=jizai-domain,dc=jp" method=128
2014-08-12T22:34:32+09:00 pipi local4 slapd[172] debug conn=1019 op=0 BIND dn="cn=Manager,dc=jizai-domain,dc=jp" mech=SIMPLE ssf=0
2014-08-12T22:34:32+09:00 pipi local4 slapd[172] debug conn=1019 op=0 RESULT tag=97 err=0 text=
2014-08-12T22:34:32+09:00 pipi local4 slapd[172] debug conn=1019 op=1 SRCH base="dc=jizai-domain,dc=jp" scope=2 deref=0 filter="(uid=user01)"
2014-08-12T22:34:32+09:00 pipi local4 slapd[172] debug &lt;= bdb_equality_candidates: (uid) not indexed
2014-08-12T22:34:32+09:00 pipi local4 slapd[172] debug conn=1019 op=2 UNBIND
2014-08-12T22:34:32+09:00 pipi local4 slapd[172] debug conn=1019 op=1 SEARCH RESULT tag=101 err=0 nentries=1 text=
2014-08-12T22:34:32+09:00 pipi local4 slapd[172] debug conn=1019 fd=10 closed
</pre>
</div>
</div>

<div id="outline-container-sec-3" class="outline-2">
<h2 id="sec-3"><span class="section-number-2">3</span> 参考情報</h2>
<div class="outline-text-2" id="text-3">
<ul class="org-ul">
<li><a href="http://www.atmarkit.co.jp/ait/articles/0809/22/news116_2.html">マクロやテンプレでsyslog-ngを使い倒す (2/3)</a>
</li>
<li><a href="http://www.balabit.com/sites/default/files/documents/syslog-ng-ose-3.3-guides/en/syslog-ng-ose-v3.3-guide-admin-en/html/reference_macros.html#macro_priority">The syslog-ng Open Source Edition 3.3 Administrator Guide</a>
</li>
</ul>
</div>
</div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[メモ]findでファイル更新日付順で表示する]]></title>
    <link href="http://luozengbin.github.io/blog/2014-08-07-%5B%E3%83%A1%E3%83%A2%5Dfind%E3%81%A7%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E6%9B%B4%E6%96%B0%E6%97%A5%E4%BB%98%E9%A0%86%E3%81%A7%E8%A1%A8%E7%A4%BA%E3%81%99%E3%82%8B.html"/>
    <updated>2014-08-07T00:00:00+09:00</updated>
    <id>http://luozengbin.github.io/blog/[メモ]findでファイル更新日付順で表示する</id>
    <content type="html"><![CDATA[<p>
PJではメンバたち日々の作業成果物がどこかの共有ディレクトリに格納されているでしょう。
共有ディレクトリに最近更新や追加されたファイルを見たい時がよくあることです。
いちいち作業担当者に聞くのもうざいので。 <code>find</code> 、 <code>xargs</code> コマンドを駆使して実現して
みた。
</p>

<pre class="example">
$ find . -type f -print0 | xargs -0 ls -alt
</pre>

<ul class="org-ul">
<li><code>find -type f</code> はファイルのみを対象とする
</li>
<li><code>find -print0</code> は検出されたファイルのフルパスをNULLキャラクターで分割して出力する
</li>
<li><code>xargs -0</code> もしくは <code>xargs --null</code> 入力ストリームの分割はNULLキャラクターを用いる
</li>
</ul>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[検証]ArchlinuxにJenkins導入]]></title>
    <link href="http://luozengbin.github.io/blog/2014-07-31-%5B%E6%A4%9C%E8%A8%BC%5Darchlinux%E3%81%ABjenkins%E5%B0%8E%E5%85%A5.html"/>
    <updated>2014-07-31T00:00:00+09:00</updated>
    <id>http://luozengbin.github.io/blog/[検証]archlinuxにjenkins導入</id>
    <content type="html"><![CDATA[<div id="table-of-contents">
<h2>Table of Contents</h2>
<div id="text-table-of-contents">
<ul>
<li><a href="#sec-1">1. インストール</a></li>
<li><a href="#sec-2">2. パッケージ構成</a></li>
<li><a href="#sec-3">3. 設定ファイル</a></li>
<li><a href="#sec-4">4. サービス制御ファイル</a></li>
<li><a href="#sec-5">5. サービス実行アカウントの確認</a></li>
<li><a href="#sec-6">6. サービスを起動してみる</a></li>
<li><a href="#sec-7">7. 次やりたいこと</a></li>
</ul>
</div>
</div>
<p>
久々Jenkinsを触っていないので、今回Archlinux入れて検証したいと思います。
</p>

<p>
<!-- more -->
</p>

<div id="outline-container-sec-1" class="outline-2">
<h2 id="sec-1"><span class="section-number-2">1</span> インストール</h2>
<div class="outline-text-2" id="text-1">
<p>
<code>pacman</code> コマンド一発です。
</p>
<pre class="example">
$ sudo pacman -S jenkins
[sudo] password for akira: 
依存関係を解決しています...
相互衝突をチェックしています...

パッケージ (1): jenkins-1.574-1

Total Download Size:    56.23 MiB
Total Installed Size:   64.72 MiB

:: インストールを行いますか？ [Y/n] 
:: パッケージを取得します ...
 jenkins-1.574-1-any                                                                                 56.2 MiB  1149K/s 00:50 [############################################################################] 100%
(1/1) キーリングのキーを確認                                                                                                 [############################################################################] 100%
(1/1) パッケージの整合性をチェック                                                                                           [############################################################################] 100%
(1/1) パッケージファイルのロード                                                                                             [############################################################################] 100%
(1/1) ファイルの衝突をチェック                                                                                               [############################################################################] 100%
(1/1) 空き容量を確認                                                                                                         [############################################################################] 100%
(1/1) インストール jenkins                                                                                                   [############################################################################] 100%
This installation of Jenkins uses port 8090 by default.
</pre>
<p>
デフォルトポートが <code>8090</code> って言っています！
</p>
</div>
</div>

<div id="outline-container-sec-2" class="outline-2">
<h2 id="sec-2"><span class="section-number-2">2</span> パッケージ構成</h2>
<div class="outline-text-2" id="text-2">
<pre class="example">
$ pacman -Ql jenkins
jenkins /etc/
jenkins /etc/conf.d/
jenkins /etc/conf.d/jenkins                     ★Jenkins起動パラメータの設定ファイル
jenkins /usr/
jenkins /usr/lib/
jenkins /usr/lib/systemd/
jenkins /usr/lib/systemd/system/
jenkins /usr/lib/systemd/system/jenkins.service ★サービス実行制御ファイル
jenkins /usr/lib/tmpfiles.d/
jenkins /usr/lib/tmpfiles.d/jenkins.conf        ★謎う？
jenkins /usr/share/
jenkins /usr/share/java/
jenkins /usr/share/java/jenkins/
jenkins /usr/share/java/jenkins/jenkins.war     ★Jenkins本体
jenkins /usr/share/licenses/
jenkins /usr/share/licenses/jenkins/
jenkins /usr/share/licenses/jenkins/LICENSE     ★MITライセンスファイル
</pre>
</div>
</div>

<div id="outline-container-sec-3" class="outline-2">
<h2 id="sec-3"><span class="section-number-2">3</span> 設定ファイル</h2>
<div class="outline-text-2" id="text-3">
<div class="org-src-container">

<pre class="src src-sh"><span style="color: #ff6347;">JAVA</span>=/usr/bin/java
<span style="color: #ff6347;">JAVA_ARGS</span>=-Xmx512m
<span style="color: #ff6347;">JAVA_OPTS</span>=
<span style="color: #ff6347;">JENKINS_USER</span>=jenkins
<span style="color: #ff6347;">JENKINS_HOME</span>=/var/lib/jenkins                   &#9733;Jenkins&#12518;&#12540;&#12470;&#12398;&#12507;&#12540;&#12512;&#12487;&#12451;&#12524;&#12463;&#12488;&#12522;(&#12503;&#12521;&#12464;&#12452;&#12531;&#12289;&#12472;&#12519;&#12502;&#23450;&#32681;&#12394;&#12393;)
<span style="color: #ff6347;">JENKINS_WAR</span>=/usr/share/java/jenkins/jenkins.war
<span style="color: #ff6347;">JENKINS_WEBROOT</span>=--webroot=/var/cache/jenkins    &#9733;&#23455;&#34892;&#26178;&#12395;WAR&#12364;&#12371;&#12371;&#12395;&#23637;&#38283;&#12373;&#12428;&#12427;
<span style="color: #ff6347;">JENKINS_PORT</span>=--httpPort=8090
<span style="color: #ff6347;">JENKINS_AJPPORT</span>=--ajp13Port=-1
<span style="color: #ff6347;">JENKINS_OPTS</span>=
<span style="color: #ff6347;">JENKINS_COMMAND_LINE</span>=<span style="color: #ad7fa8; font-style: italic;">"$JAVA $JAVA_ARGS $JAVA_OPTS -jar $JENKINS_WAR $JENKINS_WEBROOT $JENKINS_PORT $JENKINS_AJPPORT $JENKINS_OPTS"</span>

<span style="color: #888a85;"># </span><span style="color: #888a85;">vim:set ts=2 sw=2 et:</span>
</pre>
</div>
</div>
</div>

<div id="outline-container-sec-4" class="outline-2">
<h2 id="sec-4"><span class="section-number-2">4</span> サービス制御ファイル</h2>
<div class="outline-text-2" id="text-4">
<div class="org-src-container">

<pre class="src src-sh">$ cat /usr/lib/systemd/system/jenkins.service
[Unit]
<span style="color: #ff6347;">Description</span>=Extendable continuous integration server
<span style="color: #ff6347;">After</span>=network.target

[Service]
<span style="color: #ff6347;">User</span>=jenkins                                 &#9733;&#12469;&#12540;&#12499;&#12473;&#12398;&#23455;&#34892;&#12518;&#12540;&#12470;
<span style="color: #ff6347;">Type</span>=simple
<span style="color: #ff6347;">EnvironmentFile</span>=/etc/conf.d/jenkins
<span style="color: #ff6347;">StandardOutput</span>=syslog                        &#9733;&#27161;&#28310;&#12525;&#12464;&#20986;&#21147;&#20808;
<span style="color: #ff6347;">StandardError</span>=syslog                         &#9733;&#27161;&#28310;&#12456;&#12521;&#12540;&#12525;&#12464;&#20986;&#21147;&#20808;
<span style="color: #ff6347;">SyslogIdentifier</span>=jenkins                     &#9733;&#12471;&#12473;&#12486;&#12512;&#12459;&#12486;&#12468;&#12522;&#21517;
<span style="color: #ff6347;">ExecStart</span>=/bin/sh -c <span style="color: #ad7fa8; font-style: italic;">'eval $JENKINS_COMMAND_LINE'</span>
<span style="color: #888a85;">#</span><span style="color: #888a85;">MemoryLimit=768M</span>
<span style="color: #ff6347;">OOMScoreAdjust</span>=-1000
<span style="color: #ff6347;">LimitCPU</span>=infinity
<span style="color: #ff6347;">LimitFSIZE</span>=infinity
<span style="color: #ff6347;">LimitDATA</span>=infinity
<span style="color: #ff6347;">LimitCORE</span>=0
<span style="color: #ff6347;">LimitAS</span>=infinity
<span style="color: #ff6347;">LimitLOCKS</span>=infinity

[Install]
<span style="color: #ff6347;">WantedBy</span>=multi-user.target
</pre>
</div>
</div>
</div>

<div id="outline-container-sec-5" class="outline-2">
<h2 id="sec-5"><span class="section-number-2">5</span> サービス実行アカウントの確認</h2>
<div class="outline-text-2" id="text-5">
<pre class="example">
$ cat /etc/passwd
jenkins:x:997:996::/var/lib/jenkins:/bin/bash
</pre>
</div>
</div>
<div id="outline-container-sec-6" class="outline-2">
<h2 id="sec-6"><span class="section-number-2">6</span> サービスを起動してみる</h2>
<div class="outline-text-2" id="text-6">
<p>
起動コマンド
</p>
<pre class="example">
$ sudo systemctl start jenkins
</pre>

<p>
シスログ
</p>
<pre class="example">
$ sudo tail -f /var/log/everything.log
Jul 31 09:18:00 hakusai systemd[1]: Starting Extendable continuous integration server...
Jul 31 09:18:00 hakusai systemd[1]: Started Extendable continuous integration server.
Jul 31 09:18:02 hakusai jenkins[30946]: Running from: /usr/share/java/jenkins/jenkins.war
Jul 31 09:18:02 hakusai jenkins[30946]: 7 31, 2014 9:18:02 午前 winstone.Logger logInternal
Jul 31 09:18:02 hakusai jenkins[30946]: 情報: Beginning extraction from war file
Jul 31 09:18:03 hakusai jenkins[30946]: 7 31, 2014 9:18:03 午前 org.eclipse.jetty.util.log.JavaUtilLog info
Jul 31 09:18:03 hakusai jenkins[30946]: 情報: jetty-8.y.z-SNAPSHOT
Jul 31 09:18:05 hakusai jenkins[30946]: 7 31, 2014 9:18:05 午前 org.eclipse.jetty.util.log.JavaUtilLog info
Jul 31 09:18:05 hakusai jenkins[30946]: 情報: NO JSP Support for , did not find org.apache.jasper.servlet.JspServlet
Jul 31 09:18:06 hakusai jenkins[30946]: Jenkins home directory: /var/lib/jenkins found at: EnvVars.masterEnvVars.get("JENKINS_HOME")
Jul 31 09:18:06 hakusai jenkins[30946]: 7 31, 2014 9:18:06 午前 org.eclipse.jetty.util.log.JavaUtilLog info
Jul 31 09:18:06 hakusai jenkins[30946]: 情報: Started SelectChannelConnector@0.0.0.0:8090
Jul 31 09:18:06 hakusai jenkins[30946]: 7 31, 2014 9:18:06 午前 winstone.Logger logInternal
Jul 31 09:18:06 hakusai jenkins[30946]: 情報: Winstone Servlet Engine v2.0 running: controlPort=disabled
Jul 31 09:18:07 hakusai jenkins[30946]: 7 31, 2014 9:18:07 午前 jenkins.InitReactorRunner$1 onAttained
Jul 31 09:18:07 hakusai jenkins[30946]: 情報: Started initialization
Jul 31 09:18:14 hakusai jenkins[30946]: 7 31, 2014 9:18:14 午前 jenkins.InitReactorRunner$1 onAttained
Jul 31 09:18:14 hakusai jenkins[30946]: 情報: Listed all plugins
Jul 31 09:18:14 hakusai jenkins[30946]: 7 31, 2014 9:18:14 午前 jenkins.InitReactorRunner$1 onAttained
Jul 31 09:18:14 hakusai jenkins[30946]: 情報: Prepared all plugins
Jul 31 09:18:14 hakusai jenkins[30946]: 7 31, 2014 9:18:14 午前 jenkins.InitReactorRunner$1 onAttained
Jul 31 09:18:14 hakusai jenkins[30946]: 情報: Started all plugins
Jul 31 09:18:14 hakusai jenkins[30946]: 7 31, 2014 9:18:14 午前 jenkins.InitReactorRunner$1 onAttained
Jul 31 09:18:14 hakusai jenkins[30946]: 情報: Augmented all extensions
Jul 31 09:18:14 hakusai jenkins[30946]: 7 31, 2014 9:18:14 午前 jenkins.InitReactorRunner$1 onAttained
Jul 31 09:18:14 hakusai jenkins[30946]: 情報: Loaded all jobs
Jul 31 09:18:17 hakusai jenkins[30946]: 7 31, 2014 9:18:17 午前 org.jenkinsci.main.modules.sshd.SSHD start
Jul 31 09:18:17 hakusai jenkins[30946]: 情報: Started SSHD at port 42690
Jul 31 09:18:17 hakusai jenkins[30946]: 7 31, 2014 9:18:17 午前 jenkins.InitReactorRunner$1 onAttained
Jul 31 09:18:17 hakusai jenkins[30946]: 情報: Completed initialization
Jul 31 09:18:17 hakusai jenkins[30946]: 7 31, 2014 9:18:17 午前 hudson.WebAppMain$3 run
Jul 31 09:18:17 hakusai jenkins[30946]: 情報: Jenkins is fully up and running
</pre>

<p>
起動後 <code>/var/lib/jenkins</code> ディレクトリの様子
</p>
<pre class="example">
/var/lib/jenkins
├── Fingerprint cleanup.log
├── hudson.model.UpdateCenter.xml
├── identity.key.enc
├── jobs
├── nodeMonitors.xml
├── plugins
│   ├── ant
│   │   ├── META-INF
│   │   │   ├── MANIFEST.MF
│   │   │   └── maven
│   │   │       └── org.jenkins-ci.plugins
│   │   │           └── ant
│   │   │               ├── pom.properties
│   │   │               └── pom.xml
│   │   └── WEB-INF
│   │       ├── lib
│   │       │   └── classes.jar
│   │       └── licenses.xml
│   ├── ant.jpi
│   ├── antisamy-markup-formatter
│   │   ├── META-INF
│   │   │   ├── MANIFEST.MF
│   │   │   └── maven
│   │   │       └── org.jenkins-ci.plugins
│   │   │           └── antisamy-markup-formatter
│   │   │               ├── pom.properties
│   │   │               └── pom.xml
│   │   └── WEB-INF
│   │       ├── lib
│   │       │   ├── antisamy-markup-formatter.jar
│   │       │   └── owasp-html-sanitizer-r88.jar
│   │       └── licenses.xml
│   ├── antisamy-markup-formatter.jpi
│   ├── credentials
│   │   ├── META-INF
│   │   │   ├── MANIFEST.MF
│   │   │   └── maven
│   │   │       └── org.jenkins-ci.plugins
│   │   │           └── credentials
│   │   │               ├── pom.properties
│   │   │               └── pom.xml
│   │   ├── WEB-INF
│   │   │   ├── lib
│   │   │   │   ├── classes.jar
│   │   │   │   ├── findbugs-annotations-1.3.9-1.jar
│   │   │   │   ├── jcip-annotations-1.0.jar
│   │   │   │   └── jsr305-1.3.9.jar
│   │   │   └── licenses.xml
│   │   ├── help
│   │   │   └── domain
│   │   │       ├── description.html
│   │   │       ├── description_ja.html
│   │   │       ├── name.html
│   │   │       ├── name_ja.html
│   │   │       ├── specification.html
│   │   │       └── specification_ja.html
│   │   └── images
│   │       ├── 16x16
│   │       │   ├── credential.png
│   │       │   ├── credentials.png
│   │       │   ├── domain.png
│   │       │   ├── new-credential.png
│   │       │   └── new-domain.png
│   │       ├── 24x24
│   │       │   ├── credential.png
│   │       │   ├── credentials.png
│   │       │   ├── domain.png
│   │       │   ├── new-credential.png
│   │       │   └── new-domain.png
│   │       ├── 32x32
│   │       │   ├── credential.png
│   │       │   ├── credentials.png
│   │       │   ├── domain.png
│   │       │   ├── new-credential.png
│   │       │   └── new-domain.png
│   │       └── 48x48
│   │           ├── credential.png
│   │           ├── credentials.png
│   │           ├── domain.png
│   │           ├── new-credential.png
│   │           └── new-domain.png
│   ├── credentials.jpi
│   ├── cvs
│   │   ├── META-INF
│   │   │   ├── MANIFEST.MF
│   │   │   └── maven
│   │   │       └── org.jenkins-ci.plugins
│   │   │           └── cvs
│   │   │               ├── pom.properties
│   │   │               └── pom.xml
│   │   └── WEB-INF
│   │       ├── lib
│   │       │   ├── classes.jar
│   │       │   ├── cvsclient-71-jenkins-11.jar
│   │       │   └── jsch-0.1.50.jar
│   │       └── licenses.xml
│   ├── cvs.jpi
│   ├── external-monitor-job
│   │   ├── META-INF
│   │   │   ├── MANIFEST.MF
│   │   │   └── maven
│   │   │       └── org.jenkins-ci.plugins
│   │   │           └── external-monitor-job
│   │   │               ├── pom.properties
│   │   │               └── pom.xml
│   │   └── WEB-INF
│   │       ├── lib
│   │       │   └── classes.jar
│   │       └── licenses.xml
│   ├── external-monitor-job.jpi
│   ├── javadoc
│   │   ├── META-INF
│   │   │   ├── MANIFEST.MF
│   │   │   └── maven
│   │   │       └── org.jenkins-ci.plugins
│   │   │           └── javadoc
│   │   │               ├── pom.properties
│   │   │               └── pom.xml
│   │   └── WEB-INF
│   │       ├── lib
│   │       │   └── classes.jar
│   │       └── licenses.xml
│   ├── javadoc.jpi
│   ├── ldap
│   │   ├── META-INF
│   │   │   ├── MANIFEST.MF
│   │   │   └── maven
│   │   │       └── org.jenkins-ci.plugins
│   │   │           └── ldap
│   │   │               ├── pom.properties
│   │   │               └── pom.xml
│   │   ├── WEB-INF
│   │   │   ├── lib
│   │   │   │   └── classes.jar
│   │   │   └── licenses.xml
│   │   ├── help-cache.html
│   │   ├── help-groupMembershipFilter.html
│   │   └── help-groupSearchFilter.html
│   ├── ldap.jpi
│   ├── mailer
│   │   ├── META-INF
│   │   │   ├── MANIFEST.MF
│   │   │   └── maven
│   │   │       └── org.jenkins-ci.plugins
│   │   │           └── mailer
│   │   │               ├── pom.properties
│   │   │               └── pom.xml
│   │   └── WEB-INF
│   │       ├── lib
│   │       │   └── classes.jar
│   │       └── licenses.xml
│   ├── mailer.jpi
│   ├── matrix-auth
│   │   ├── META-INF
│   │   │   ├── MANIFEST.MF
│   │   │   └── maven
│   │   │       └── org.jenkins-ci.plugins
│   │   │           └── matrix-auth
│   │   │               ├── pom.properties
│   │   │               └── pom.xml
│   │   └── WEB-INF
│   │       ├── lib
│   │       │   └── classes.jar
│   │       └── licenses.xml
│   ├── matrix-auth.jpi
│   ├── matrix-project
│   │   ├── META-INF
│   │   │   ├── MANIFEST.MF
│   │   │   └── maven
│   │   │       └── org.jenkins-ci.plugins
│   │   │           └── matrix-project
│   │   │               ├── pom.properties
│   │   │               └── pom.xml
│   │   ├── WEB-INF
│   │   │   ├── lib
│   │   │   │   └── matrix-project.jar
│   │   │   └── licenses.xml
│   │   └── help
│   │       └── matrix
│   │           ├── axes.html
│   │           ├── axes_de.html
│   │           ├── axes_fr.html
│   │           ├── axes_ja.html
│   │           ├── axes_nl.html
│   │           ├── axes_pt_BR.html
│   │           ├── axes_ru.html
│   │           ├── axes_tr.html
│   │           ├── axes_zh_TW.html
│   │           ├── combinationfilter.html
│   │           ├── combinationfilter_de.html
│   │           ├── combinationfilter_fr.html
│   │           ├── combinationfilter_ja.html
│   │           ├── combinationfilter_zh_TW.html
│   │           ├── jdk.html
│   │           ├── jdk_de.html
│   │           ├── jdk_fr.html
│   │           ├── jdk_ja.html
│   │           ├── jdk_nl.html
│   │           ├── jdk_pt_BR.html
│   │           ├── jdk_ru.html
│   │           ├── jdk_tr.html
│   │           └── jdk_zh_TW.html
│   ├── matrix-project.jpi
│   ├── maven-plugin
│   │   ├── META-INF
│   │   │   ├── MANIFEST.MF
│   │   │   └── maven
│   │   │       └── org.jenkins-ci.main
│   │   │           └── maven-plugin
│   │   │               ├── pom.properties
│   │   │               └── pom.xml
│   │   ├── WEB-INF
│   │   │   ├── lib
│   │   │   │   ├── aether-api-0.9.0.M3.jar
│   │   │   │   ├── aether-connector-wagon-0.9.0.M2.jar
│   │   │   │   ├── aether-impl-0.9.0.M3.jar
│   │   │   │   ├── aether-spi-0.9.0.M3.jar
│   │   │   │   ├── aether-transport-wagon-0.9.0.M3.jar
│   │   │   │   ├── aether-util-0.9.0.M3.jar
│   │   │   │   ├── ant-1.9.2.jar
│   │   │   │   ├── ant-launcher-1.9.2.jar
│   │   │   │   ├── aopalliance-1.0.jar
│   │   │   │   ├── cdi-api-1.0.jar
│   │   │   │   ├── classes.jar
│   │   │   │   ├── commons-cli-1.2.jar
│   │   │   │   ├── commons-codec-1.6.jar
│   │   │   │   ├── commons-httpclient-3.1.jar
│   │   │   │   ├── commons-io-2.2.jar
│   │   │   │   ├── commons-lang-2.6.jar
│   │   │   │   ├── commons-logging-1.1.1.jar
│   │   │   │   ├── commons-net-3.1.jar
│   │   │   │   ├── doxia-sink-api-1.0.jar
│   │   │   │   ├── guava-11.0.1.jar
│   │   │   │   ├── guice-4.0-beta.jar
│   │   │   │   ├── httpclient-4.2.5.jar
│   │   │   │   ├── httpcore-4.2.4.jar
│   │   │   │   ├── jackrabbit-webdav-2.5.2.jar
│   │   │   │   ├── javax.inject-1.jar
│   │   │   │   ├── jsch-0.1.44-1.jar
│   │   │   │   ├── jsoup-1.7.1.jar
│   │   │   │   ├── jsr250-api-1.0.jar
│   │   │   │   ├── jsr305-1.3.9.jar
│   │   │   │   ├── lib-jenkins-maven-artifact-manager-1.2.jar
│   │   │   │   ├── lib-jenkins-maven-embedder-3.11.jar
│   │   │   │   ├── maven-aether-provider-3.1.0.jar
│   │   │   │   ├── maven-agent-1.5.jar
│   │   │   │   ├── maven-artifact-3.1.0.jar
│   │   │   │   ├── maven-compat-3.1.0.jar
│   │   │   │   ├── maven-core-3.1.0.jar
│   │   │   │   ├── maven-embedder-3.1.0.jar
│   │   │   │   ├── maven-interceptor-1.5.jar
│   │   │   │   ├── maven-model-3.1.0.jar
│   │   │   │   ├── maven-model-builder-3.1.0.jar
│   │   │   │   ├── maven-plugin-api-3.1.0.jar
│   │   │   │   ├── maven-reporting-api-3.0.jar
│   │   │   │   ├── maven-repository-metadata-3.1.0.jar
│   │   │   │   ├── maven-settings-3.1.0.jar
│   │   │   │   ├── maven-settings-builder-3.1.0.jar
│   │   │   │   ├── maven2.1-interceptor-1.2.jar
│   │   │   │   ├── maven3-agent-1.5.jar
│   │   │   │   ├── maven3-interceptor-1.5.jar
│   │   │   │   ├── maven3-interceptor-commons-1.5.jar
│   │   │   │   ├── maven31-agent-1.5.jar
│   │   │   │   ├── maven31-interceptor-1.5.jar
│   │   │   │   ├── org.eclipse.sisu.inject-0.0.0.M5.jar
│   │   │   │   ├── org.eclipse.sisu.plexus-0.0.0.M5.jar
│   │   │   │   ├── plexus-cipher-1.7.jar
│   │   │   │   ├── plexus-classworlds-2.5.1.jar
│   │   │   │   ├── plexus-component-annotations-1.5.5.jar
│   │   │   │   ├── plexus-interactivity-api-1.0-alpha-6.jar
│   │   │   │   ├── plexus-interpolation-1.16.jar
│   │   │   │   ├── plexus-sec-dispatcher-1.3.jar
│   │   │   │   ├── plexus-utils-3.0.10.jar
│   │   │   │   ├── slf4j-api-1.7.4.jar
│   │   │   │   ├── wagon-file-2.4.jar
│   │   │   │   ├── wagon-ftp-2.4.jar
│   │   │   │   ├── wagon-http-2.4.jar
│   │   │   │   ├── wagon-http-shared-2.4.jar
│   │   │   │   ├── wagon-http-shared4-2.4.jar
│   │   │   │   ├── wagon-provider-api-2.4.jar
│   │   │   │   ├── wagon-ssh-2.4.jar
│   │   │   │   ├── wagon-ssh-common-2.4.jar
│   │   │   │   ├── wagon-ssh-external-2.4.jar
│   │   │   │   └── wagon-webdav-jackrabbit-2.4.jar
│   │   │   └── licenses.xml
│   │   ├── aggregator.html
│   │   ├── aggregator_de.html
│   │   ├── aggregator_fr.html
│   │   ├── aggregator_ja.html
│   │   ├── aggregator_pt_BR.html
│   │   ├── aggregator_ru.html
│   │   ├── aggregator_tr.html
│   │   ├── aggregator_zh_TW.html
│   │   ├── archivingDisabled.html
│   │   ├── archivingDisabled_de.html
│   │   ├── archivingDisabled_ja.html
│   │   ├── archivingDisabled_zh_TW.html
│   │   ├── downstreamDisabled.html
│   │   ├── downstreamDisabled_de.html
│   │   ├── downstreamDisabled_ja.html
│   │   ├── downstreamDisabled_zh_TW.html
│   │   ├── fingerprintingDisabled.html
│   │   ├── goals.html
│   │   ├── goals_de.html
│   │   ├── goals_fr.html
│   │   ├── goals_ja.html
│   │   ├── goals_pt_BR.html
│   │   ├── goals_ru.html
│   │   ├── goals_tr.html
│   │   ├── goals_zh_TW.html
│   │   ├── ignore-upstrem-changes.html
│   │   ├── ignore-upstrem-changes_de.html
│   │   ├── ignore-upstrem-changes_fr.html
│   │   ├── ignore-upstrem-changes_ja.html
│   │   ├── ignore-upstrem-changes_zh_TW.html
│   │   ├── incremental.html
│   │   ├── incremental_de.html
│   │   ├── incremental_zh_TW.html
│   │   ├── maven-opts.html
│   │   ├── maven-opts_de.html
│   │   ├── maven-opts_fr.html
│   │   ├── maven-opts_ja.html
│   │   ├── maven-opts_pt_BR.html
│   │   ├── maven-opts_ru.html
│   │   ├── maven-opts_tr.html
│   │   ├── maven-opts_zh_CN.html
│   │   ├── maven-opts_zh_TW.html
│   │   ├── module-goals.html
│   │   ├── module-goals_de.html
│   │   ├── module-goals_fr.html
│   │   ├── module-goals_ja.html
│   │   ├── module-goals_pt_BR.html
│   │   ├── module-goals_ru.html
│   │   ├── module-goals_tr.html
│   │   ├── module-goals_zh_TW.html
│   │   ├── per-module-email.html
│   │   ├── per-module-email_de.html
│   │   ├── per-module-email_ja.html
│   │   ├── per-module-email_zh_TW.html
│   │   ├── private-repository.html
│   │   ├── private-repository_de.html
│   │   ├── private-repository_fr.html
│   │   ├── private-repository_ja.html
│   │   ├── private-repository_tr.html
│   │   ├── private-repository_zh_TW.html
│   │   ├── root-pom.html
│   │   ├── root-pom_de.html
│   │   ├── root-pom_fr.html
│   │   ├── root-pom_ja.html
│   │   ├── root-pom_pt_BR.html
│   │   ├── root-pom_ru.html
│   │   ├── root-pom_tr.html
│   │   ├── root-pom_zh_TW.html
│   │   ├── run-headless.html
│   │   ├── run-headless_de.html
│   │   ├── run-headless_fr.html
│   │   ├── run-headless_ja.html
│   │   ├── run-headless_zh_TW.html
│   │   ├── siteArchivingDisabled.html
│   │   └── siteArchivingDisabled_de.html
│   ├── maven-plugin.jpi
│   ├── pam-auth
│   │   ├── META-INF
│   │   │   ├── MANIFEST.MF
│   │   │   └── maven
│   │   │       └── org.jenkins-ci.plugins
│   │   │           └── pam-auth
│   │   │               ├── pom.properties
│   │   │               └── pom.xml
│   │   └── WEB-INF
│   │       ├── lib
│   │       │   ├── classes.jar
│   │       │   ├── jna-3.4.0.jar
│   │       │   └── libpam4j-1.6.jar
│   │       └── licenses.xml
│   ├── pam-auth.jpi
│   ├── ssh-credentials
│   │   ├── META-INF
│   │   │   ├── MANIFEST.MF
│   │   │   └── maven
│   │   │       └── org.jenkins-ci.plugins
│   │   │           └── ssh-credentials
│   │   │               ├── pom.properties
│   │   │               └── pom.xml
│   │   └── WEB-INF
│   │       ├── lib
│   │       │   └── classes.jar
│   │       └── licenses.xml
│   ├── ssh-credentials.jpi
│   ├── ssh-slaves
│   │   ├── META-INF
│   │   │   ├── MANIFEST.MF
│   │   │   └── maven
│   │   │       └── org.jenkins-ci.plugins
│   │   │           └── ssh-slaves
│   │   │               ├── pom.properties
│   │   │               └── pom.xml
│   │   └── WEB-INF
│   │       ├── lib
│   │       │   └── classes.jar
│   │       └── licenses.xml
│   ├── ssh-slaves.jpi
│   ├── subversion
│   │   ├── META-INF
│   │   │   ├── MANIFEST.MF
│   │   │   └── maven
│   │   │       └── org.jenkins-ci.plugins
│   │   │           └── subversion
│   │   │               ├── pom.properties
│   │   │               └── pom.xml
│   │   ├── WEB-INF
│   │   │   ├── lib
│   │   │   │   ├── antlr-runtime-3.4.jar
│   │   │   │   ├── classes.jar
│   │   │   │   ├── sequence-library-1.0.2.jar
│   │   │   │   ├── sqljet-1.1.7.jar
│   │   │   │   ├── svnkit-1.7.10-jenkins-1.jar
│   │   │   │   └── trilead-ssh2-build217-jenkins-3.jar
│   │   │   └── licenses.xml
│   │   ├── pass-phrase.html
│   │   ├── pass-phrase_de.html
│   │   ├── pass-phrase_fr.html
│   │   ├── pass-phrase_ja.html
│   │   ├── pass-phrase_pt_BR.html
│   │   ├── pass-phrase_ru.html
│   │   ├── pass-phrase_tr.html
│   │   └── pass-phrase_zh_TW.html
│   ├── subversion.jpi
│   ├── translation
│   │   ├── META-INF
│   │   │   ├── MANIFEST.MF
│   │   │   └── maven
│   │   │       └── org.jenkins-ci.plugins
│   │   │           └── translation
│   │   │               ├── pom.properties
│   │   │               └── pom.xml
│   │   ├── WEB-INF
│   │   │   ├── lib
│   │   │   │   └── classes.jar
│   │   │   └── licenses.xml
│   │   ├── dialog.js
│   │   └── flags.png
│   ├── translation.jpi
│   ├── windows-slaves
│   │   ├── META-INF
│   │   │   ├── MANIFEST.MF
│   │   │   └── maven
│   │   │       └── org.jenkins-ci.plugins
│   │   │           └── windows-slaves
│   │   │               ├── pom.properties
│   │   │               └── pom.xml
│   │   └── WEB-INF
│   │       ├── lib
│   │       │   ├── j-interop-2.0.6-kohsuke-1.jar
│   │       │   ├── j-interopdeps-2.0.6-kohsuke-1.jar
│   │       │   ├── jcifs-1.3.17-kohsuke-1.jar
│   │       │   ├── jinterop-proxy-1.1.jar
│   │       │   ├── jinterop-wmi-1.1.jar
│   │       │   ├── tiger-types-1.1.jar
│   │       │   ├── windows-remote-command-1.4.jar
│   │       │   └── windows-slaves.jar
│   │       └── licenses.xml
│   └── windows-slaves.jpi
├── secret.key
├── secret.key.not-so-secret
├── secrets
│   ├── master.key
│   └── org.jenkinsci.main.modules.instance_identity.InstanceIdentity.KEY
└── userContent
    └── readme.txt
</pre>

<p>
起動後 <code>/var/lib/jenkins</code> ディレクトリの様子
</p>
<pre class="example">
/var/cache/jenkins
├── ColorFormatter.class
├── JNLPMain.class
├── LogFileOutputStream$1.class
├── LogFileOutputStream$2.class
├── LogFileOutputStream.class
├── META-INF
│   ├── JENKINS.RSA
│   ├── JENKINS.SF
│   ├── MANIFEST.MF
│   └── maven
│       └── org.jenkins-ci.main
│           └── jenkins-war
│               ├── pom.properties
│               └── pom.xml
├── Main$FileAndDescription.class
├── Main.class
├── MainDialog$1$1.class
├── MainDialog$1.class
├── MainDialog.class
├── WEB-INF
│   ├── classes
│   │   ├── META-INF
│   │   │   ├── licenses.html
│   │   │   └── licenses.xml
│   │   └── dependencies.txt
│   ├── hudson
│   ├── ibm-web-bnd.xmi
│   ├── jenkins-cli.jar
│   ├── jonas-web.xml
│   ├── lib
│   │   ├── access-modifier-annotation-1.4.jar
│   │   ├── acegi-security-1.0.7.jar
│   │   ├── activation-1.1.1-hudson-1.jar
│   │   ├── akuma-1.9.jar
│   │   ├── annotation-indexer-1.7.jar
│   │   ├── ant-1.8.3.jar
│   │   ├── ant-launcher-1.8.3.jar
│   │   ├── antlr-2.7.6.jar
│   │   ├── aopalliance-1.0.jar
│   │   ├── args4j-2.0.23.jar
│   │   ├── asm-4.0.jar
│   │   ├── asm-analysis-4.0.jar
│   │   ├── asm-commons-4.0.jar
│   │   ├── asm-tree-4.0.jar
│   │   ├── asm-util-4.0.jar
│   │   ├── asm5-5.0.1.jar
│   │   ├── bcpkix-jdk15on-1.47.jar
│   │   ├── bcprov-jdk15on-1.47.jar
│   │   ├── bridge-method-annotation-1.9.jar
│   │   ├── bytecode-compatibility-transformer-1.5.jar
│   │   ├── cli-1.574.jar
│   │   ├── commons-beanutils-1.8.3.jar
│   │   ├── commons-codec-1.8.jar
│   │   ├── commons-collections-3.2.1.jar
│   │   ├── commons-digester-2.1.jar
│   │   ├── commons-discovery-0.4.jar
│   │   ├── commons-fileupload-1.2.1.jar
│   │   ├── commons-httpclient-3.1.jar
│   │   ├── commons-io-2.4.jar
│   │   ├── commons-jelly-1.1-jenkins-20120928.jar
│   │   ├── commons-jelly-tags-define-1.0.1-hudson-20071021.jar
│   │   ├── commons-jelly-tags-fmt-1.0.jar
│   │   ├── commons-jelly-tags-xml-1.1.jar
│   │   ├── commons-jexl-1.1-jenkins-20111212.jar
│   │   ├── commons-lang-2.6.jar
│   │   ├── commons-logging-1.1.3.jar
│   │   ├── constant-pool-scanner-1.2.jar
│   │   ├── crypto-util-1.1.jar
│   │   ├── dom4j-1.6.1-hudson-3.jar
│   │   ├── embedded_su4j-1.1.jar
│   │   ├── ezmorph-1.0.6.jar
│   │   ├── groovy-all-1.8.9.jar
│   │   ├── guava-11.0.1.jar
│   │   ├── guice-4.0-beta-no_aop.jar
│   │   ├── hamcrest-core-1.3.jar
│   │   ├── instance-identity-1.4.jar
│   │   ├── j-interop-2.0.6-kohsuke-1.jar
│   │   ├── j-interopdeps-2.0.6-kohsuke-1.jar
│   │   ├── jansi-1.9.jar
│   │   ├── javax.annotation-api-1.2.jar
│   │   ├── javax.inject-1.jar
│   │   ├── jaxen-1.1-beta-11.jar
│   │   ├── jbcrypt-0.3m.jar
│   │   ├── jcifs-1.3.17-kohsuke-1.jar
│   │   ├── jcommon-1.0.12.jar
│   │   ├── jenkins-core-1.574.jar
│   │   ├── jffi-1.2.7-native.jar
│   │   ├── jffi-1.2.7.jar
│   │   ├── jfreechart-1.0.9.jar
│   │   ├── jline-0.9.94.jar
│   │   ├── jmdns-3.4.0-jenkins-3.jar
│   │   ├── jna-3.3.0-jenkins-3.jar
│   │   ├── jna-posix-1.0.3.jar
│   │   ├── jnr-constants-0.8.5.jar
│   │   ├── jnr-ffi-1.0.7.jar
│   │   ├── jnr-posix-3.0.1.jar
│   │   ├── jnr-x86asm-1.0.2.jar
│   │   ├── json-lib-2.4-jenkins-2.jar
│   │   ├── jsr305-1.3.9.jar
│   │   ├── jstl-1.1.0.jar
│   │   ├── jtidy-4aug2000r7-dev-hudson-1.jar
│   │   ├── junit-4.11.jar
│   │   ├── jzlib-1.1.3-kohsuke-1.jar
│   │   ├── launchd-slave-installer-1.2.jar
│   │   ├── libpam4j-1.6.jar
│   │   ├── libzfs-0.5.jar
│   │   ├── localizer-1.10.jar
│   │   ├── log4j-1.2.9.jar
│   │   ├── mail-1.4.4.jar
│   │   ├── memory-monitor-1.8.jar
│   │   ├── mina-core-2.0.5.jar
│   │   ├── oro-2.0.8.jar
│   │   ├── relaxngDatatype-20020414.jar
│   │   ├── remoting-2.43.jar
│   │   ├── robust-http-client-1.2.jar
│   │   ├── sezpoz-1.9.jar
│   │   ├── slave-installer-1.3.jar
│   │   ├── slf4j-api-1.7.7.jar
│   │   ├── slf4j-jdk14-1.7.7.jar
│   │   ├── spring-aop-2.5.6.SEC03.jar
│   │   ├── spring-beans-2.5.6.SEC03.jar
│   │   ├── spring-context-2.5.6.SEC03.jar
│   │   ├── spring-context-support-2.5.6.SEC03.jar
│   │   ├── spring-core-2.5.6.SEC03.jar
│   │   ├── spring-dao-1.2.9.jar
│   │   ├── spring-jdbc-1.2.9.jar
│   │   ├── spring-web-2.5.6.SEC03.jar
│   │   ├── spring-webmvc-2.5.6.SEC03.jar
│   │   ├── ssh-cli-auth-1.2.jar
│   │   ├── sshd-1.6.jar
│   │   ├── sshd-core-0.8.0.jar
│   │   ├── stapler-1.227.jar
│   │   ├── stapler-adjunct-codemirror-1.3.jar
│   │   ├── stapler-adjunct-timeline-1.4.jar
│   │   ├── stapler-adjunct-zeroclipboard-1.1.7-1.jar
│   │   ├── stapler-groovy-1.227.jar
│   │   ├── stapler-jelly-1.227.jar
│   │   ├── stapler-jrebel-1.227.jar
│   │   ├── stax-api-1.0-2.jar
│   │   ├── stax-api-1.0.1.jar
│   │   ├── systemd-slave-installer-1.1.jar
│   │   ├── task-reactor-1.4.jar
│   │   ├── tiger-types-1.3.jar
│   │   ├── trilead-putty-extension-1.2.jar
│   │   ├── trilead-ssh2-build217-jenkins-5.jar
│   │   ├── txw2-20110809.jar
│   │   ├── upstart-slave-installer-1.1.jar
│   │   ├── version-number-1.1.jar
│   │   ├── windows-package-checker-1.0.jar
│   │   ├── windows-slave-installer-1.4.jar
│   │   ├── winp-1.20.jar
│   │   ├── wstx-asl-3.2.9.jar
│   │   ├── xpp3-1.1.4c.jar
│   │   └── xstream-1.4.7-jenkins-1.jar
│   ├── plugins
│   │   ├── ant.hpi
│   │   ├── antisamy-markup-formatter.hpi
│   │   ├── credentials.hpi
│   │   ├── cvs.hpi
│   │   ├── external-monitor-job.hpi
│   │   ├── javadoc.hpi
│   │   ├── ldap.hpi
│   │   ├── mailer.hpi
│   │   ├── matrix-auth.hpi
│   │   ├── matrix-project.hpi
│   │   ├── maven-plugin.hpi
│   │   ├── pam-auth.hpi
│   │   ├── ssh-credentials.hpi
│   │   ├── ssh-slaves.hpi
│   │   ├── subversion.hpi
│   │   ├── translation.hpi
│   │   └── windows-slaves.hpi
│   ├── remoting.jar
│   ├── security
│   │   ├── AbstractPasswordBasedSecurityRealm.groovy
│   │   └── SecurityFilters.groovy
│   ├── slave.jar
│   ├── sun-web.xml
│   ├── update-center-rootCAs
│   │   ├── hudson-community
│   │   ├── hudson-community.txt
│   │   ├── jenkins-update-center-root-ca
│   │   └── jenkins-update-center-root-ca.txt
│   └── web.xml
├── css
│   ├── color.css
│   ├── responsive-grid.css
│   └── style.css
├── dc-license.txt
├── executable
│   └── Executable.class
├── favicon.ico
├── help
│   ├── LogRecorder
│   │   ├── logger.html
│   │   ├── logger_de.html
│   │   ├── logger_fr.html
│   │   ├── logger_ja.html
│   │   ├── logger_zh_TW.html
│   │   ├── name.html
│   │   ├── name_de.html
│   │   ├── name_fr.html
│   │   ├── name_ja.html
│   │   └── name_zh_TW.html
│   ├── parameter
│   │   ├── boolean-default.html
│   │   ├── boolean-default_de.html
│   │   ├── boolean-default_fr.html
│   │   ├── boolean-default_ja.html
│   │   ├── boolean-default_zh_TW.html
│   │   ├── boolean.html
│   │   ├── boolean_de.html
│   │   ├── boolean_fr.html
│   │   ├── boolean_ja.html
│   │   ├── boolean_zh_TW.html
│   │   ├── choice-choices.html
│   │   ├── choice-choices_de.html
│   │   ├── choice-choices_fr.html
│   │   ├── choice-choices_ja.html
│   │   ├── choice-choices_zh_TW.html
│   │   ├── choice.html
│   │   ├── choice_de.html
│   │   ├── choice_fr.html
│   │   ├── choice_ja.html
│   │   ├── choice_zh_TW.html
│   │   ├── description.html
│   │   ├── description_de.html
│   │   ├── description_fr.html
│   │   ├── description_ja.html
│   │   ├── description_zh_TW.html
│   │   ├── file-name.html
│   │   ├── file-name_de.html
│   │   ├── file-name_fr.html
│   │   ├── file-name_ja.html
│   │   ├── file-name_zh_TW.html
│   │   ├── file.html
│   │   ├── file_de.html
│   │   ├── file_fr.html
│   │   ├── file_ja.html
│   │   ├── file_zh_TW.html
│   │   ├── name.html
│   │   ├── name_de.html
│   │   ├── name_fr.html
│   │   ├── name_ja.html
│   │   ├── name_zh_TW.html
│   │   ├── run-filter.html
│   │   ├── run-project.html
│   │   ├── run-project_de.html
│   │   ├── run-project_fr.html
│   │   ├── run-project_ja.html
│   │   ├── run-project_zh_TW.html
│   │   ├── run.html
│   │   ├── run_de.html
│   │   ├── run_fr.html
│   │   ├── run_ja.html
│   │   ├── run_zh_TW.html
│   │   ├── string-default.html
│   │   ├── string-default_de.html
│   │   ├── string-default_fr.html
│   │   ├── string-default_ja.html
│   │   ├── string-default_zh_TW.html
│   │   ├── string.html
│   │   ├── string_de.html
│   │   ├── string_fr.html
│   │   ├── string_ja.html
│   │   └── string_zh_TW.html
│   ├── project-config
│   │   ├── batch.html
│   │   ├── batch_de.html
│   │   ├── batch_fr.html
│   │   ├── batch_ja.html
│   │   ├── batch_pt_BR.html
│   │   ├── batch_ru.html
│   │   ├── batch_tr.html
│   │   ├── batch_zh_TW.html
│   │   ├── block-downstream-building.html
│   │   ├── block-downstream-building_ja.html
│   │   ├── block-downstream-building_zh_TW.html
│   │   ├── block-upstream-building.html
│   │   ├── block-upstream-building_de.html
│   │   ├── block-upstream-building_ja.html
│   │   ├── block-upstream-building_zh_TW.html
│   │   ├── custom-workspace.html
│   │   ├── custom-workspace_de.html
│   │   ├── custom-workspace_fr.html
│   │   ├── custom-workspace_ja.html
│   │   ├── custom-workspace_tr.html
│   │   ├── custom-workspace_zh_TW.html
│   │   ├── defaultView.html
│   │   ├── defaultView_de.html
│   │   ├── defaultView_ja.html
│   │   ├── defaultView_zh_TW.html
│   │   ├── description.html
│   │   ├── description_de.html
│   │   ├── description_fr.html
│   │   ├── description_ja.html
│   │   ├── description_pt_BR.html
│   │   ├── description_ru.html
│   │   ├── description_tr.html
│   │   ├── description_zh_TW.html
│   │   ├── disable.html
│   │   ├── disable_de.html
│   │   ├── disable_fr.html
│   │   ├── disable_ja.html
│   │   ├── disable_pt_BR.html
│   │   ├── disable_ru.html
│   │   ├── disable_tr.html
│   │   ├── disable_zh_TW.html
│   │   ├── downstream.html
│   │   ├── downstream_de.html
│   │   ├── downstream_fr.html
│   │   ├── downstream_ja.html
│   │   ├── downstream_pt_BR.html
│   │   ├── downstream_ru.html
│   │   ├── downstream_tr.html
│   │   ├── downstream_zh_TW.html
│   │   ├── fingerprint.html
│   │   ├── fingerprint_de.html
│   │   ├── fingerprint_fr.html
│   │   ├── fingerprint_ja.html
│   │   ├── fingerprint_pt_BR.html
│   │   ├── fingerprint_ru.html
│   │   ├── fingerprint_tr.html
│   │   ├── fingerprint_zh_TW.html
│   │   ├── javadoc-keep-all.html
│   │   ├── javadoc-keep-all_de.html
│   │   ├── javadoc-keep-all_fr.html
│   │   ├── javadoc-keep-all_ja.html
│   │   ├── javadoc-keep-all_tr.html
│   │   ├── javadoc-keep-all_zh_TW.html
│   │   ├── log-rotation.html
│   │   ├── log-rotation_de.html
│   │   ├── log-rotation_fr.html
│   │   ├── log-rotation_ja.html
│   │   ├── log-rotation_pt_BR.html
│   │   ├── log-rotation_ru.html
│   │   ├── log-rotation_tr.html
│   │   ├── log-rotation_zh_TW.html
│   │   ├── parameterized-build.html
│   │   ├── parameterized-build_de.html
│   │   ├── parameterized-build_fr.html
│   │   ├── parameterized-build_ja.html
│   │   ├── parameterized-build_tr.html
│   │   ├── parameterized-build_zh_TW.html
│   │   ├── scmCheckoutRetryCount.html
│   │   ├── scmCheckoutRetryCount_de.html
│   │   ├── scmCheckoutRetryCount_ja.html
│   │   ├── scmCheckoutRetryCount_zh_CN.html
│   │   ├── scmCheckoutRetryCount_zh_TW.html
│   │   ├── triggerRemotely.html
│   │   ├── triggerRemotely_de.html
│   │   ├── triggerRemotely_fr.html
│   │   ├── triggerRemotely_ja.html
│   │   ├── triggerRemotely_pt_BR.html
│   │   ├── triggerRemotely_ru.html
│   │   ├── triggerRemotely_tr.html
│   │   └── triggerRemotely_zh_TW.html
│   ├── run-config
│   │   ├── description.html
│   │   ├── description_de.html
│   │   ├── description_ja.html
│   │   ├── description_zh_TW.html
│   │   ├── displayName.html
│   │   ├── displayName_de.html
│   │   ├── displayName_ja.html
│   │   └── displayName_zh_TW.html
│   ├── scm-browsers
│   │   ├── list.html
│   │   ├── list_de.html
│   │   ├── list_ja.html
│   │   └── list_zh_TW.html
│   ├── security
│   │   ├── container-realm.html
│   │   ├── container-realm_de.html
│   │   ├── container-realm_fr.html
│   │   ├── container-realm_ja.html
│   │   ├── container-realm_pt_BR.html
│   │   ├── container-realm_ru.html
│   │   ├── container-realm_tr.html
│   │   ├── container-realm_zh_CN.html
│   │   ├── container-realm_zh_TW.html
│   │   ├── full-control-once-logged-in.html
│   │   ├── full-control-once-logged-in_de.html
│   │   ├── full-control-once-logged-in_fr.html
│   │   ├── full-control-once-logged-in_ja.html
│   │   ├── full-control-once-logged-in_pt_BR.html
│   │   ├── full-control-once-logged-in_ru.html
│   │   ├── full-control-once-logged-in_tr.html
│   │   ├── full-control-once-logged-in_zh_CN.html
│   │   ├── full-control-once-logged-in_zh_TW.html
│   │   ├── ldap
│   │   │   ├── groupSearchBase.html
│   │   │   ├── groupSearchBase_de.html
│   │   │   ├── groupSearchBase_fr.html
│   │   │   ├── groupSearchBase_ja.html
│   │   │   ├── groupSearchBase_tr.html
│   │   │   ├── groupSearchBase_zh_TW.html
│   │   │   ├── managerDN.html
│   │   │   ├── managerDN_de.html
│   │   │   ├── managerDN_fr.html
│   │   │   ├── managerDN_ja.html
│   │   │   ├── managerDN_pt_BR.html
│   │   │   ├── managerDN_tr.html
│   │   │   ├── managerDN_zh_TW.html
│   │   │   ├── managerPassword.html
│   │   │   ├── managerPassword_de.html
│   │   │   ├── managerPassword_fr.html
│   │   │   ├── managerPassword_ja.html
│   │   │   ├── managerPassword_pt_BR.html
│   │   │   ├── managerPassword_tr.html
│   │   │   ├── managerPassword_zh_TW.html
│   │   │   ├── rootDN.html
│   │   │   ├── rootDN_de.html
│   │   │   ├── rootDN_fr.html
│   │   │   ├── rootDN_ja.html
│   │   │   ├── rootDN_pt_BR.html
│   │   │   ├── rootDN_ru.html
│   │   │   ├── rootDN_tr.html
│   │   │   ├── rootDN_zh_TW.html
│   │   │   ├── server.html
│   │   │   ├── server_de.html
│   │   │   ├── server_fr.html
│   │   │   ├── server_ja.html
│   │   │   ├── server_pt_BR.html
│   │   │   ├── server_ru.html
│   │   │   ├── server_tr.html
│   │   │   ├── server_zh_TW.html
│   │   │   ├── userSearchBase.html
│   │   │   ├── userSearchBase_de.html
│   │   │   ├── userSearchBase_fr.html
│   │   │   ├── userSearchBase_ja.html
│   │   │   ├── userSearchBase_pt_BR.html
│   │   │   ├── userSearchBase_ru.html
│   │   │   ├── userSearchBase_tr.html
│   │   │   ├── userSearchBase_zh_TW.html
│   │   │   ├── userSearchFilter.html
│   │   │   ├── userSearchFilter_de.html
│   │   │   ├── userSearchFilter_fr.html
│   │   │   ├── userSearchFilter_ja.html
│   │   │   ├── userSearchFilter_pt_BR.html
│   │   │   ├── userSearchFilter_ru.html
│   │   │   ├── userSearchFilter_tr.html
│   │   │   └── userSearchFilter_zh_TW.html
│   │   ├── legacy-auth-strategy.html
│   │   ├── legacy-auth-strategy_de.html
│   │   ├── legacy-auth-strategy_fr.html
│   │   ├── legacy-auth-strategy_ja.html
│   │   ├── legacy-auth-strategy_pt_BR.html
│   │   ├── legacy-auth-strategy_ru.html
│   │   ├── legacy-auth-strategy_tr.html
│   │   ├── legacy-auth-strategy_zh_CN.html
│   │   ├── legacy-auth-strategy_zh_TW.html
│   │   ├── no-authorization.html
│   │   ├── no-authorization_de.html
│   │   ├── no-authorization_fr.html
│   │   ├── no-authorization_ja.html
│   │   ├── no-authorization_pt_BR.html
│   │   ├── no-authorization_ru.html
│   │   ├── no-authorization_tr.html
│   │   ├── no-authorization_zh_CN.html
│   │   ├── no-authorization_zh_TW.html
│   │   ├── private-realm
│   │   │   ├── allow-signup.html
│   │   │   ├── allow-signup_de.html
│   │   │   ├── allow-signup_fr.html
│   │   │   ├── allow-signup_ja.html
│   │   │   ├── allow-signup_tr.html
│   │   │   ├── allow-signup_zh_CN.html
│   │   │   └── allow-signup_zh_TW.html
│   │   ├── private-realm.html
│   │   ├── private-realm_de.html
│   │   ├── private-realm_fr.html
│   │   ├── private-realm_ja.html
│   │   ├── private-realm_pt_BR.html
│   │   ├── private-realm_ru.html
│   │   ├── private-realm_tr.html
│   │   ├── private-realm_zh_CN.html
│   │   └── private-realm_zh_TW.html
│   ├── shell
│   │   ├── shellexe.html
│   │   ├── shellexe_de.html
│   │   ├── shellexe_fr.html
│   │   ├── shellexe_ja.html
│   │   ├── shellexe_nl.html
│   │   ├── shellexe_pt_BR.html
│   │   ├── shellexe_zh_CN.html
│   │   └── shellexe_zh_TW.html
│   ├── system-config
│   │   ├── cvs-browser.html
│   │   ├── cvs-browser_de.html
│   │   ├── cvs-browser_fr.html
│   │   ├── cvs-browser_ja.html
│   │   ├── cvs-browser_pt_BR.html
│   │   ├── cvs-browser_ru.html
│   │   ├── cvs-browser_tr.html
│   │   ├── cvs-browser_zh_TW.html
│   │   ├── defaultJobNamingStrategy.html
│   │   ├── defaultJobNamingStrategy_de.html
│   │   ├── defaultJobNamingStrategy_ja.html
│   │   ├── defaultJobNamingStrategy_zh_TW.html
│   │   ├── globalEnvironmentVariables.html
│   │   ├── globalEnvironmentVariables_de.html
│   │   ├── globalEnvironmentVariables_fr.html
│   │   ├── globalEnvironmentVariables_ja.html
│   │   ├── globalEnvironmentVariables_zh_CN.html
│   │   ├── globalEnvironmentVariables_zh_TW.html
│   │   ├── homeDirectory.html
│   │   ├── homeDirectory_de.html
│   │   ├── homeDirectory_fr.html
│   │   ├── homeDirectory_ja.html
│   │   ├── homeDirectory_pt_BR.html
│   │   ├── homeDirectory_ru.html
│   │   ├── homeDirectory_tr.html
│   │   ├── homeDirectory_zh_CN.html
│   │   ├── homeDirectory_zh_TW.html
│   │   ├── master-slave
│   │   │   ├── availability.html
│   │   │   ├── availability_de.html
│   │   │   ├── availability_fr.html
│   │   │   ├── availability_ja.html
│   │   │   ├── availability_nl.html
│   │   │   ├── availability_tr.html
│   │   │   ├── availability_zh_TW.html
│   │   │   ├── clock.html
│   │   │   ├── clock_de.html
│   │   │   ├── clock_fr.html
│   │   │   ├── clock_ja.html
│   │   │   ├── clock_nl.html
│   │   │   ├── clock_pt_BR.html
│   │   │   ├── clock_ru.html
│   │   │   ├── clock_tr.html
│   │   │   ├── clock_zh_TW.html
│   │   │   ├── demand
│   │   │   │   ├── idleDelay.html
│   │   │   │   ├── idleDelay_de.html
│   │   │   │   ├── idleDelay_fr.html
│   │   │   │   ├── idleDelay_ja.html
│   │   │   │   ├── idleDelay_nl.html
│   │   │   │   ├── idleDelay_tr.html
│   │   │   │   ├── idleDelay_zh_TW.html
│   │   │   │   ├── inDemandDelay.html
│   │   │   │   ├── inDemandDelay_de.html
│   │   │   │   ├── inDemandDelay_fr.html
│   │   │   │   ├── inDemandDelay_ja.html
│   │   │   │   ├── inDemandDelay_nl.html
│   │   │   │   ├── inDemandDelay_tr.html
│   │   │   │   └── inDemandDelay_zh_TW.html
│   │   │   ├── description.html
│   │   │   ├── description_de.html
│   │   │   ├── description_fr.html
│   │   │   ├── description_ja.html
│   │   │   ├── description_pt_BR.html
│   │   │   ├── description_ru.html
│   │   │   ├── description_tr.html
│   │   │   ├── description_zh_TW.html
│   │   │   ├── jnlp-tunnel.html
│   │   │   ├── jnlp-tunnel_de.html
│   │   │   ├── jnlp-tunnel_fr.html
│   │   │   ├── jnlp-tunnel_ja.html
│   │   │   ├── jnlp-tunnel_zh_TW.html
│   │   │   ├── jnlpSecurity.html
│   │   │   ├── jnlpSecurity_de.html
│   │   │   ├── jnlpSecurity_fr.html
│   │   │   ├── jnlpSecurity_ja.html
│   │   │   ├── jnlpSecurity_pt_BR.html
│   │   │   ├── jnlpSecurity_ru.html
│   │   │   ├── jnlpSecurity_tr.html
│   │   │   ├── jnlpSecurity_zh_TW.html
│   │   │   ├── numExecutors.html
│   │   │   ├── numExecutors_de.html
│   │   │   ├── numExecutors_fr.html
│   │   │   ├── numExecutors_ja.html
│   │   │   ├── numExecutors_pt_BR.html
│   │   │   ├── numExecutors_ru.html
│   │   │   ├── numExecutors_tr.html
│   │   │   ├── numExecutors_zh_CN.html
│   │   │   ├── numExecutors_zh_TW.html
│   │   │   ├── usage.html
│   │   │   ├── usage_de.html
│   │   │   ├── usage_fr.html
│   │   │   ├── usage_ja.html
│   │   │   ├── usage_pt_BR.html
│   │   │   ├── usage_ru.html
│   │   │   ├── usage_tr.html
│   │   │   ├── usage_zh_CN.html
│   │   │   └── usage_zh_TW.html
│   │   ├── nodeEnvironmentVariables.html
│   │   ├── nodeEnvironmentVariables_de.html
│   │   ├── nodeEnvironmentVariables_fr.html
│   │   ├── nodeEnvironmentVariables_ja.html
│   │   ├── nodeEnvironmentVariables_zh_TW.html
│   │   ├── patternJobNamingStrategy.html
│   │   ├── patternJobNamingStrategy_de.html
│   │   ├── patternJobNamingStrategy_ja.html
│   │   ├── patternJobNamingStrategy_zh_TW.html
│   │   ├── quietPeriod.html
│   │   ├── quietPeriod_de.html
│   │   ├── quietPeriod_fr.html
│   │   ├── quietPeriod_ja.html
│   │   ├── quietPeriod_pt_BR.html
│   │   ├── quietPeriod_ru.html
│   │   ├── quietPeriod_tr.html
│   │   ├── quietPeriod_zh_TW.html
│   │   ├── systemMessage.html
│   │   ├── systemMessage_de.html
│   │   ├── systemMessage_fr.html
│   │   ├── systemMessage_ja.html
│   │   ├── systemMessage_pt_BR.html
│   │   ├── systemMessage_ru.html
│   │   ├── systemMessage_tr.html
│   │   ├── systemMessage_zh_CN.html
│   │   └── systemMessage_zh_TW.html
│   ├── tasks
│   │   ├── aggregate-test
│   │   │   ├── auto-aggregate.html
│   │   │   ├── auto-aggregate_de.html
│   │   │   ├── auto-aggregate_fr.html
│   │   │   ├── auto-aggregate_ja.html
│   │   │   ├── auto-aggregate_nl.html
│   │   │   ├── auto-aggregate_pt_BR.html
│   │   │   ├── auto-aggregate_tr.html
│   │   │   ├── auto-aggregate_zh_TW.html
│   │   │   ├── help.html
│   │   │   ├── help_de.html
│   │   │   ├── help_fr.html
│   │   │   ├── help_ja.html
│   │   │   ├── help_nl.html
│   │   │   ├── help_pt_BR.html
│   │   │   ├── help_tr.html
│   │   │   ├── help_zh_TW.html
│   │   │   ├── manual-list.html
│   │   │   ├── manual-list_de.html
│   │   │   ├── manual-list_fr.html
│   │   │   ├── manual-list_ja.html
│   │   │   ├── manual-list_nl.html
│   │   │   ├── manual-list_pt_BR.html
│   │   │   ├── manual-list_tr.html
│   │   │   └── manual-list_zh_TW.html
│   │   ├── fingerprint
│   │   │   ├── keepDependencies.html
│   │   │   ├── keepDependencies_de.html
│   │   │   ├── keepDependencies_fr.html
│   │   │   ├── keepDependencies_ja.html
│   │   │   ├── keepDependencies_nl.html
│   │   │   ├── keepDependencies_pt_BR.html
│   │   │   ├── keepDependencies_ru.html
│   │   │   ├── keepDependencies_tr.html
│   │   │   └── keepDependencies_zh_TW.html
│   │   ├── junit
│   │   │   ├── report.html
│   │   │   ├── report_de.html
│   │   │   ├── report_fr.html
│   │   │   ├── report_ja.html
│   │   │   ├── report_nl.html
│   │   │   ├── report_pt_BR.html
│   │   │   ├── report_ru.html
│   │   │   ├── report_tr.html
│   │   │   └── report_zh_TW.html
│   │   └── maven
│   │       ├── properties.html
│   │       ├── properties_de.html
│   │       ├── properties_fr.html
│   │       ├── properties_ja.html
│   │       └── properties_zh_TW.html
│   ├── tools
│   │   ├── help-label.html
│   │   ├── help-label_de.html
│   │   ├── help-label_ja.html
│   │   ├── help-label_zh_CN.html
│   │   ├── help-label_zh_TW.html
│   │   ├── tool-location-node-property.html
│   │   ├── tool-location-node-property_de.html
│   │   ├── tool-location-node-property_fr.html
│   │   ├── tool-location-node-property_ja.html
│   │   ├── tool-location-node-property_zh_CN.html
│   │   └── tool-location-node-property_zh_TW.html
│   ├── user
│   │   ├── description.html
│   │   ├── description_de.html
│   │   ├── description_fr.html
│   │   ├── description_ja.html
│   │   ├── description_nl.html
│   │   ├── description_pt_BR.html
│   │   ├── description_ru.html
│   │   ├── description_tr.html
│   │   ├── description_zh_TW.html
│   │   ├── fullName.html
│   │   ├── fullName_de.html
│   │   ├── fullName_fr.html
│   │   ├── fullName_ja.html
│   │   ├── fullName_nl.html
│   │   ├── fullName_pt_BR.html
│   │   ├── fullName_ru.html
│   │   ├── fullName_tr.html
│   │   └── fullName_zh_TW.html
│   └── view-config
│       ├── description.html
│       ├── description_de.html
│       ├── description_fr.html
│       ├── description_ja.html
│       ├── description_nl.html
│       ├── description_pt_BR.html
│       ├── description_ru.html
│       ├── description_tr.html
│       ├── description_zh_TW.html
│       ├── filter-executors.html
│       ├── filter-executors_de.html
│       ├── filter-executors_ja.html
│       ├── filter-executors_zh_TW.html
│       ├── filter-queue.html
│       ├── filter-queue_de.html
│       ├── filter-queue_ja.html
│       ├── filter-queue_zh_TW.html
│       ├── includeregex.html
│       ├── includeregex_de.html
│       ├── includeregex_fr.html
│       ├── includeregex_ja.html
│       ├── includeregex_nl.html
│       ├── includeregex_pt_BR.html
│       ├── includeregex_ru.html
│       ├── includeregex_tr.html
│       ├── includeregex_zh_TW.html
│       ├── statusFilter.html
│       ├── statusFilter_ja.html
│       └── statusFilter_zh_TW.html
├── images
│   ├── 16x16
│   │   ├── aborted.gif
│   │   ├── aborted.png
│   │   ├── aborted_anime.gif
│   │   ├── accept.png
│   │   ├── attribute.png
│   │   ├── blue.gif
│   │   ├── blue.png
│   │   ├── blue_anime.gif
│   │   ├── clock.gif
│   │   ├── clock.png
│   │   ├── clock_anime.gif
│   │   ├── collapse.png
│   │   ├── computer-flash.gif
│   │   ├── computer-x.gif
│   │   ├── computer-x.png
│   │   ├── computer.gif
│   │   ├── computer.png
│   │   ├── disabled.gif
│   │   ├── disabled.png
│   │   ├── disabled_anime.gif
│   │   ├── document_add.gif
│   │   ├── document_add.png
│   │   ├── document_delete.gif
│   │   ├── document_delete.png
│   │   ├── document_edit.gif
│   │   ├── document_edit.png
│   │   ├── edit-delete.gif
│   │   ├── edit-delete.png
│   │   ├── edit-select-all.gif
│   │   ├── edit-select-all.png
│   │   ├── empty.gif
│   │   ├── empty.png
│   │   ├── error.gif
│   │   ├── error.png
│   │   ├── expand.png
│   │   ├── fingerprint.gif
│   │   ├── fingerprint.png
│   │   ├── folder-error.gif
│   │   ├── folder-error.png
│   │   ├── folder-open.gif
│   │   ├── folder-open.png
│   │   ├── folder.gif
│   │   ├── folder.png
│   │   ├── gear2.gif
│   │   ├── gear2.png
│   │   ├── go-next.gif
│   │   ├── go-next.png
│   │   ├── green.gif
│   │   ├── green_anime.gif
│   │   ├── grey.gif
│   │   ├── grey.png
│   │   ├── grey_anime.gif
│   │   ├── health-00to19.gif
│   │   ├── health-00to19.png
│   │   ├── health-20to39.gif
│   │   ├── health-20to39.png
│   │   ├── health-40to59.gif
│   │   ├── health-40to59.png
│   │   ├── health-60to79.gif
│   │   ├── health-60to79.png
│   │   ├── health-80plus.gif
│   │   ├── health-80plus.png
│   │   ├── help.gif
│   │   ├── help.png
│   │   ├── hourglass.gif
│   │   ├── hourglass.png
│   │   ├── lock.gif
│   │   ├── lock.png
│   │   ├── nobuilt.gif
│   │   ├── nobuilt.png
│   │   ├── nobuilt_anime.gif
│   │   ├── notepad.gif
│   │   ├── notepad.png
│   │   ├── orange-square.png
│   │   ├── package.gif
│   │   ├── package.png
│   │   ├── person.gif
│   │   ├── person.png
│   │   ├── plugin.gif
│   │   ├── plugin.png
│   │   ├── red.gif
│   │   ├── red.png
│   │   ├── red_anime.gif
│   │   ├── redo.gif
│   │   ├── redo.png
│   │   ├── save.gif
│   │   ├── save.png
│   │   ├── search.gif
│   │   ├── search.png
│   │   ├── secure.png
│   │   ├── setting.png
│   │   ├── star-gold.gif
│   │   ├── star-gold.png
│   │   ├── star.gif
│   │   ├── star.png
│   │   ├── stop.gif
│   │   ├── stop.png
│   │   ├── terminal.gif
│   │   ├── terminal.png
│   │   ├── text-error.gif
│   │   ├── text-error.png
│   │   ├── text.gif
│   │   ├── text.png
│   │   ├── user.gif
│   │   ├── user.png
│   │   ├── warning.gif
│   │   ├── warning.png
│   │   ├── yellow.gif
│   │   ├── yellow.png
│   │   └── yellow_anime.gif
│   ├── 24x24
│   │   ├── aborted.gif
│   │   ├── aborted.png
│   │   ├── aborted_anime.gif
│   │   ├── accept.png
│   │   ├── attribute.png
│   │   ├── blue.gif
│   │   ├── blue.png
│   │   ├── blue_anime.gif
│   │   ├── clipboard.gif
│   │   ├── clipboard.png
│   │   ├── clock.gif
│   │   ├── clock.png
│   │   ├── clock_anime.gif
│   │   ├── computer-flash.gif
│   │   ├── computer-x.gif
│   │   ├── computer-x.png
│   │   ├── computer.gif
│   │   ├── computer.png
│   │   ├── delete-document.gif
│   │   ├── delete-document.png
│   │   ├── disabled.gif
│   │   ├── disabled.png
│   │   ├── disabled_anime.gif
│   │   ├── document-properties.gif
│   │   ├── document-properties.png
│   │   ├── document.gif
│   │   ├── document.png
│   │   ├── edit-delete.gif
│   │   ├── edit-delete.png
│   │   ├── empty.gif
│   │   ├── empty.png
│   │   ├── fingerprint.gif
│   │   ├── fingerprint.png
│   │   ├── folder-delete.gif
│   │   ├── folder-delete.png
│   │   ├── folder.gif
│   │   ├── folder.png
│   │   ├── gear.gif
│   │   ├── gear.png
│   │   ├── gear2.gif
│   │   ├── gear2.png
│   │   ├── graph.gif
│   │   ├── graph.png
│   │   ├── green.gif
│   │   ├── green_anime.gif
│   │   ├── grey.gif
│   │   ├── grey.png
│   │   ├── grey_anime.gif
│   │   ├── health-00to19.gif
│   │   ├── health-00to19.png
│   │   ├── health-20to39.gif
│   │   ├── health-20to39.png
│   │   ├── health-40to59.gif
│   │   ├── health-40to59.png
│   │   ├── health-60to79.gif
│   │   ├── health-60to79.png
│   │   ├── health-80plus.gif
│   │   ├── health-80plus.png
│   │   ├── help.gif
│   │   ├── help.png
│   │   ├── installer.gif
│   │   ├── installer.png
│   │   ├── lock.png
│   │   ├── monitor.gif
│   │   ├── monitor.png
│   │   ├── new-computer.gif
│   │   ├── new-computer.png
│   │   ├── new-document.gif
│   │   ├── new-document.png
│   │   ├── new-package.gif
│   │   ├── new-package.png
│   │   ├── new-user.gif
│   │   ├── new-user.png
│   │   ├── next.gif
│   │   ├── next.png
│   │   ├── nobuilt.gif
│   │   ├── nobuilt.png
│   │   ├── nobuilt_anime.gif
│   │   ├── notepad.gif
│   │   ├── notepad.png
│   │   ├── orange-square.gif
│   │   ├── orange-square.png
│   │   ├── package.gif
│   │   ├── package.png
│   │   ├── plugin.png
│   │   ├── previous.gif
│   │   ├── previous.png
│   │   ├── red.gif
│   │   ├── red.png
│   │   ├── red_anime.gif
│   │   ├── redo.gif
│   │   ├── redo.png
│   │   ├── refresh.gif
│   │   ├── refresh.png
│   │   ├── save.gif
│   │   ├── save.png
│   │   ├── search.gif
│   │   ├── search.png
│   │   ├── secure.png
│   │   ├── setting.gif
│   │   ├── setting.png
│   │   ├── star-gold.gif
│   │   ├── star-gold.png
│   │   ├── star.gif
│   │   ├── star.png
│   │   ├── terminal.gif
│   │   ├── terminal.png
│   │   ├── up.gif
│   │   ├── up.png
│   │   ├── user.gif
│   │   ├── user.png
│   │   ├── yellow.gif
│   │   ├── yellow.png
│   │   └── yellow_anime.gif
│   ├── 32x32
│   │   ├── aborted.gif
│   │   ├── aborted.png
│   │   ├── aborted_anime.gif
│   │   ├── accept.png
│   │   ├── attribute.png
│   │   ├── blue.gif
│   │   ├── blue.png
│   │   ├── blue_anime.gif
│   │   ├── clipboard.gif
│   │   ├── clipboard.png
│   │   ├── clock.gif
│   │   ├── clock.png
│   │   ├── clock_anime.gif
│   │   ├── computer-flash.gif
│   │   ├── computer-x.gif
│   │   ├── computer-x.png
│   │   ├── computer.gif
│   │   ├── computer.png
│   │   ├── disabled.gif
│   │   ├── disabled.png
│   │   ├── disabled_anime.gif
│   │   ├── empty.gif
│   │   ├── empty.png
│   │   ├── error.gif
│   │   ├── error.png
│   │   ├── folder.gif
│   │   ├── folder.png
│   │   ├── gear2.png
│   │   ├── graph.gif
│   │   ├── graph.png
│   │   ├── green.gif
│   │   ├── green_anime.gif
│   │   ├── grey.gif
│   │   ├── grey.png
│   │   ├── grey_anime.gif
│   │   ├── health-00to19.gif
│   │   ├── health-00to19.png
│   │   ├── health-20to39.gif
│   │   ├── health-20to39.png
│   │   ├── health-40to59.gif
│   │   ├── health-40to59.png
│   │   ├── health-60to79.gif
│   │   ├── health-60to79.png
│   │   ├── health-80plus.gif
│   │   ├── health-80plus.png
│   │   ├── lock.png
│   │   ├── nobuilt.gif
│   │   ├── nobuilt.png
│   │   ├── nobuilt_anime.gif
│   │   ├── orange-square.png
│   │   ├── package.png
│   │   ├── plugin.gif
│   │   ├── plugin.png
│   │   ├── red.gif
│   │   ├── red.png
│   │   ├── red_anime.gif
│   │   ├── secure.png
│   │   ├── setting.gif
│   │   ├── setting.png
│   │   ├── star-gold.gif
│   │   ├── star-gold.png
│   │   ├── star.gif
│   │   ├── star.png
│   │   ├── user.gif
│   │   ├── user.png
│   │   ├── yellow.gif
│   │   ├── yellow.png
│   │   └── yellow_anime.gif
│   ├── 48x48
│   │   ├── aborted.gif
│   │   ├── aborted.png
│   │   ├── aborted_anime.gif
│   │   ├── accept.png
│   │   ├── attribute.png
│   │   ├── blue.gif
│   │   ├── blue.png
│   │   ├── blue_anime.gif
│   │   ├── clipboard.gif
│   │   ├── clipboard.png
│   │   ├── computer-flash.gif
│   │   ├── computer-x.gif
│   │   ├── computer-x.png
│   │   ├── computer.gif
│   │   ├── computer.png
│   │   ├── disabled.gif
│   │   ├── disabled.png
│   │   ├── disabled_anime.gif
│   │   ├── document.gif
│   │   ├── document.png
│   │   ├── empty.gif
│   │   ├── empty.png
│   │   ├── error.gif
│   │   ├── error.png
│   │   ├── fingerprint.gif
│   │   ├── fingerprint.png
│   │   ├── folder-delete.gif
│   │   ├── folder-delete.png
│   │   ├── folder.gif
│   │   ├── folder.png
│   │   ├── gear2.gif
│   │   ├── gear2.png
│   │   ├── graph.gif
│   │   ├── graph.png
│   │   ├── green.gif
│   │   ├── green_anime.gif
│   │   ├── grey.gif
│   │   ├── grey.png
│   │   ├── grey_anime.gif
│   │   ├── health-00to19.gif
│   │   ├── health-00to19.png
│   │   ├── health-20to39.gif
│   │   ├── health-20to39.png
│   │   ├── health-40to59.gif
│   │   ├── health-40to59.png
│   │   ├── health-60to79.gif
│   │   ├── health-60to79.png
│   │   ├── health-80plus.gif
│   │   ├── health-80plus.png
│   │   ├── help.gif
│   │   ├── help.png
│   │   ├── installer.gif
│   │   ├── installer.png
│   │   ├── lock.png
│   │   ├── monitor.gif
│   │   ├── monitor.png
│   │   ├── network.gif
│   │   ├── network.png
│   │   ├── nobuilt.gif
│   │   ├── nobuilt.png
│   │   ├── nobuilt_anime.gif
│   │   ├── notepad.gif
│   │   ├── notepad.png
│   │   ├── orange-square.gif
│   │   ├── orange-square.png
│   │   ├── package.gif
│   │   ├── package.png
│   │   ├── plugin.gif
│   │   ├── plugin.png
│   │   ├── red.gif
│   │   ├── red.png
│   │   ├── red_anime.gif
│   │   ├── redo.gif
│   │   ├── redo.png
│   │   ├── refresh.gif
│   │   ├── refresh.png
│   │   ├── search.gif
│   │   ├── search.png
│   │   ├── secure.gif
│   │   ├── secure.png
│   │   ├── setting.gif
│   │   ├── setting.png
│   │   ├── star-gold.gif
│   │   ├── star-gold.png
│   │   ├── star.gif
│   │   ├── star.png
│   │   ├── system-log-out.gif
│   │   ├── system-log-out.png
│   │   ├── terminal.gif
│   │   ├── terminal.png
│   │   ├── user.gif
│   │   ├── user.png
│   │   ├── warning.gif
│   │   ├── warning.png
│   │   ├── yellow.gif
│   │   ├── yellow.png
│   │   └── yellow_anime.gif
│   ├── RRZEIconSet-License.url
│   ├── RRZEIconSet.url
│   ├── TangoProject-License.url
│   ├── atom-license.txt
│   ├── atom.gif
│   ├── bottom-sticker-top-edge.png
│   ├── grip.png
│   ├── headless.png
│   ├── jenkins-redbg.png
│   ├── jenkins.png
│   ├── none.gif
│   ├── progress-unknown-red.gif
│   ├── progress-unknown.gif
│   ├── rage.png
│   ├── spinner.gif
│   ├── textarea-handle.gif
│   ├── title.png
│   ├── title.svg
│   ├── title.xcf
│   ├── top-sticker-bottom-edge.png
│   ├── topbar.png
│   ├── topbar.svg
│   └── webstart.gif
├── robots.txt
├── scripts
│   ├── behavior.js
│   ├── combobox-readme.txt
│   ├── combobox.js
│   ├── hudson-behavior.js
│   ├── msie.js
│   ├── prototype.js
│   ├── sortable.js
│   ├── utilities.js
│   └── yui
│       ├── animation
│       │   ├── animation-debug.js
│       │   └── animation-min.js
│       ├── assets
│       │   └── skins
│       │       └── sam
│       │           ├── ajax-loader.gif
│       │           ├── asc.gif
│       │           ├── autocomplete.css
│       │           ├── back-h.png
│       │           ├── back-v.png
│       │           ├── bar-h.png
│       │           ├── bar-v.png
│       │           ├── bg-h.gif
│       │           ├── bg-v.gif
│       │           ├── blankimage.png
│       │           ├── button.css
│       │           ├── calendar.css
│       │           ├── carousel.css
│       │           ├── check0.gif
│       │           ├── check1.gif
│       │           ├── check2.gif
│       │           ├── colorpicker.css
│       │           ├── container.css
│       │           ├── datatable.css
│       │           ├── desc.gif
│       │           ├── dt-arrow-dn.png
│       │           ├── dt-arrow-up.png
│       │           ├── editor-knob.gif
│       │           ├── editor-sprite-active.gif
│       │           ├── editor-sprite.gif
│       │           ├── editor.css
│       │           ├── header_background.png
│       │           ├── hue_bg.png
│       │           ├── imagecropper.css
│       │           ├── layout.css
│       │           ├── layout_sprite.png
│       │           ├── loading.gif
│       │           ├── logger.css
│       │           ├── menu-button-arrow-disabled.png
│       │           ├── menu-button-arrow.png
│       │           ├── menu.css
│       │           ├── menubaritem_submenuindicator.png
│       │           ├── menubaritem_submenuindicator_disabled.png
│       │           ├── menuitem_checkbox.png
│       │           ├── menuitem_checkbox_disabled.png
│       │           ├── menuitem_submenuindicator.png
│       │           ├── menuitem_submenuindicator_disabled.png
│       │           ├── paginator.css
│       │           ├── picker_mask.png
│       │           ├── profilerviewer.css
│       │           ├── progressbar.css
│       │           ├── resize.css
│       │           ├── simpleeditor.css
│       │           ├── skin.css
│       │           ├── slider.css
│       │           ├── split-button-arrow-active.png
│       │           ├── split-button-arrow-disabled.png
│       │           ├── split-button-arrow-focus.png
│       │           ├── split-button-arrow-hover.png
│       │           ├── split-button-arrow.png
│       │           ├── sprite.png
│       │           ├── sprite.psd
│       │           ├── tabview.css
│       │           ├── treeview-loading.gif
│       │           ├── treeview-sprite.gif
│       │           ├── treeview.css
│       │           ├── wait.gif
│       │           └── yuitest.css
│       ├── autocomplete
│       │   ├── assets
│       │   │   ├── autocomplete-core.css
│       │   │   └── skins
│       │   │       └── sam
│       │   │           ├── autocomplete-skin.css
│       │   │           └── autocomplete.css
│       │   ├── autocomplete-debug.js
│       │   └── autocomplete-min.js
│       ├── base
│       │   ├── base-min.css
│       │   └── base.css
│       ├── button
│       │   ├── assets
│       │   │   ├── button-core.css
│       │   │   └── skins
│       │   │       └── sam
│       │   │           ├── button-skin.css
│       │   │           ├── button.css
│       │   │           ├── menu-button-arrow-disabled.png
│       │   │           ├── menu-button-arrow.png
│       │   │           ├── split-button-arrow-active.png
│       │   │           ├── split-button-arrow-disabled.png
│       │   │           ├── split-button-arrow-focus.png
│       │   │           ├── split-button-arrow-hover.png
│       │   │           └── split-button-arrow.png
│       │   ├── button-debug.js
│       │   └── button-min.js
│       ├── connection
│       │   ├── connection-debug.js
│       │   ├── connection-min.js
│       │   ├── connection.swf
│       │   ├── connection_core-debug.js
│       │   └── connection_core-min.js
│       ├── container
│       │   ├── assets
│       │   │   ├── alrt16_1.gif
│       │   │   ├── blck16_1.gif
│       │   │   ├── close12_1.gif
│       │   │   ├── container-core.css
│       │   │   ├── container.css
│       │   │   ├── hlp16_1.gif
│       │   │   ├── info16_1.gif
│       │   │   ├── skins
│       │   │   │   └── sam
│       │   │   │       ├── container-skin.css
│       │   │   │       └── container.css
│       │   │   ├── tip16_1.gif
│       │   │   └── warn16_1.gif
│       │   ├── container-debug.js
│       │   ├── container-min.js
│       │   ├── container_core-debug.js
│       │   └── container_core-min.js
│       ├── cookie
│       │   ├── cookie-debug.js
│       │   └── cookie-min.js
│       ├── cutdown.sh
│       ├── datasource
│       │   ├── datasource-debug.js
│       │   └── datasource-min.js
│       ├── dom
│       │   ├── dom-debug.js
│       │   └── dom-min.js
│       ├── dragdrop
│       │   ├── dragdrop-debug.js
│       │   └── dragdrop-min.js
│       ├── editor
│       │   ├── assets
│       │   │   ├── editor-core.css
│       │   │   ├── simpleeditor-core.css
│       │   │   └── skins
│       │   │       └── sam
│       │   │           ├── blankimage.png
│       │   │           ├── editor-knob.gif
│       │   │           ├── editor-skin.css
│       │   │           ├── editor-sprite-active.gif
│       │   │           ├── editor-sprite.gif
│       │   │           ├── editor.css
│       │   │           ├── simpleeditor-skin.css
│       │   │           └── simpleeditor.css
│       │   ├── editor-debug.js
│       │   ├── editor-min.js
│       │   ├── simpleeditor-debug.js
│       │   └── simpleeditor-min.js
│       ├── element
│       │   ├── element-debug.js
│       │   └── element-min.js
│       ├── event
│       │   ├── event-debug.js
│       │   └── event-min.js
│       ├── fonts
│       │   ├── fonts-min.css
│       │   └── fonts.css
│       ├── logger
│       │   ├── assets
│       │   │   ├── logger-core.css
│       │   │   ├── logger.css
│       │   │   └── skins
│       │   │       └── sam
│       │   │           ├── logger-skin.css
│       │   │           └── logger.css
│       │   ├── logger-debug.js
│       │   └── logger-min.js
│       ├── menu
│       │   ├── assets
│       │   │   ├── menu-core.css
│       │   │   ├── menu.css
│       │   │   ├── menu_down_arrow.png
│       │   │   ├── menu_down_arrow_disabled.png
│       │   │   ├── menu_up_arrow.png
│       │   │   ├── menu_up_arrow_disabled.png
│       │   │   ├── menubaritem_submenuindicator.png
│       │   │   ├── menubaritem_submenuindicator_disabled.png
│       │   │   ├── menubaritem_submenuindicator_selected.png
│       │   │   ├── menuitem_checkbox.png
│       │   │   ├── menuitem_checkbox_disabled.png
│       │   │   ├── menuitem_checkbox_selected.png
│       │   │   ├── menuitem_submenuindicator.png
│       │   │   ├── menuitem_submenuindicator_disabled.png
│       │   │   ├── menuitem_submenuindicator_selected.png
│       │   │   └── skins
│       │   │       └── sam
│       │   │           ├── menu-skin.css
│       │   │           ├── menu.css
│       │   │           ├── menubaritem_submenuindicator.png
│       │   │           ├── menubaritem_submenuindicator_disabled.png
│       │   │           ├── menuitem_checkbox.png
│       │   │           ├── menuitem_checkbox_disabled.png
│       │   │           ├── menuitem_submenuindicator.png
│       │   │           └── menuitem_submenuindicator_disabled.png
│       │   ├── menu-debug.js
│       │   └── menu-min.js
│       ├── resize
│       │   ├── assets
│       │   │   ├── resize-core.css
│       │   │   └── skins
│       │   │       └── sam
│       │   │           ├── layout_sprite.png
│       │   │           ├── resize-skin.css
│       │   │           └── resize.css
│       │   ├── resize-debug.js
│       │   └── resize-min.js
│       ├── storage
│       │   ├── storage-debug.js
│       │   └── storage-min.js
│       ├── tabview
│       │   ├── assets
│       │   │   ├── border_tabs.css
│       │   │   ├── loading.gif
│       │   │   ├── skin-sam.css
│       │   │   ├── skins
│       │   │   │   └── sam
│       │   │   │       ├── tabview-skin.css
│       │   │   │       └── tabview.css
│       │   │   ├── tabview-core.css
│       │   │   └── tabview.css
│       │   ├── tabview-debug.js
│       │   └── tabview-min.js
│       ├── treeview
│       │   ├── assets
│       │   │   ├── skins
│       │   │   │   └── sam
│       │   │   │       ├── check0.gif
│       │   │   │       ├── check1.gif
│       │   │   │       ├── check2.gif
│       │   │   │       ├── loading.gif
│       │   │   │       ├── treeview-loading.gif
│       │   │   │       ├── treeview-skin.css
│       │   │   │       ├── treeview-sprite.gif
│       │   │   │       └── treeview.css
│       │   │   └── treeview-core.css
│       │   ├── treeview-debug.js
│       │   └── treeview-min.js
│       └── yahoo
│           ├── yahoo-debug.js
│           └── yahoo-min.js
└── winstone.jar
</pre>
</div>
</div>

<div id="outline-container-sec-7" class="outline-2">
<h2 id="sec-7"><span class="section-number-2">7</span> 次やりたいこと</h2>
<div class="outline-text-2" id="text-7">
<ul class="org-ul">
<li>Jenkins Master-Slave構成の構築
</li>
<li>音声キャストサービスとの連携（喋るようにする）
</li>
</ul>
</div>
</div>
]]></content>
  </entry>
  
</feed>
