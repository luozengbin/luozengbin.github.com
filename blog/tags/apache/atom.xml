<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: Apache | Akira's Tech Notes]]></title>
  <link href="http://luozengbin.github.io/blog/tags/apache/atom.xml" rel="self"/>
  <link href="http://luozengbin.github.io/"/>
  <updated>2015-10-10T19:42:29+09:00</updated>
  <id>http://luozengbin.github.io/</id>
  <author>
    <name><![CDATA[luozengbin]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[[メモ]ApacheでbackendとのKeepAliveをOFFにする]]></title>
    <link href="http://luozengbin.github.io/blog/2014-10-29-%5B%E3%83%A1%E3%83%A2%5Dapache%E3%81%A7backend%E3%81%A8%E3%81%AEkeepalive%E3%82%92off%E3%81%AB%E3%81%99%E3%82%8B.html"/>
    <updated>2014-10-29T00:00:00+09:00</updated>
    <id>http://luozengbin.github.io/blog/[メモ]apacheでbackendとのkeepaliveをoffにする</id>
    <content type="html"><![CDATA[<div id="table-of-contents">
<h2>Table of Contents</h2>
<div id="text-table-of-contents">
<ul>
<li><a href="#sec-1">1. Apache側でKeepAliveを制御する</a></li>
<li><a href="#sec-2">2. APサーバ側にてKeepAliveを制御する</a></li>
<li><a href="#sec-3">3. 参考</a></li>
</ul>
</div>
</div>


<p>
次のような構成でApacheとAPサーバ間のHTTP KeepAliveが有効にすると
</p>


<ol class="org-ol">
<li>LBの振り分けが偏る可能性がある
</li>
<li>LBの無振り分け先の切り替えに影響が生じる可能性がある、詳細は こちらの記事 を参照してください。
</li>
</ol>


<p>
のような不都合があります。
</p>




<pre class="example">
+----------+         +------------+        +-----------+     +-------------+
| Client   +---------&gt; Apache     +--------&gt;   LB      +-----&gt; AP Server   |
+----------+         +------------+        +-----------+     +-------------+
</pre>




<p>
とい言うわけでApacheとAPサーバ間KeepAliveをOFFにする方法を調査した。
</p>




<p>
<!-- more -->
</p>




<div id="outline-container-sec-1" class="outline-2">
<h2 id="sec-1"><span class="section-number-2">1</span> Apache側でKeepAliveを制御する</h2>
<div class="outline-text-2" id="text-1">
<p>
<code>ProxyPass</code> ディレクティブの <code>keepalive</code> パラメータが期待通り動作しないので迷っていた、
しかしドキュメントによると
</p>

<pre class="example">
バックエンドサーバと Apache の間にファイアーウォールがある場合には、 このパラメータを
使ってください。ファイアウォールは往々にして、 非活動状態のコネクションを落とそうとし
ます。 このフラグは OS に指示して、KEEP_ALIVE メッセージを非活動状態の コネクションで
も送るようにします。これによってファイアウォールによってコネクションが 落とされること
を防げます。keepalive を有効にするには、このプロパティを On にしてください。
</pre>

<p>
HTTP KeepAliveに関係しそうに見えたが、実はあんまり関係ないのようです。
TCPレベルでコネクションをファイアウォールによる切断を防ぐためのパラメータです。
</p>

<p>
更に調べると <code>mod_proxy_http</code> モジュールの環境変数にHTTP KeepAliveに関係するものが
出てきた。
</p>

<ul class="org-ul">
<li>force-proxy-request-1.0
プロキシがバックエンドに HTTP/1.0 でリクエストを送るようにし、HTTP/1.1 の機能を無効にします。
</li>

<li>proxy-nokeepalive
プロキシがリクエスト終了後にバックエンドとの接続を切るようにします。
</li>
</ul>

<p>
よし！これだそう。次のように設定したらうまくできた。
</p>
<pre class="example">
&lt;Location /test/&gt;
    ProxyPass http://dummyhost:8080/app1/
    SetEnv proxy-nokeepalive 1
&lt;/Location&gt;
</pre>

<p>
これで、ApacheからAPサーバへのHTTPリクエストヘッダに <code>Connection: close</code> が付与される
ようになりました。 <code>tcpdump</code> でパケットのやり取りを確認すると、ちゃんと毎回クライアン
トのからコネクション切断するためのfinパケットが送信されることを確認しました。
</p>
</div>
</div>




<div id="outline-container-sec-2" class="outline-2">
<h2 id="sec-2"><span class="section-number-2">2</span> APサーバ側にてKeepAliveを制御する</h2>
<div class="outline-text-2" id="text-2">
<p>
一般的にAPサーバ側でもKeepAliveの設定が可能です。
流れ的に、HTTPレスポンスのHTTPヘッダに <code>Connection: close</code> を付与して返すことで
リクエスト側にコネクション切断する旨を伝える。
</p>

<p>
Tomcat起動時に次のJavaオプションを付けるとHTTP KeepAliveがOFFになります。
</p>
<pre class="example">
-Dorg.apache.coyote.http11.Http11Protocol.MAX_KEEP_ALIVE_REQUESTS=1
</pre>
</div>
</div>




<div id="outline-container-sec-3" class="outline-2">
<h2 id="sec-3"><span class="section-number-2">3</span> 参考</h2>
<div class="outline-text-2" id="text-3">
<ul class="org-ul">
<li><a href="http://blog.nomadscafe.jp/2011/07/apache.html">今こそ見直すApacheの設定</a>
</li>
</ul>
</div>
</div>

]]></content>
  </entry>
  
</feed>
