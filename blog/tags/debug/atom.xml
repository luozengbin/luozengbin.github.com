<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: Debug | Akira's Tech Notes]]></title>
  <link href="http://luozengbin.github.io/blog/tags/debug/atom.xml" rel="self"/>
  <link href="http://luozengbin.github.io/"/>
  <updated>2015-05-19T23:57:14+09:00</updated>
  <id>http://luozengbin.github.io/</id>
  <author>
    <name><![CDATA[luozengbin]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[[メモ]デバッグ版OpenJDKのビルド]]></title>
    <link href="http://luozengbin.github.io/blog/2015-05-10-%5B%E3%83%A1%E3%83%A2%5D%E3%83%87%E3%83%90%E3%83%83%E3%82%B0%E7%89%88openjdk%E3%81%AE%E3%83%93%E3%83%AB%E3%83%89.html"/>
    <updated>2015-05-10T00:00:00+09:00</updated>
    <id>http://luozengbin.github.io/blog/[メモ]デバッグ版openjdkのビルド</id>
    <content type="html"><![CDATA[<div id="table-of-contents">
<h2>Table of Contents</h2>
<div id="text-table-of-contents">
<ul>
<li><a href="#sec-1">1. 環境</a></li>
<li><a href="#sec-2">2. ビルド手順</a></li>
<li><a href="#sec-3">3. gdbでデバッグしてみる</a></li>
<li><a href="#sec-4">4. valgrindでコールグラフ出してみる</a></li>
<li><a href="#sec-5">5. 参考</a></li>
</ul>
</div>
</div>


<p>
今まで、JVM中身の調査は <code>SystemTap + java-1.x.x-openjdk-debuginfo.x86_64</code> 利用してい
たが。もう少しJVMの中身を踏み込みたいのでデバッグ版JVMをビルドしてみました。
</p>




<p>
<a href="http://hg.openjdk.java.net/jdk7/jdk7/raw-file/tip/README-builds.html">http://hg.openjdk.java.net/jdk7/jdk7/raw-file/tip/README-builds.html</a> の手順でビルドし
てもいいのですが、トライ・アンド・エラーで時間が取られそうなので、自分が使っている
<code>Arch Linux</code> 環境で一番手取りの早い手順で行いました。
</p>




<p>
<!-- more -->
</p>




<div id="outline-container-sec-1" class="outline-2">
<h2 id="sec-1"><span class="section-number-2">1</span> 環境</h2>
<div class="outline-text-2" id="text-1">
<ul class="org-ul">
<li>Arch Linux
</li>
<li>OpenJDK 7系
</li>
</ul>
</div>
</div>




<div id="outline-container-sec-2" class="outline-2">
<h2 id="sec-2"><span class="section-number-2">2</span> ビルド手順</h2>
<div class="outline-text-2" id="text-2">
<p>
まずはパッケージリポジトリから <a href="https://www.archlinux.org/packages/extra/x86_64/jdk7-openjdk/">jdk7-openjdk</a> のビルドファイルやパッチファイルを入手する。
</p>
<ul class="org-ul">
<li><a href="https://projects.archlinux.org/svntogit/packages.git/tree/trunk?h=packages/java7-openjdk">入手先</a>
</li>
</ul>
<pre class="example">
★ダウンロード
$ wget https://projects.archlinux.org/svntogit/packages.git/plain/trunk/PKGBUILD?h=packages/java7-openjdk -O PKGBUILD
$ wget https://projects.archlinux.org/svntogit/packages.git/plain/trunk/fontconfig-paths.diff?h=packages/java7-openjdk -O fontconfig-paths.diff
$ wget https://projects.archlinux.org/svntogit/packages.git/plain/trunk/jdk7-openjdk.install?h=packages/java7-openjdk -O jdk7-openjdk.install
$ wget https://projects.archlinux.org/svntogit/packages.git/plain/trunk/jre7-openjdk-headless.install?h=packages/java7-openjdk -O jre7-openjdk-headless.install
$ wget https://projects.archlinux.org/svntogit/packages.git/plain/trunk/jre7-openjdk.install?h=packages/java7-openjdk -O jre7-openjdk.install
$ wget https://projects.archlinux.org/svntogit/packages.git/plain/trunk/openjdk7_nonreparenting-wm.diff?h=packages/java7-openjdk -O openjdk7_nonreparenting-wm.diff
★ファイル一覧確認
$ ls -al
合計 52
drwxr-xr-x  2 akira users  4096  5月 10 11:24 .
drwxr-xr-x 21 akira users  4096  5月 10 11:23 ..
-rw-r--r--  1 akira users 12429  5月 10 11:24 PKGBUILD
-rw-r--r--  1 akira users  8302  5月 10 11:24 fontconfig-paths.diff
-rw-r--r--  1 akira users  1053  5月 10 11:24 jdk7-openjdk.install
-rw-r--r--  1 akira users   974  5月 10 11:24 jre7-openjdk-headless.install
-rw-r--r--  1 akira users  1201  5月 10 11:24 jre7-openjdk.install
-rw-r--r--  1 akira users  2324  5月 10 11:24 openjdk7_nonreparenting-wm.diff
</pre>

<p>
<code>PKGBUILD</code> ファイルにデバッグビルドオプションを有効化する。
</p>
<ol class="org-ol">
<li><code>--enable-native-debuginfo=yes</code> build with native code debuginfo [default=yes]
</li>
<li><code>--enable-java-debuginfo=yes</code> build with Java bytecode debuginfo [default=yes]
</li>
<li><code>make icedtea-debug</code> デバッグビルドターゲットに変える
</li>
</ol>

<p>
<code>1</code> と <code>2</code> の規定値は <code>yes</code> なので、指定しなくても問題ありません。 <code>3</code> が肝ですね。
</p>

<div class="org-src-container">

<pre class="src src-sh">  ..........&#30465;&#30053;.........
  |build() {
  |  <span style="color: #63b8ff;">cd</span> <span style="color: #bcee68; font-style: italic;">"${srcdir}/icedtea-${_icedtea_ver}"</span>
  | 
  |  <span style="color: #63b8ff;">export</span> <span style="color: #ff6347;">ALT_PARALLEL_COMPILE_JOBS</span>=<span style="color: #bcee68; font-style: italic;">"${MAKEFLAGS/-j}"</span>
  |  <span style="color: #63b8ff;">export</span> <span style="color: #ff6347;">HOTSPOT_BUILD_JOBS</span>=<span style="color: #bcee68; font-style: italic;">"${ALT_PARALLEL_COMPILE_JOBS}"</span>
  | 
  |  <span style="color: #63b8ff;">.</span> /etc/profile.d/apache-ant.sh
  | 
  |  cp <span style="color: #bcee68; font-style: italic;">"${srcdir}"</span>/*.diff <span style="color: #bcee68; font-style: italic;">"${srcdir}"</span>/icedtea-${<span style="color: #ff6347;">_icedtea_ver</span>}/patches
  |  <span style="color: #63b8ff;">export</span> <span style="color: #ff6347;">DISTRIBUTION_PATCHES</span>=<span style="color: #bcee68; font-style: italic;">"patches/fontconfig-paths.diff \</span>
<span style="color: #bcee68; font-style: italic;">  |                               patches/openjdk7_nonreparenting-wm.diff"</span>
  | 
  |  <span style="color: #00bfff; font-weight: bold;">if</span> [ <span style="color: #bcee68; font-style: italic;">"$_bootstrap"</span> = <span style="color: #bcee68; font-style: italic;">"1"</span> ]; <span style="color: #00bfff; font-weight: bold;">then</span>
  |     <span style="color: #ff6347;">BOOTSTRAPOPT</span>=<span style="color: #bcee68; font-style: italic;">"--enable-bootstrap --with-ecj-jar=/usr/share/java/ecj.jar"</span>
  |   <span style="color: #00bfff; font-weight: bold;">else</span>
  |     <span style="color: #ff6347;">BOOTSTRAPOPT</span>=<span style="color: #bcee68; font-style: italic;">"--disable-bootstrap"</span>
  |  <span style="color: #00bfff; font-weight: bold;">fi</span>
  | 
  |  ./configure <span style="color: #bcee68; font-style: italic;">\</span>
  |        ${<span style="color: #ff6347;">BOOTSTRAPOPT</span>} <span style="color: #bcee68; font-style: italic;">\</span>
  |        --with-parallel-jobs=<span style="color: #bcee68; font-style: italic;">"${MAKEFLAGS/-j}"</span> <span style="color: #bcee68; font-style: italic;">\</span>
  |        --disable-tests <span style="color: #bcee68; font-style: italic;">\</span>
  |        --disable-downloading --disable-Werror <span style="color: #bcee68; font-style: italic;">\</span>
  |        --with-pkgversion=<span style="color: #bcee68; font-style: italic;">"Arch Linux build ${pkgver}-${pkgrel}-${CARCH}"</span> <span style="color: #bcee68; font-style: italic;">\</span>
  |        --with-jdk-home=${<span style="color: #ff6347;">JAVA_HOME</span>} <span style="color: #bcee68; font-style: italic;">\</span>
  |        --with-openjdk-src-zip=<span style="color: #bcee68; font-style: italic;">"${srcdir}/icedtea_${_icedtea_ver}_openjdk.tar.bz2"</span> <span style="color: #bcee68; font-style: italic;">\</span>
  |        --with-hotspot-src-zip=<span style="color: #bcee68; font-style: italic;">"${srcdir}/icedtea_${_icedtea_ver}_hotspot.tar.bz2"</span> <span style="color: #bcee68; font-style: italic;">\</span>
  |        --with-corba-src-zip=<span style="color: #bcee68; font-style: italic;">"${srcdir}/icedtea_${_icedtea_ver}_corba.tar.bz2"</span> <span style="color: #bcee68; font-style: italic;">\</span>
  |        --with-jaxp-src-zip=<span style="color: #bcee68; font-style: italic;">"${srcdir}/icedtea_${_icedtea_ver}_jaxp.tar.bz2"</span> <span style="color: #bcee68; font-style: italic;">\</span>
  |        --with-jaxws-src-zip=<span style="color: #bcee68; font-style: italic;">"${srcdir}/icedtea_${_icedtea_ver}_jaxws.tar.bz2"</span> <span style="color: #bcee68; font-style: italic;">\</span>
  |        --with-jdk-src-zip=<span style="color: #bcee68; font-style: italic;">"${srcdir}/icedtea_${_icedtea_ver}_jdk.tar.bz2"</span> <span style="color: #bcee68; font-style: italic;">\</span>
  |        --with-langtools-src-zip=<span style="color: #bcee68; font-style: italic;">"${srcdir}/icedtea_${_icedtea_ver}_langtools.tar.bz2"</span> <span style="color: #bcee68; font-style: italic;">\</span>
  |        --enable-nss <span style="color: #bcee68; font-style: italic;">\</span>
  |        --with-rhino <span style="color: #bcee68; font-style: italic;">\</span>
  |        --with-abs-install-dir=${<span style="color: #ff6347;">_jvmdir</span>} <span style="color: #bcee68; font-style: italic;">\</span>
1.|        --enable-native-debuginfo=yes <span style="color: #bcee68; font-style: italic;">\</span>
2.|        --enable-java-debuginfo=yes <span style="color: #bcee68; font-style: italic;">\</span>
  |        --enable-infinality=no
  |        <span style="color: #888a85;"># </span><span style="color: #888a85;">TODO latest version of openjdk will disable infinality by default</span>
  |
3.|    make icedtea-debug
  |}
  ..........&#30465;&#30053;.........
</pre>
</div>

<p>
あとは <a href="https://archlinuxjp.kusakata.com/wiki/Makepkg">makepkg</a> でビルドするだけです。コーヒーいっぱい分の時間かかります。
</p>
<pre class="example">
$ makepkg
==&gt; パッケージを作成: java7-openjdk 7.u79_2.5.5-1 (2015年  5月 10日 日曜日 11:43:40 JST)
==&gt; ランタイムの依存関係を確認...
==&gt; ビルドタイムの依存関係を確認...
==&gt; ソースを取得...
..........省略.........

★肝心のhotspotビルド
########################################################################
##### Entering hotspot for target(s) all_debug                     #####
########################################################################
..........省略.........

★ビルド時のオプション
g++ 
-DLINUX
-D_GNU_SOURCE 
-DAMD64 
-DASSERT 
-DDEBUG -I. -I/home/akira/temp/java7-openjdk/src/icedtea-2.5.5/openjdk/hotspot/src/share/vm/prims -I/home/akira/temp/java7-openjdk/src/icedtea-2.5.5/openjdk/hotspot/src/share/vm -I/home/akira/temp/java7-openjdk/src/icedtea-2.5.5/openjdk/hotspot/src/share/vm/precompiled -I/home/akira/temp/java7-openjdk/src/icedtea-2.5.5/openjdk/hotspot/src/cpu/x86/vm -I/home/akira/temp/java7-openjdk/src/icedtea-2.5.5/openjdk/hotspot/src/os_cpu/linux_x86/vm -I/home/akira/temp/java7-openjdk/src/icedtea-2.5.5/openjdk/hotspot/src/os/linux/vm -I/home/akira/temp/java7-openjdk/src/icedtea-2.5.5/openjdk/hotspot/src/os/posix/vm -I../generated 
-DHOTSPOT_RELEASE_VERSION="\"24.79-b02\"" 
-DHOTSPOT_BUILD_TARGET="\"jvmg\"" 
-DHOTSPOT_BUILD_USER="\"akira\"" 
-DHOTSPOT_LIB_ARCH=\"amd64\" 
-DHOTSPOT_VM_DISTRO="\"OpenJDK\"" 
-DDERIVATIVE_ID="\"IcedTea 2.5.5\"" 
-DDISTRIBUTION_ID="\"Arch Linux, package Arch Linux build 7.u79_2.5.5-1-x86_64\""
-march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong --param=ssp-buffer-size=4
-DTARGET_OS_FAMILY_linux 
-DTARGET_ARCH_x86 
-DTARGET_ARCH_MODEL_x86_64 
-DTARGET_OS_ARCH_linux_x86 
-DTARGET_OS_ARCH_MODEL_linux_x86_64 
-DTARGET_COMPILER_gcc 
-DCOMPILER2 
-DCOMPILER1  -fno-rtti -fno-exceptions 
-D_REENTRANT -fcheck-new -fvisibility=hidden -m64 -pipe -g 
-DTARGET_OS_FAMILY_linux 
-DTARGET_ARCH_x86 
-DTARGET_ARCH_MODEL_x86_64 
-DTARGET_OS_ARCH_linux_x86 
-DTARGET_OS_ARCH_MODEL_linux_x86_64 
-DTARGET_COMPILER_gcc 
-DCOMPILER2 
-DCOMPILER1 -fpic -fno-rtti -fno-exceptions 
-D_REENTRANT -fcheck-new -fvisibility=hidden -m64 -pipe 
★カスタマイズdebugビルドフラグ
-g -finstrument-functions -fvar-tracking-assignments -rdynamic
-D_NMT_NOINLINE_ 
-DVM_LITTLE_ENDIAN 
-D_LP64=1 -fno-omit-frame-pointer 
-DINCLUDE_TRACE=1  -Wpointer-arith -Wsign-compare    -c -fpch
-Deps -MMD -MP -MF ../generated/dependencies/osThread_linux.o.d -o osThread_linux.o /home/akira/temp/java7-openjdk/src/icedtea-2.5.5/openjdk/hotspot/src/os/linux/vm/osThread_linux.cpp

Compiling /home/akira/temp/java7-openjdk/src/icedtea-2.5.5/openjdk/hotspot/src/os/linux/vm/os_linux.cpp

..........省略.........

-- Build times ----------
Target all_product_build
Start 2015-05-10 11:43:19
End   2015-05-10 12:41:39
00:09:54 corba
00:11:03 hotspot
00:01:15 jaxp
00:01:25 jaxws
00:31:45 jdk
00:02:58 langtools
00:58:20 TOTAL
-------------------------
..........省略.........
</pre>

<p>
僕の環境では約1時間ぐらいかかりました。
</p>
<ul class="org-ul">
<li>CPU: Intel(R) Core(TM) i5-2557M CPU @ 1.70GHz
</li>
<li>Memory: 4G
</li>
<li>SSD
</li>
</ul>


<p>
ビルド成果物はワークディレクトリの下記場所に出力される。
</p>
<table border="2" cellspacing="0" cellpadding="6" rules="groups" frame="hsides">


<colgroup>
<col  class="left" />

<col  class="left" />
</colgroup>
<tbody>
<tr>
<td class="left">デバッグ版OpenJDK</td>
<td class="left">src/icedtea-2.5.5/openjdk.build-debug</td>
</tr>

<tr>
<td class="left">hotspot単体</td>
<td class="left">src/icedtea-2.5.5/openjdk.build-debug/hotspot/outputdir/linux_amd64_compiler2/jvmg</td>
</tr>
</tbody>
</table>
</div>
</div>




<div id="outline-container-sec-3" class="outline-2">
<h2 id="sec-3"><span class="section-number-2">3</span> gdbでデバッグしてみる</h2>
<div class="outline-text-2" id="text-3">
<ol class="org-ol">
<li>hotspot単体の出力先へ移動する
</li>
<li><code>-gdb</code> オプションを付けて <code>./hotspot</code> を起動する
</li>
<li>デバッグ版のJVMランチャーに既にBreakpointが設定されている
</li>
<li><code>p</code> で変数の値を確認する
</li>
<li><code>next</code> でステップオーバーでデバッグする
</li>
<li><code>step</code> でステップインでデバッグする
</li>
<li><code>backtrace</code> でスタックトレースを確認する
</li>
<li><code>continue</code> で最後まで実行される
</li>
</ol>

<pre class="example">
1.|$ cd src/icedtea-2.5.5/openjdk.build-debug/hotspot/outputdir/linux_amd64_compiler2/jvmg
2.|$ ./hotspot -gdb -version
  |GNU gdb (GDB) 7.9
  |Copyright (C) 2015 Free Software Foundation, Inc.
  |License GPLv3+: GNU GPL version 3 or later &lt;http://gnu.org/licenses/gpl.html&gt;
  |This is free software: you are free to change and redistribute it.
  |There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
  |and "show warranty" for details.
  |This GDB was configured as "x86_64-unknown-linux-gnu".
  |Type "show configuration" for configuration details.
  |For bug reporting instructions, please see:
  |&lt;http://www.gnu.org/software/gdb/bugs/&gt;.
  |Find the GDB manual and other documentation resources online at:
  |&lt;http://www.gnu.org/software/gdb/documentation/&gt;.
  |For help, type "help".
  |Type "apropos word" to search for commands related to "word".
  |Breakpoint 1 at 0x4042f7: file /home/akira/temp/java7-openjdk/src/icedtea-2.5.5/openjdk/hotspot/src/share/tools/launcher/java.c, line 1270.
  |[Thread debugging using libthread_db enabled]
  |Using host libthread_db library "/usr/lib/libthread_db.so.1".
  |Using java runtime at: /home/akira/temp/java7-openjdk/src/icedtea-2.5.5/bootstrap/jdk1.6.0/jre
  |[New Thread 0x7ffff7fa6700 (LWP 15629)]
  |[Switching to Thread 0x7ffff7fa6700 (LWP 15629)]
  | 
3.|Breakpoint 1, InitializeJVM (pvm=0x7ffff7fa5e38, penv=0x7ffff7fa5e30, ifn=0x7ffff7fa5e40)
  |    at /home/akira/temp/java7-openjdk/src/icedtea-2.5.5/openjdk/hotspot/src/share/tools/launcher/java.c:1270
  |1270     memset(&amp;args, 0, sizeof(args));
4.|(gdb) p args
  |$1 = {version = 0, nOptions = 0, options = 0x0, ignoreUnrecognized = 0 '\000'}
5.|(gdb) next
  |1271     args.version  = JNI_VERSION_1_2;
  |(gdb) next
  |1272     args.nOptions = numOptions;
  |(gdb) next
  |1273     args.options  = options;
  |(gdb) next
  |1274     args.ignoreUnrecognized = JNI_FALSE;
  |(gdb) next
  |1276     if (_launcher_debug) {
  |(gdb) next
  |1288     r = ifn-&gt;CreateJavaVM(pvm, (void **)penv, &amp;args);
6.|(gdb) step
  |JNI_CreateJavaVM (vm=0x7ffff7fa5e38, penv=0x7ffff7fa5e30, args=0x7ffff7fa5df0)
  |    at /home/akira/temp/java7-openjdk/src/icedtea-2.5.5/openjdk/hotspot/src/share/vm/prims/jni.cpp:5121
  |5121   if (Atomic::xchg(1, &amp;vm_created) == 1) {
7.|(gdb) backtrace 
  |#0  JNI_CreateJavaVM (vm=0x7ffff7fa5e38, penv=0x7ffff7fa5e30, args=0x7ffff7fa5df0)
  |    at /home/akira/temp/java7-openjdk/src/icedtea-2.5.5/openjdk/hotspot/src/share/vm/prims/jni.cpp:5121
  |#1  0x00000000004043fd in InitializeJVM (pvm=0x7ffff7fa5e38, penv=0x7ffff7fa5e30, ifn=0x7ffff7fa5e40)
  |    at /home/akira/temp/java7-openjdk/src/icedtea-2.5.5/openjdk/hotspot/src/share/tools/launcher/java.c:1288
  |#2  0x00000000004031ea in JavaMain (_args=0x7fffffffc080)
  |    at /home/akira/temp/java7-openjdk/src/icedtea-2.5.5/openjdk/hotspot/src/share/tools/launcher/java.c:423
  |#3  0x00007ffff5c17374 in start_thread () from /usr/lib/libpthread.so.0
  |#4  0x00007ffff595527d in clone () from /usr/lib/libc.so.6
8.|(gdb) continue
  |Continuing.
  |java version "1.7.0_79"
  |OpenJDK Runtime Environment (IcedTea 2.5.5) (Arch Linux build 7.u79_2.5.5-1-x86_64)
  |OpenJDK 64-Bit Server VM (build 24.79-b02-jvmg, mixed mode)
  |[Thread 0x7ffff7fa6700 (LWP 16481) exited]
  [Thread 0x7ffff7fa8740 (LWP 16477) exited]
  [Inferior 1 (process 16477) exited normally]
  (gdb) q
  $
</pre>
</div>
</div>




<div id="outline-container-sec-4" class="outline-2">
<h2 id="sec-4"><span class="section-number-2">4</span> valgrindでコールグラフ出してみる</h2>
<div class="outline-text-2" id="text-4">
<p>
valgrindでコールグラフを出してみました。
</p>

<p>
必要なパッケージを入れておく。
</p>
<pre class="example">
$ sudo pacman -S valgrind
$ sudo pacman -S kdesdk-kcachegrind
</pre>

<ol class="org-ol">
<li>デバッグ版OpenJDKの出力先へ移動する
</li>
<li><code>valgrind</code> カーバーして <code>java -version</code> を実行する
</li>
<li><code>kcachegrind</code> で出力結果を解析する
</li>
</ol>

<pre class="example">
1.|$ cd src/icedtea-2.5.5/openjdk.build-debug
2.|$ valgrind --tool=callgrind bin/java -version
  |==18306== Callgrind, a call-graph generating cache profiler
  |==18306== Copyright (C) 2002-2013, and GNU GPL'd, by Josef Weidendorfer et al.
  |==18306== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info
  |==18306== Command: bin/java -version
  |==18306== 
  |==18306== For interactive control, run 'callgrind_control -h'.
  |java version "1.7.0_79-debug"
  |OpenJDK Runtime Environment (IcedTea 2.5.5) (Arch Linux build 7.u79_2.5.5-1-x86_64)
  |OpenJDK 64-Bit Server VM (build 24.79-b02-jvmg, mixed mode)
  |==18306== 
  |==18306== Events    : Ir
  |==18306== Collected : 1610140735
  |==18306== 
  |==18306== I   refs:      1,610,140,735
  |$ ls -al callgrind.out.*
  |-rw------- 1 akira users 5003407  5月 10 12:50 callgrind.out.18306
3.|$ kcachegrind callgrind.out.18306
</pre>

<p>
コールグラフ
</p>


<div class="figure">
<p><img src="img/20150510125343_callgrind.png" alt="20150510125343_callgrind.png" />
</p>
</div>

<p>
バッチリですね！
</p>
</div>
</div>




<div id="outline-container-sec-5" class="outline-2">
<h2 id="sec-5"><span class="section-number-2">5</span> 参考</h2>
<div class="outline-text-2" id="text-5">
<ul class="org-ul">
<li><a href="https://sourceware.org/gdb/onlinedocs/gdb/Variables.html">Variables - Debugging with GDB</a>
</li>
</ul>
</div>
</div>

]]></content>
  </entry>
  
</feed>
