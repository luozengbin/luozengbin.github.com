<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: Passwd | Akira's Tech Notes]]></title>
  <link href="http://luozengbin.github.io/blog/tags/passwd/atom.xml" rel="self"/>
  <link href="http://luozengbin.github.io/"/>
  <updated>2015-05-10T02:01:34+09:00</updated>
  <id>http://luozengbin.github.io/</id>
  <author>
    <name><![CDATA[luozengbin]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[[レシピ]Kerbroseパスワード変更ためのPAM設定]]></title>
    <link href="http://luozengbin.github.io/blog/2014-08-16-%5B%E3%83%AC%E3%82%B7%E3%83%94%5Dkerbrose%E3%83%91%E3%82%B9%E3%83%AF%E3%83%BC%E3%83%89%E5%A4%89%E6%9B%B4%E3%81%9F%E3%82%81%E3%81%AEpam%E8%A8%AD%E5%AE%9A.html"/>
    <updated>2014-08-16T00:00:00+09:00</updated>
    <id>http://luozengbin.github.io/blog/[レシピ]kerbroseパスワード変更ためのpam設定</id>
    <content type="html"><![CDATA[<p>
前の記事で <code>pam_krb5</code> モジュールでKerbrose認証を実現しました。ここで <code>passwd</code> コマン
ドラインでKDCに登録されたプリンシバル鍵のパスワードを変更する方法を紹介します。
</p>




<p>
<!-- more -->
</p>




<p>
<code>passwd</code> コマンド実行時に裏で動いているのはPAMモジュールですので、
<code>/etc/pam.d./passwd</code> に <code>pam_kbr5</code> モジュールを適用するようにすれば、パスワード変更時
に自動的にKDCのデータベースに反映されます。
</p>




<p>
<code>/etc/pam.d./passwd</code>
</p>


<pre class="example">
#%PAM-1.0
password        requisite       pam_cracklib.so retry=3 difok=1 minlen=8 dcredit=-1
password        sufficient      pam_unix.so sha512 shadow nullok use_authtok
password        sufficient      pam_krb5.so   ★ここです
password        required        pam_deny.so
</pre>




<p>
パスワード変更を実行してみましょう。
</p>


<pre class="example">
[kbr_u01@mimi ~]$ passwd
Kerberos 5 パスワード:                     ★現在のパスワードが聞かれる
新しいパスワード:
新しいパスワードを再入力してください:
passwd: パスワードは正しく更新されました
[kbr_u01@mimi ~]$
</pre>




<p>
パスワード変更時のシスログ
</p>


<pre class="example">
Aug 16 19:01:38 mimi passwd[15359]: pam_unix(passwd:chauthtok): user "kbr_u01" does not exist in /etc/passwd
Aug 16 19:01:38 mimi passwd[15359]: pam_krb5[15359]: password changed for kbr_u01@JIZAI-DOMAIN.JP
Aug 16 19:01:38 mimi passwd[15359]: pam_krb5[15359]: TGT verified using key for 'host/mimi.jizai-domain.jp@JIZAI-DOMAIN.JP'
</pre>




<p>
KDCサーバ側のログ
</p>


<pre class="example">
2014-08-16T19:34:36+09:00 pipi local5 info krb5kdc[28554]:  AS_REQ (6 etypes {18 17 16 23 25 26}) 192.168.100.10: ISSUE: authtime 1408185276, etypes {rep=18 tkt=18 ses=18}, kbr_u01@JIZAI-DOMAIN.JP for kadmin/changepw@JIZAI-DOMAIN.JP
2014-08-16T19:34:36+09:00 pipi local5 info krb5kdc[28554]:  AS_REQ (6 etypes {18 17 16 23 25 26}) 192.168.100.10: ISSUE: authtime 1408185276, etypes {rep=18 tkt=18 ses=18}, kbr_u01@JIZAI-DOMAIN.JP for kadmin/changepw@JIZAI-DOMAIN.JP

2014-08-16T19:34:59+09:00 pipi local5 info krb5kdc[28554]:  AS_REQ (6 etypes {18 17 16 23 25 26}) 192.168.100.10: ISSUE: authtime 1408185299, etypes {rep=18 tkt=18 ses=18}, kbr_u01@JIZAI-DOMAIN.JP for krbtgt/JIZAI-DOMAIN.JP@JIZAI-DOMAIN.JP
2014-08-16T19:34:59+09:00 pipi local5 info krb5kdc[28554]:  AS_REQ (6 etypes {18 17 16 23 25 26}) 192.168.100.10: ISSUE: authtime 1408185299, etypes {rep=18 tkt=18 ses=18}, kbr_u01@JIZAI-DOMAIN.JP for krbtgt/JIZAI-DOMAIN.JP@JIZAI-DOMAIN.JP
2014-08-16T19:34:59+09:00 pipi local5 info krb5kdc[28554]:  TGS_REQ (6 etypes {18 17 16 23 25 26}) 192.168.100.10: ISSUE: authtime 1408185299, etypes {rep=18 tkt=18 ses=18}, kbr_u01@JIZAI-DOMAIN.JP for host/mimi.jizai-domain.jp@JIZAI-DOMAIN.JP
2014-08-16T19:34:59+09:00 pipi local5 info krb5kdc[28554]:  TGS_REQ (6 etypes {18 17 16 23 25 26}) 192.168.100.10: ISSUE: authtime 1408185299, etypes {rep=18 tkt=18 ses=18}, kbr_u01@JIZAI-DOMAIN.JP for host/mimi.jizai-domain.jp@JIZAI-DOMAIN.JP
</pre>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[レシピ]ローカルシステムのUIDの抽出]]></title>
    <link href="http://luozengbin.github.io/blog/2014-08-12-%5B%E3%83%AC%E3%82%B7%E3%83%94%5D%E3%83%AD%E3%83%BC%E3%82%AB%E3%83%AB%E3%82%B7%E3%82%B9%E3%83%86%E3%83%A0%E3%81%AEuid%E3%81%AE%E6%8A%BD%E5%87%BA.html"/>
    <updated>2014-08-12T00:00:00+09:00</updated>
    <id>http://luozengbin.github.io/blog/[レシピ]ローカルシステムのuidの抽出</id>
    <content type="html"><![CDATA[<p>
LDAPにユーザID定義時にローカルシステムのUIDと被らないように、ローカルシステムのUIDと
GIDを抽出してみた。
</p>




<p>
ユーザID、1000番代以下はシステム予約番号のことがすぐわかる。
</p>


<pre class="example">
$ cat /etc/passwd | awk -F: '{print $3 "\t" $1}' | sort -n
0   root
1   bin
2   daemon
8   mail
14  ftp
32  rpc
33  http
40  named
68  uuidd
74  dovenull
76  dovecot
81  dbus
84  avahi
87  ntp
89  mysql
99  nobody
102 polkitd
124 colord
169 transmission
191 systemd-journal-gateway
192 systemd-timesync
193 systemd-network
194 systemd-bus-proxy
195 systemd-resolve
241 mediatomb
439 ldap
998 dnsmasq
999 git
1000    akira
1002    amule
</pre>




<p>
グループID一覧
</p>


<pre class="example">
$ cat /etc/group | awk -F: '{print $3 "\t" $1}' | sort -n
0   root
1   bin
2   daemon
3   sys
4   adm
5   tty
6   disk
7   lp
8   mem
9   kmem
10  wheel
11  ftp
12  mail
14  uucp
19  log
20  utmp
21  locate
24  rfkill
25  smmsp
32  rpc
33  http
40  named
50  games
54  lock
68  uuidd
74  dovenull
76  dovecot
81  dbus
84  avahi
87  ntp
89  mysql
90  network
91  video
92  audio
93  optical
94  floppy
95  storage
96  scanner
97  input
98  power
99  nobody
100 users
102 polkitd
124 colord
169 transmission
190 systemd-journal
191 systemd-journal-gateway
192 systemd-timesync
193 systemd-network
194 systemd-bus-proxy
195 systemd-resolve
241 mediatomb
439 ldap
998 dnsmasq
999 git
1002    g001
1003    g002
1004    g003
1005    amule
</pre>




<p>
<code>sort</code> コマンドで数字順でソートするためのオプションが <code>-n</code> であることを復習致しました。
</p>

]]></content>
  </entry>
  
</feed>
