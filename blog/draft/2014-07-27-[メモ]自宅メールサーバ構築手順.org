#+TITLE: [メモ]自宅メールサーバ構築手順
#+DATE: 2014-07-27
#+SETUPFILE: ~/.emacs.d/blogs/octopress/setupfile.org
#+JEKYLL_LAYOUT: post
#+JEKYLL_CATEGORIES: linux
#+JEKYLL_TAGS: postfix
#+JEKYLL_COMMENTS: true
#+JEKYLL_PUBLISHED: true

{{{more}}}

* postfixサーバのインストール

* postfixでメール受信時の暗号化
https://www.compnet.jp/index.php/archives/2382
https://www.compnet.jp/index.php/archives/2133

Postfix で SMTPS や STARTTLS コマンドを使ってメールを受け付けられるようにする。

port 465

* postfixからのメール送信を暗号化する

https://www.compnet.jp/index.php/archives/3175

メールサーバー間の通信は SMTP なので、暗号化するには SMTPS (465 番ポート) で繋いで最初
から暗号化するか、SMTP (25 番ポートまたは 587 番ポート) で繋いでから STARTTLS コマンド
を使って暗号化するかのどちらかだ。

信先のメール サーバーが SMTPS や STATTLS に対応しているかを、予め知ることは不可能だ。
このため、まずは SMTPS で繋いでみて、エラーになったら次は SMTP で繋ぎ直して STARTTLS
を試みるといった手順にならざるを得ないだろう。


* メーラーに対してSMTP-authを有効化
https://www.compnet.jp/index.php/archives/2377
https://www.compnet.jp/index.php/archives/2064

OP25B (Outbound Port 25 Blocking) に対処するための submission ポート (587/tcp) を使っ
たメールの受付ができるようにもする。

port 587 submission

/etc/sasl2/smtpd.conf
#+begin_example
# ログ出力レベル
log_level: 3
# 認証に何を利用するかを指定します。デフォルトはauxprop
# pwcheck_method: saslauthd
pwcheck_method: auxprop
# auxprop_plugin: sasldb
mech_list: cram-md5 digest-md5 plain login 
#+end_example

#+begin_example
#=======================================================================
# SMTP受信の認証設定
#=======================================================================
# SASLによるSMTP認証を使用
smtpd_sasl_auth_enable = yes

# sasl認証に対応していないメーラは拒否
broken_sasl_auth_clients = yes

# 使用可能な認証メカニズムの設定
#   noanonymous : 匿名での接続を拒否。
#   noplaintext : PLAIN認証を拒否(Outlook ExpressはPLAIN認証のみ対応）
# smtp_sasl_security_options = noplaintext, noanonymous
smtpd_sasl_security_options = noanonymous

# ローカル認証 realm の名前を設定
# smtpd_sasl_local_domainの値とsasldblistusersを実行した際のrealmが一致しないと認証に失敗します
# Postfixのデフォルトはmyhostnameである。
# 実はここで大嵌りで、PAM 認証の場合はここは設定なしのままでないと認証できないので注意が必要。
# 但し、これはsaslauthdによるPAM 認証の場合で、sasl パスワード認証の場合は、myorigin で設定した
# ドメイン(ホスト)名と同一の値を設定しないと、認証に失敗する。
smtpd_sasl_local_domain = $myorigin
#+end_example



* ルータの設定

#+begin_example
★IPマスカレード
# nat descriptor masquerade static 1000 11 192.168.100.3 tcp 25=25

★フィルター追加
# ip filter 200090 pass * 192.168.100.3 tcp * smtp

★wan側のNICにフィルターを適用する 「...」は既存のフィルターID
# ip lan2 secure filter in ... 200090
#+end_example

設定解除
#+begin_example
# no nat descriptor masquerade static 1000 11
# no ip filter 200090
★「...」から200090を場外する
# ip lan2 secure filter in ...
#+end_example


* DDNSサービスにメールサーバ情報を公開する

#+begin_example
$ dig any hoge.mydns.jp

; <<>> DiG 9.9.2-P2 <<>> any hoge.mydns.jp
;; global options: +cmd
;; Got answer:
;; ->>HEADER<<- opcode: QUERY, status: NOERROR, id: 3928
;; flags: qr rd ra; QUERY: 1, ANSWER: 7, AUTHORITY: 3, ADDITIONAL: 1

;; OPT PSEUDOSECTION:
; EDNS: version: 0, flags:; udp: 4096
;; QUESTION SECTION:
;hoge.mydns.jp.			IN	ANY

;; ANSWER SECTION:
hoge.mydns.jp.		299	IN	MX	10 mail.hoge.mydns.jp.
hoge.mydns.jp.		299	IN	NS	ns0.mydns.jp.
hoge.mydns.jp.		299	IN	NS	ns2.mydns.jp.
hoge.mydns.jp.		299	IN	NS	ns1.mydns.jp.
hoge.mydns.jp.		299	IN	SOA	hoge.mydns.jp. root.mydns.jp. 1406446897 600 180 600 300
hoge.mydns.jp.		299	IN	TXT	"v=spf1 +ip4:xxx.xxx.xxx.xxx a:auth.gate-on.net a mx -all"
hoge.mydns.jp.		299	IN	A	xxx.xxx.xxx.xxx

;; AUTHORITY SECTION:
hoge.mydns.jp.		299	IN	NS	ns1.mydns.jp.
hoge.mydns.jp.		299	IN	NS	ns2.mydns.jp.
hoge.mydns.jp.		299	IN	NS	ns0.mydns.jp.

;; Query time: 94 msec
;; SERVER: 127.0.0.1#53(127.0.0.1)
;; WHEN: Sun Jul 27 17:43:19 2014
;; MSG SIZE  rcvd: 286

$
#+end_example


